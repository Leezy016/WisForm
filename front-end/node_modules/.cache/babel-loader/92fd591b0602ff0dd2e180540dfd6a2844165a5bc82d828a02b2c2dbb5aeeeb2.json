{"ast":null,"code":"// router/index.js\n\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport AdminDashboard from '../views/AdminDashboard.vue';\nimport UserDashboard from '../views/UserDashboard.vue';\nimport DynamicForm from '../components/DynamicForm.vue';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'UserDashboard',\n  component: UserDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'user'\n  }\n}, {\n  path: '/admin',\n  name: 'AdminDashboard',\n  component: AdminDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n}, {\n  path: '/dynamic-form',\n  name: 'DynamicForm',\n  component: DynamicForm,\n  meta: {\n    requiresAuth: true,\n    role: 'user'\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Login.vue')\n}, {\n  path: '*',\n  redirect: '/login'\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = localStorage.getItem('isAuthenticated');\n  const role = localStorage.getItem('role');\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isAuthenticated) {\n      next({\n        name: 'Login'\n      });\n    } else {\n      if (to.meta.role !== role) {\n        next({\n          name: 'UserDashboard'\n        }); // Redirect to user dashboard if role does not match\n      } else {\n        next();\n      }\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","AdminDashboard","UserDashboard","DynamicForm","use","routes","path","name","component","meta","requiresAuth","role","redirect","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","matched","some","record"],"sources":["C:/Users/32118/Desktop/无脑赶工/my-project/src/router/index.js"],"sourcesContent":["// router/index.js\r\n\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\nimport AdminDashboard from '../views/AdminDashboard.vue';\r\nimport UserDashboard from '../views/UserDashboard.vue';\r\nimport DynamicForm from '../components/DynamicForm.vue';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        name: 'UserDashboard',\r\n        component: UserDashboard,\r\n        meta: {\r\n            requiresAuth: true,\r\n            role: 'user'\r\n        }\r\n    },\r\n    {\r\n        path: '/admin',\r\n        name: 'AdminDashboard',\r\n        component: AdminDashboard,\r\n        meta: {\r\n            requiresAuth: true,\r\n            role: 'admin'\r\n        }\r\n    },\r\n    {\r\n        path: '/dynamic-form',\r\n        name: 'DynamicForm',\r\n        component: DynamicForm,\r\n        meta: {\r\n            requiresAuth: true,\r\n            role: 'user'\r\n        }\r\n    },\r\n    {\r\n        path: '/login',\r\n        name: 'Login',\r\n        component: () => import('../views/Login.vue')\r\n    },\r\n    {\r\n        path: '*',\r\n        redirect: '/login'\r\n    }\r\n];\r\n\r\nconst router = new VueRouter({\r\n    mode: 'history',\r\n    base: process.env.BASE_URL,\r\n    routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    const isAuthenticated = localStorage.getItem('isAuthenticated');\r\n    const role = localStorage.getItem('role');\r\n\r\n    if (to.matched.some(record => record.meta.requiresAuth)) {\r\n        if (!isAuthenticated) {\r\n            next({ name: 'Login' });\r\n        } else {\r\n            if (to.meta.role !== role) {\r\n                next({ name: 'UserDashboard' }); // Redirect to user dashboard if role does not match\r\n            } else {\r\n                next();\r\n            }\r\n        }\r\n    } else {\r\n        next();\r\n    }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA;;AAEA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,WAAW,MAAM,+BAA+B;AAEvDJ,GAAG,CAACK,GAAG,CAACJ,SAAS,CAAC;AAElB,MAAMK,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEN,aAAa;EACxBO,IAAI,EAAE;IACFC,YAAY,EAAE,IAAI;IAClBC,IAAI,EAAE;EACV;AACJ,CAAC,EACD;EACIL,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEP,cAAc;EACzBQ,IAAI,EAAE;IACFC,YAAY,EAAE,IAAI;IAClBC,IAAI,EAAE;EACV;AACJ,CAAC,EACD;EACIL,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEL,WAAW;EACtBM,IAAI,EAAE;IACFC,YAAY,EAAE,IAAI;IAClBC,IAAI,EAAE;EACV;AACJ,CAAC,EACD;EACIL,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB;AAChD,CAAC,EACD;EACIF,IAAI,EAAE,GAAG;EACTM,QAAQ,EAAE;AACd,CAAC,CACJ;AAED,MAAMC,MAAM,GAAG,IAAIb,SAAS,CAAC;EACzBc,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1Bb;AACJ,CAAC,CAAC;AAEFQ,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;EAC/D,MAAMd,IAAI,GAAGa,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAEzC,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACnB,IAAI,CAACC,YAAY,CAAC,EAAE;IACrD,IAAI,CAACa,eAAe,EAAE;MAClBD,IAAI,CAAC;QAAEf,IAAI,EAAE;MAAQ,CAAC,CAAC;IAC3B,CAAC,MAAM;MACH,IAAIa,EAAE,CAACX,IAAI,CAACE,IAAI,KAAKA,IAAI,EAAE;QACvBW,IAAI,CAAC;UAAEf,IAAI,EAAE;QAAgB,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,MAAM;QACHe,IAAI,CAAC,CAAC;MACV;IACJ;EACJ,CAAC,MAAM;IACHA,IAAI,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}