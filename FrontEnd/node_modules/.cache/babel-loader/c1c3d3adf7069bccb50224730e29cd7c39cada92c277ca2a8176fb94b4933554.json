{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'page-ination',\n  props: ['total', 'size', 'page', 'changge', 'isUrl'],\n  data() {\n    return {\n      pageinationTotal: this.total,\n      //总条目数\n      pageinationSize: this.size ? this.size : 10,\n      //每页显示条目个数\n      pageinationLength: [],\n      pageinationCurrentPage: this.page ? this.page : 1,\n      //当前页数默认1\n      pageinationPage: 0,\n      //可分页数\n      startDisabled: true,\n      //是否可以点击首页上一页\n      endDisabled: true,\n      //是否可以点击尾页下一页\n      pageChangge: this.changge,\n      //修改方法\n      pageIsUrl: this.isUrl ? true : false //是否开启修改url\n    };\n  },\n  methods: {\n    jump(item) {\n      this.pageinationCurrentPage = item;\n      this.pagers();\n      this.pageChangge(this.pageinationCurrentPage);\n    },\n    //跳转页码\n    pagers() {\n      //可分页数\n      this.pageinationPage = Math.ceil(this.pageinationTotal / this.pageinationSize);\n\n      //url修改\n      if (this.pageIsUrl) {\n        this.$router.replace({\n          path: this.$route.path,\n          query: {\n            page: this.pageinationCurrentPage\n          }\n        });\n      }\n      //是否可以点击上一页首页\n      this.startDisabled = this.pageinationCurrentPage != 1 ? false : true;\n      //是否可以点击下一页尾页\n      this.endDisabled = this.pageinationCurrentPage != this.pageinationPage ? false : true;\n      if (this.pageinationPage == 0) this.endDisabled = true;\n\n      //重置\n      this.pageinationLength = [];\n      //开始页码1\n      let start = this.pageinationCurrentPage - 4 > 1 ? this.pageinationCurrentPage - 4 : 1;\n      //当前页码减去开始页码得到差\n      let interval = this.pageinationCurrentPage - start;\n      //最多9个页码，总页码减去interval 得到end要显示的数量+\n      let end = 9 - interval < this.pageinationPage ? 9 - interval : this.pageinationPage;\n      //最末页码减开始页码小于8\n      if (end - start != 8) {\n        //最末页码加上与不足9页的数量，数量不得大于总页数\n        end = end + (8 - (end - start)) < this.pageinationPage ? end + (8 - (end - start)) : this.pageinationPage;\n        //最末页码加上但是还不够9页，进行开始页码追加，开始页码不得小于1\n        if (end - start != 8) {\n          start = end - 8 > 1 ? end - 8 : 1;\n        }\n      }\n      for (let i = start; i <= end; i++) {\n        this.pageinationLength.push(i);\n      }\n    },\n    //计算分页显示的数字\n    pageUp(state) {\n      if (this.startDisabled) return;\n      if (this.pageinationCurrentPage - 1 != 0 && state == 1) {\n        this.jump(this.pageinationCurrentPage - 1);\n      } else {\n        this.jump(1);\n      }\n    },\n    //上一页跟首页 state=1是上一页 state=0是首页\n    pageDown(state) {\n      if (this.endDisabled) return;\n      if (this.pageinationCurrentPage + 1 != this.pageinationPage && state == 1) {\n        this.jump(this.pageinationCurrentPage + 1);\n      } else {\n        this.jump(this.pageinationPage);\n      }\n    },\n    // state=1是下一页 state=0是尾页\n    pageCurrentChange() {\n      this.pageChangge(this.pageinationCurrentPage);\n      this.pagers();\n    }\n  },\n  created() {\n    if (this.pageIsUrl) {\n      this.pageinationCurrentPage = this.$route.query.page;\n      this.pageChangge(this.pageinationCurrentPage);\n    }\n    this.pageCurrentChange();\n  },\n  watch: {\n    total: function (val, oldVal) {\n      this.pageinationTotal = val;\n      this.pagers();\n    },\n    page: function (val, oldVal) {\n      this.pageinationCurrentPage = val;\n      this.pagers();\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","pageinationTotal","total","pageinationSize","size","pageinationLength","pageinationCurrentPage","page","pageinationPage","startDisabled","endDisabled","pageChangge","changge","pageIsUrl","isUrl","methods","jump","item","pagers","Math","ceil","$router","replace","path","$route","query","start","interval","end","i","push","pageUp","state","pageDown","pageCurrentChange","created","watch","val","oldVal"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormViewDetail.vue"],"sourcesContent":["<template>\n  <div class=\"pageination_align\">\n    <div class=\"pageination\" v-if=\"pageinationTotal\">\n      <div @click=\"pageUp(0)\" class=\"pagination_page\" :class=\"startDisabled?'disabled':''\">首页</div>\n      <div @click=\"pageUp(1)\" class=\"pagination_page\" :class=\"startDisabled?'disabled':''\">上一页</div>\n      <div class=\"pagination_page\" :class=\"item==pageinationCurrentPage?'pagination_page_active':''\"\n           v-for=\"(item,index) in pageinationLength\" :key=\"index\" @click=\"jump(item)\">\n        {{item}}\n      </div>\n      <div @click=\"pageDown(1)\" class=\"pagination_page\" :class=\"endDisabled?'disabled':''\">下一页</div>\n      <div @click=\"pageDown(0)\" class=\"pagination_page pagination_page_right\" :class=\"endDisabled?'disabled':''\">尾页\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'page-ination',\n    props: ['total', 'size', 'page', 'changge', 'isUrl'],\n    data(){\n      return {\n        pageinationTotal: this.total,//总条目数\n        pageinationSize: this.size ? this.size : 10,//每页显示条目个数\n        pageinationLength: [],\n        pageinationCurrentPage: this.page ? this.page : 1,//当前页数默认1\n        pageinationPage: 0,//可分页数\n        startDisabled: true,//是否可以点击首页上一页\n        endDisabled: true,//是否可以点击尾页下一页\n        pageChangge: this.changge,//修改方法\n        pageIsUrl: this.isUrl ? true : false,//是否开启修改url\n      }\n    },\n    methods: {\n      jump(item){\n        this.pageinationCurrentPage = item;\n        this.pagers();\n        this.pageChangge(this.pageinationCurrentPage);\n      },//跳转页码\n      pagers(){\n        //可分页数\n        this.pageinationPage = Math.ceil(this.pageinationTotal / this.pageinationSize);\n\n        //url修改\n        if (this.pageIsUrl) {\n          this.$router.replace({\n            path: this.$route.path,\n            query: {\n              page: this.pageinationCurrentPage,\n            }\n          });\n        }\n        //是否可以点击上一页首页\n        this.startDisabled = this.pageinationCurrentPage != 1 ? false : true;\n        //是否可以点击下一页尾页\n        this.endDisabled = this.pageinationCurrentPage != this.pageinationPage ? false : true;\n        if(this.pageinationPage==0) this.endDisabled=true;\n\n        //重置\n        this.pageinationLength = [];\n        //开始页码1\n        let start = this.pageinationCurrentPage - 4 > 1 ? this.pageinationCurrentPage - 4 : 1;\n        //当前页码减去开始页码得到差\n        let interval = this.pageinationCurrentPage - start;\n        //最多9个页码，总页码减去interval 得到end要显示的数量+\n        let end = (9 - interval) < this.pageinationPage ? (9 - interval) : this.pageinationPage;\n        //最末页码减开始页码小于8\n        if ((end - start) != 8) {\n          //最末页码加上与不足9页的数量，数量不得大于总页数\n          end = end + (8 - (end - start)) < this.pageinationPage ? end + (8 - (end - start)) : this.pageinationPage;\n          //最末页码加上但是还不够9页，进行开始页码追加，开始页码不得小于1\n          if ((end - start) != 8) {\n            start = (end - 8) > 1 ? (end - 8) : 1;\n          }\n        }\n        for (let i = start; i <= end; i++) {\n          this.pageinationLength.push(i);\n        }\n      },//计算分页显示的数字\n      pageUp(state){\n        if (this.startDisabled)return;\n        if (this.pageinationCurrentPage - 1 != 0 && state == 1) {\n          this.jump(this.pageinationCurrentPage - 1);\n        } else {\n          this.jump(1);\n        }\n\n      },//上一页跟首页 state=1是上一页 state=0是首页\n      pageDown(state){\n        if (this.endDisabled)return;\n        if (this.pageinationCurrentPage + 1 != this.pageinationPage && state == 1) {\n          this.jump(this.pageinationCurrentPage + 1);\n        } else {\n          this.jump(this.pageinationPage);\n        }\n\n      },// state=1是下一页 state=0是尾页\n      pageCurrentChange(){\n        this.pageChangge(this.pageinationCurrentPage);\n        this.pagers();\n      }\n    },\n    created(){\n     if (this.pageIsUrl) {\n        this.pageinationCurrentPage=this.$route.query.page\n        this.pageChangge(this.pageinationCurrentPage);\n      }\n      this.pageCurrentChange();\n    },\n    watch: {\n      total: function (val, oldVal) {\n        this.pageinationTotal = val;\n        this.pagers();\n      },\n      page:function (val, oldVal) {\n        this.pageinationCurrentPage = val;\n        this.pagers();\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .pageination_align{\n    text-align: center\n  }\n  .pageination {\n    color: #48576a;\n    font-size: 12px;\n    display: inline-block;\n    user-select: none;\n  }\n\n  .pagination_page {\n    padding: 0 4px;\n    border: 1px solid #d1dbe5;\n    border-right: 0;\n    background: #fff;\n    font-size: 13px;\n    min-width: 28px;\n    height: 28px;\n    line-height: 28px;\n    cursor: pointer;\n    box-sizing: border-box;\n    text-align: center;\n    float: left;\n  }\n\n  .pagination_page_right {\n    border-right: 1px solid #d1dbe5;\n  }\n\n  .pagination_page:hover {\n    color: #20a0ff;\n  }\n\n  .disabled {\n    color: #e4e4e4 !important;\n    background-color: #fff;\n    cursor: not-allowed;\n  }\n\n  .pagination_page_active {\n    border-color: #20a0ff;\n    background-color: #20a0ff;\n    color: #fff !important;;\n    cursor: default;\n  }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}