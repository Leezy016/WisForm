{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4295d220\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"sidebar\"\n};\nconst _hoisted_2 = [\"href\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"nav\", _hoisted_1, [_createElementVNode(\"ul\", null, [_createCommentVNode(\" 使用 v-for 遍历 permissions 并根据权限显示不同的链接或文本 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.permissions, permission => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: permission\n    }, [_createCommentVNode(\" 假设有一个 permissionMap 对象来映射权限ID到文本 \"), _ctx.permissionMap[permission] ? (_openBlock(), _createElementBlock(\"a\", {\n      key: 0,\n      href: _ctx.getLink(permission)\n    }, _toDisplayString(_ctx.permissionMap[permission]), 9 /* TEXT, PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_Fragment","_renderList","_ctx","permissions","permission","key","permissionMap","href","getLink","_hoisted_2"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/NavBar.vue"],"sourcesContent":["<template>  \r\n  <nav class = \"sidebar\">  \r\n    <ul>  \r\n      <!-- 使用 v-for 遍历 permissions 并根据权限显示不同的链接或文本 -->  \r\n      <li v-for=\"permission in permissions\" :key=\"permission\">  \r\n        <!-- 假设有一个 permissionMap 对象来映射权限ID到文本 -->  \r\n        <a v-if=\"permissionMap[permission]\" :href=\"getLink(permission)\">  \r\n          {{ permissionMap[permission] }}  \r\n        </a>\r\n      </li> \r\n    </ul>  \r\n  </nav>  \r\n</template>  \r\n  \r\n<script>  \r\nexport default {  \r\n  name: 'NavBar',  \r\n  computed: {  \r\n    // 使用计算属性从 Vuex store 中获取 permissions  \r\n    permissions() {  \r\n      return this.$store.state.permissions;  \r\n    },  \r\n    // 可选的 permissionMap 对象，用于将权限ID映射到文本 \r\n    permissionMap() {  \r\n      return {  \r\n        1: ['查看表单', '/from-view'] \r\n        2: '创建表单',  \r\n        3: '填写表单',\r\n        4: '管理人员'\r\n      };  \r\n    },  \r\n  },  \r\n};  \r\n</script>\r\n\r\n<style scoped>  \r\n.sidebar {  \r\n  position: fixed; /* 或者 absolute，取决于你的页面布局需求 */  \r\n  top: 0;  \r\n  left: 0;  \r\n  bottom: 0; /* 如果你想让侧边栏占满整个页面高度 */  \r\n  width: 200px; /* 设置侧边栏宽度 */  \r\n  background-color: #f8f9fa; /* 设置背景颜色 */  \r\n  overflow-y: auto; /* 如果内容太多，允许垂直滚动 */  \r\n  padding-top: 20px; /* 顶部内边距，可选 */  \r\n}  \r\n  \r\n.sidebar ul {  \r\n  list-style-type: none;  \r\n  padding: 0;  \r\n  margin: 0;  \r\n}  \r\n  \r\n.sidebar li {  \r\n  padding: 10px; /* 设置列表项的内边距 */  \r\n  border-bottom: 1px solid #ddd; /* 可选，设置列表项之间的分隔线 */  \r\n}  \r\n  \r\n/* 如果你希望点击侧边栏链接时不产生默认的蓝色背景 */  \r\n.sidebar li a {  \r\n  color: inherit;  \r\n  text-decoration: none;  \r\n}  \r\n  \r\n</style>"],"mappings":";;;EACOA,KAAK,EAAG;AAAS;mBADxB;;uBACEC,mBAAA,CAUM,OAVNC,UAUM,GATJC,mBAAA,CAQK,aAPHC,mBAAA,6CAAgD,G,kBAChDH,mBAAA,CAKKI,SAAA,QATXC,WAAA,CAI+BC,IAAA,CAAAC,WAAW,EAAzBC,UAAU;yBAArBR,mBAAA,CAKK;MALkCS,GAAG,EAAED;IAAU,IACpDL,mBAAA,sCAAyC,EAChCG,IAAA,CAAAI,aAAa,CAACF,UAAU,K,cAAjCR,mBAAA,CAEI;MARZS,GAAA;MAM6CE,IAAI,EAAEL,IAAA,CAAAM,OAAO,CAACJ,UAAU;wBACxDF,IAAA,CAAAI,aAAa,CAACF,UAAU,yBAPrCK,UAAA,KAAAV,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}