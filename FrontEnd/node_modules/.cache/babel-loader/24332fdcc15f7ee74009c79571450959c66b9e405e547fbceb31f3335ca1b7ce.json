{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4295d220\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"sidebar\"\n};\nconst _hoisted_2 = [\"href\"];\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"我填写的\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"我发布的\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"我可查看\", -1 /* HOISTED */));\nconst _hoisted_7 = [_hoisted_4, _hoisted_5, _hoisted_6];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"nav\", _hoisted_1, [_createElementVNode(\"ul\", null, [_createCommentVNode(\" 使用 v-for 遍历 permissions 并根据权限显示不同的文本 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.permissions, permission => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: permission\n    }, [$options.textMap[permission] ? (_openBlock(), _createElementBlock(\"a\", {\n      key: 0,\n      href: $options.linkMap[permission]\n    }, _toDisplayString($options.textMap[permission]), 9 /* TEXT, PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true), $options.textMap[permission] === '查看表单' ? (_openBlock(), _createElementBlock(\"a\", _hoisted_3, _toDisplayString($options.textMap[permission]), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 下拉菜单 \"), $data.showDropdown ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 2,\n      class: \"dropdown-menu\",\n      onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => _ctx.handleClickOutside && _ctx.handleClickOutside(...args), [\"stop\"]))\n    }, [..._hoisted_7])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_hoisted_4","_hoisted_5","_hoisted_6","_createElementBlock","_hoisted_1","_createCommentVNode","_Fragment","_renderList","$options","permissions","permission","textMap","href","linkMap","_hoisted_2","_hoisted_3","_toDisplayString","$data","showDropdown","onClick","_cache","_withModifiers","args","_ctx","handleClickOutside","_hoisted_7"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/NavBar.vue"],"sourcesContent":["<template>  \r\n  <nav class = \"sidebar\">  \r\n    <ul>  \r\n      <!-- 使用 v-for 遍历 permissions 并根据权限显示不同的文本 -->  \r\n      <li v-for=\"permission in permissions\" :key=\"permission\">  \r\n        <a v-if=\"textMap[permission]\" :href=\"linkMap[permission]\">  \r\n          {{ textMap[permission] }}  \r\n        </a>\r\n\r\n        <a   \r\n          v-if=\"textMap[permission] === '查看表单'\"       \r\n        >  \r\n          {{ textMap[permission] }}  \r\n        </a>  \r\n        <!-- 下拉菜单 -->  \r\n        <div   \r\n          v-if=\"showDropdown \"   \r\n          class=\"dropdown-menu\"  \r\n          @click.stop=\"handleClickOutside\"  \r\n        >  \r\n          <p>我填写的</p>  \r\n          <p>我发布的</p>  \r\n          <p>我可查看</p>  \r\n        </div>  \r\n\r\n      </li> \r\n    </ul>  \r\n  </nav>  \r\n</template>  \r\n  \r\n<script>  \r\nexport default {  \r\n  name: 'NavBar', \r\n  data() {  \r\n    return {  \r\n      showDropdown: false, // 控制下拉菜单的显示与隐藏  \r\n    };  \r\n  },   \r\n  computed: {  \r\n    // 使用计算属性从 Vuex store 中获取 permissions  \r\n    permissions() {  \r\n      return this.$store.state.permissions;  \r\n    },  \r\n    // 可选的 permissionMap 对象，用于将权限ID映射到文本 \r\n    textMap() {  \r\n      return {  \r\n        1: '查看表单',\r\n        2: '创建表单',  \r\n        3: '填写表单',\r\n        4: '管理人员'\r\n      };  \r\n    },\r\n    linkMap() {  \r\n      return {  \r\n        1: '/form-view',\r\n        2: '/form-create',  \r\n        3: '/form-fill',\r\n        4: '/user-management'\r\n      };  \r\n    },    \r\n  },\r\n    \r\n};  \r\n</script>\r\n\r\n<style scoped>  \r\n.sidebar {  \r\n  position: fixed; /* 或者 absolute，取决于你的页面布局需求 */  \r\n  top: 0;  \r\n  left: 0;  \r\n  bottom: 0; /* 如果你想让侧边栏占满整个页面高度 */  \r\n  width: 200px; /* 设置侧边栏宽度 */  \r\n  background-color: #f8f9fa; /* 设置背景颜色 */  \r\n  overflow-y: auto; /* 如果内容太多，允许垂直滚动 */  \r\n  padding-top: 20px; /* 顶部内边距，可选 */  \r\n}  \r\n  \r\n.sidebar ul {  \r\n  list-style-type: none;  \r\n  padding: 0;  \r\n  margin: 0;  \r\n}  \r\n  \r\n.sidebar li {  \r\n  padding: 10px; /* 设置列表项的内边距 */  \r\n  border-bottom: 1px solid #ddd; /* 可选，设置列表项之间的分隔线 */  \r\n}  \r\n  \r\n/* 如果你希望点击侧边栏链接时不产生默认的蓝色背景 */  \r\n.sidebar li a {  \r\n  color: inherit;  \r\n  text-decoration: none;  \r\n}  \r\n  \r\n</style>"],"mappings":";;;EACOA,KAAK,EAAG;AAAS;mBADxB;;EAAAC,GAAA;AAAA;gEAoBUC,mBAAA,CAAW,WAAR,MAAI;gEACPA,mBAAA,CAAW,WAAR,MAAI;gEACPA,mBAAA,CAAW,WAAR,MAAI;oBAFPC,UAAW,EACXC,UAAW,EACXC,UAAW,C;;uBArBnBC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJL,mBAAA,CAwBK,aAvBHM,mBAAA,0CAA6C,G,kBAC7CF,mBAAA,CAqBKG,SAAA,QAzBXC,WAAA,CAI+BC,QAAA,CAAAC,WAAW,EAAzBC,UAAU;yBAArBP,mBAAA,CAqBK;MArBkCL,GAAG,EAAEY;IAAU,IAC3CF,QAAA,CAAAG,OAAO,CAACD,UAAU,K,cAA3BP,mBAAA,CAEI;MAPZL,GAAA;MAKuCc,IAAI,EAAEJ,QAAA,CAAAK,OAAO,CAACH,UAAU;wBAClDF,QAAA,CAAAG,OAAO,CAACD,UAAU,yBAN/BI,UAAA,KAAAT,mBAAA,gBAUgBG,QAAA,CAAAG,OAAO,CAACD,UAAU,gB,cAD1BP,mBAAA,CAII,KAbZY,UAAA,EAAAC,gBAAA,CAYaR,QAAA,CAAAG,OAAO,CAACD,UAAU,qBAZ/BL,mBAAA,gBAcQA,mBAAA,UAAa,EAELY,KAAA,CAAAC,YAAY,I,cADpBf,mBAAA,CAQM;MAvBdL,GAAA;MAiBUD,KAAK,EAAC,eAAe;MACpBsB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAlBhBC,cAAA,KAAAC,IAAA,KAkBuBC,IAAA,CAAAC,kBAAA,IAAAD,IAAA,CAAAC,kBAAA,IAAAF,IAAA,CAAkB;OAlBzC,IAAAG,UAAA,MAAApB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}