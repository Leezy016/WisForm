{"ast":null,"code":"export default {\n  data() {\n    return {\n      selectedFields: [],\n      // 修改为从后端获取的字段列表\n      showForm: false,\n      formData: {}\n    };\n  },\n  methods: {\n    // 添加字段时需要从后端获取字段信息\n    addField() {\n      // 此处应该发送请求到后端获取可选字段信息，然后将字段添加到 selectedFields 中\n      // 示例：this.selectedFields.push({ id, label: `字段${this.selectedFields.length + 1}`, type: 'text' });\n    },\n    removeField(index) {\n      this.selectedFields.splice(index, 1);\n    },\n    generateForm() {\n      this.showForm = true;\n      // 生成表单数据对象，用于绑定表单输入\n      this.formData = this.selectedFields.reduce((acc, field) => {\n        acc[field.id] = '';\n        return acc;\n      }, {});\n    },\n    submitForm() {\n      // 处理表单提交逻辑\n      console.log('提交表单:', this.formData);\n      // 可以在此处将填报的数据发送到后端保存\n    }\n  }\n};","map":{"version":3,"names":["data","selectedFields","showForm","formData","methods","addField","removeField","index","splice","generateForm","reduce","acc","field","id","submitForm","console","log"],"sources":["C:\\Users\\32118\\Desktop\\无脑赶工\\my-project\\src\\components\\DynamicForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"dynamic-form\">\r\n    <h2>选择表单项</h2>\r\n    <div v-for=\"(field, index) in selectedFields\" :key=\"index\" class=\"form-item\">\r\n      <input type=\"text\" v-model=\"field.label\" placeholder=\"表单项名称\" class=\"field-input\">\r\n      <select v-model=\"field.type\" class=\"field-select\">\r\n        <option value=\"text\">文本</option>\r\n        <option value=\"number\">数字</option>\r\n        <!-- 添加更多选项类型 -->\r\n      </select>\r\n      <button @click=\"removeField(index)\" class=\"remove-btn\">-</button>\r\n    </div>\r\n    <button @click=\"addField\" class=\"add-btn\">添加表单项</button>\r\n    <button @click=\"generateForm\" class=\"generate-btn\">确认</button>\r\n    <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"form\">\r\n      <div v-for=\"(field, index) in selectedFields\" :key=\"index\" class=\"form-field\">\r\n        <label :for=\"field.id\" class=\"field-label\">{{ field.label }}：</label>\r\n        <input :type=\"field.type\" :id=\"field.id\" v-model=\"formData[field.id]\" class=\"field-input\">\r\n      </div>\r\n      <button type=\"submit\" class=\"submit-btn\">提交</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedFields: [], // 修改为从后端获取的字段列表\r\n      showForm: false,\r\n      formData: {}\r\n    };\r\n  },\r\n  methods: {\r\n    // 添加字段时需要从后端获取字段信息\r\n    addField() {\r\n      // 此处应该发送请求到后端获取可选字段信息，然后将字段添加到 selectedFields 中\r\n      // 示例：this.selectedFields.push({ id, label: `字段${this.selectedFields.length + 1}`, type: 'text' });\r\n    },\r\n    removeField(index) {\r\n      this.selectedFields.splice(index, 1);\r\n    },\r\n    generateForm() {\r\n      this.showForm = true;\r\n      // 生成表单数据对象，用于绑定表单输入\r\n      this.formData = this.selectedFields.reduce((acc, field) => {\r\n        acc[field.id] = '';\r\n        return acc;\r\n      }, {});\r\n    },\r\n    submitForm() {\r\n      // 处理表单提交逻辑\r\n      console.log('提交表单:', this.formData);\r\n      // 可以在此处将填报的数据发送到后端保存\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式保持不变 */\r\n</style>\r\n"],"mappings":"AAyBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAAE;MACpBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,CAAC;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,QAAQA,CAAA,EAAG;MACT;MACA;IAAA,CACD;IACDC,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAI,CAACN,cAAc,CAACO,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACtC,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,CAACP,QAAO,GAAI,IAAI;MACpB;MACA,IAAI,CAACC,QAAO,GAAI,IAAI,CAACF,cAAc,CAACS,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QACzDD,GAAG,CAACC,KAAK,CAACC,EAAE,IAAI,EAAE;QAClB,OAAOF,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IACDG,UAAUA,CAAA,EAAG;MACX;MACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACb,QAAQ,CAAC;MACnC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}