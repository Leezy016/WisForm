{"ast":null,"code":"import { createStore } from 'vuex'; // 引入 Vuex 的 createStore 函数  \nimport createPersistedState from 'vuex-persistedstate';\n\n// 创建 Vuex 的 store 实例  \nconst store = createStore({\n  state() {\n    return {\n      permissions: [1, 3],\n      department: [],\n      role: '',\n      username: ''\n    };\n  },\n  getters: {},\n  mutations: {\n    SET_PERMISSIONS(state, permissions) {\n      state.permissions = permissions;\n    },\n    SET_DEPARTMENT(state, department) {\n      state.department = department;\n    },\n    SET_ROLE(state, role) {\n      state.role = role;\n    },\n    SET_USERNAME(state, username) {\n      state.username = role;\n    }\n  },\n  actions: {},\n  modules: {},\n  plugins: [createPersistedState({\n    // 使用localStorage作为默认存储引擎  \n    storage: window.localStorage,\n    // 选择要持久化的状态字段  \n    reducer(val) {\n      return {\n        permissions: val.permissions\n        // 可以添加其他需要持久化的字段  \n      };\n    }\n  })]\n});\nexport default store;","map":{"version":3,"names":["createStore","createPersistedState","store","state","permissions","department","role","username","getters","mutations","SET_PERMISSIONS","SET_DEPARTMENT","SET_ROLE","SET_USERNAME","actions","modules","plugins","storage","window","localStorage","reducer","val"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex' // 引入 Vuex 的 createStore 函数  \r\nimport createPersistedState from 'vuex-persistedstate'\r\n\r\n// 创建 Vuex 的 store 实例  \r\nconst store = createStore({  \r\n  state(){ \r\n      return{\r\n      permissions:[1,3],\r\n      department:[],\r\n      role:'',\r\n      username:''\r\n      }\r\n  },  \r\n  getters: {  \r\n  },  \r\n  mutations: {  \r\n    SET_PERMISSIONS(state, permissions) {  \r\n      state.permissions = permissions;  \r\n    } , \r\n    SET_DEPARTMENT(state, department) {  \r\n      state.department = department;  \r\n    } ,\r\n    SET_ROLE(state, role) {  \r\n      state.role = role;  \r\n    } ,\r\n    SET_USERNAME(state, username) {  \r\n      state.username = role;  \r\n    }\r\n  },  \r\n  actions: {  \r\n  },  \r\n  modules: {   \r\n  } ,\r\n  plugins: [  \r\n    createPersistedState({  \r\n      // 使用localStorage作为默认存储引擎  \r\n      storage: window.localStorage,  \r\n      // 选择要持久化的状态字段  \r\n      reducer(val) {  \r\n        return {  \r\n          permissions: val.permissions,  \r\n          // 可以添加其他需要持久化的字段  \r\n        }  \r\n      }  \r\n    })  \r\n  ]  \r\n})  \r\n  \r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM,EAAC;AACnC,OAAOC,oBAAoB,MAAM,qBAAqB;;AAEtD;AACA,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACxBG,KAAKA,CAAA,EAAE;IACH,OAAM;MACNC,WAAW,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC;MACjBC,UAAU,EAAC,EAAE;MACbC,IAAI,EAAC,EAAE;MACPC,QAAQ,EAAC;IACT,CAAC;EACL,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE;IACTC,eAAeA,CAACP,KAAK,EAAEC,WAAW,EAAE;MAClCD,KAAK,CAACC,WAAW,GAAGA,WAAW;IACjC,CAAC;IACDO,cAAcA,CAACR,KAAK,EAAEE,UAAU,EAAE;MAChCF,KAAK,CAACE,UAAU,GAAGA,UAAU;IAC/B,CAAC;IACDO,QAAQA,CAACT,KAAK,EAAEG,IAAI,EAAE;MACpBH,KAAK,CAACG,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDO,YAAYA,CAACV,KAAK,EAAEI,QAAQ,EAAE;MAC5BJ,KAAK,CAACI,QAAQ,GAAGD,IAAI;IACvB;EACF,CAAC;EACDQ,OAAO,EAAE,CACT,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,OAAO,EAAE,CACPf,oBAAoB,CAAC;IACnB;IACAgB,OAAO,EAAEC,MAAM,CAACC,YAAY;IAC5B;IACAC,OAAOA,CAACC,GAAG,EAAE;MACX,OAAO;QACLjB,WAAW,EAAEiB,GAAG,CAACjB;QACjB;MACF,CAAC;IACH;EACF,CAAC,CAAC;AAEN,CAAC,CAAC;AAEF,eAAeF,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}