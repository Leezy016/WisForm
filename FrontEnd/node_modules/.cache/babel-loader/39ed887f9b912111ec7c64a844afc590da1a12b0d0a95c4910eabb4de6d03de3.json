{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ce4fd72c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"form-view-detail\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavBar), _createElementVNode(\"nav\", null, [_createElementVNode(\"ul\", null, [_createCommentVNode(\" 如果sum小于1，则不显示任何页码 \"), $data.sum >= 1 ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($options.pageCount, page => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: page,\n      onClick: $event => $options.getContent(page)\n    }, _toDisplayString(page), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_NavBar","_createElementVNode","_createCommentVNode","$data","sum","_Fragment","key","_renderList","$options","pageCount","page","onClick","$event","getContent","_hoisted_2"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormViewDetail.vue"],"sourcesContent":["<template>\n    <div class=\"form-view-detail\"> \n      <NavBar /> \n      <nav>\n        <ul>\n          <!-- 如果sum小于1，则不显示任何页码 -->\n          <li v-if=\"sum >= 1\" v-for=\"page in pageCount\" :key=\"page\" @click=\"getContent(page)\">\n            {{ page }}\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </template>\n\n  <script>\n\n import NavBar from './NavBar.vue'; \n import axios from 'axios';\n  export default {\n    props: ['title'],\n    data(){\n      return {\n        sum:2,\n        item: ['item1','item2'],\n        content:['1','2'],\n        getcErrorMessage:'',\n        getsErrorMessage:'',\n        pageSize: 4,\n      }\n    },\n    components: {  \n    NavBar  \n    } ,\n    computed: {\n      // 计算总页数\n      pageCount() {\n        // 使用Math.ceil来确保如果有余数，则增加一页\n        return Math.ceil(this.sum / this.pageSize);\n      },\n    },\n    methods:{\n      getSum(){\n        axios.post('http://localhost:8080/fillformlist', {  \n        formatname:this.title\n        })  \n        .then(response => {  \n          if (response.data.success) {  \n            this.sum=response.data.numm\n          }\n          else {  \n            this.getsErrorMessage = response.data.message || '表单获取失败，请稍后再试';  \n          }\n         })  \n        .catch(error => {  \n          if (error.response) {  \n            // 后端返回的错误信息\n            this.getsErrorMessage = error.response.data;   \n          }\n          else {\n            this.getsErrorMessage = '表单获取失败，请稍后再试';\n          }\n        }); \n      },\n      getContent(n){\n        axios.post('http://localhost:8080/fillformlist', {  \n          num:n\n        })  \n        .then(response => {  \n          if (response.data.success) {  \n            this.item=response.data.Itemlist,\n            this.content=response.data.ValueList\n          }\n          else {  \n            this.getcErrorMessage = response.data.message || '表单获取失败，请稍后再试';  \n          }\n         })  \n        .catch(error => {  \n          if (error.response) {  \n            // 后端返回的错误信息\n            this.getcErrorMessage = error.response.data;   \n          }\n          else {\n            this.getcErrorMessage = '表单获取失败，请稍后再试';\n          }\n        }); \n      }\n    },\n\n    created() {  \n      //this.getSum();\n      //this.getContent(0); \n    }, \n  };\n  </script>\n\n<style scoped>\n \n</style>\n<style scoped>\n  /* 这里可以添加你的样式代码 */\n  nav ul {\n    list-style-type: none;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n  }\n  \n  nav ul li {\n    margin: 0 5px;\n    cursor: pointer;\n  }\n  \n  nav ul li.active {\n    /* 可以添加选中状态的样式 */\n    font-weight: bold;\n  }\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAkB;mBADjC;;;uBACIC,mBAAA,CAUM,OAVNC,UAUM,GATJC,YAAA,CAAUC,iBAAA,GACVC,mBAAA,CAOM,cANJA,mBAAA,CAKK,aAJHC,mBAAA,uBAA0B,EAChBC,KAAA,CAAAC,GAAG,S,kBAAbP,mBAAA,CAEKQ,SAAA;IARfC,GAAA;EAAA,GAAAC,WAAA,CAM6CC,QAAA,CAAAC,SAAS,EAAjBC,IAAI;yBAA/Bb,mBAAA,CAEK;MAF0CS,GAAG,EAAEI,IAAI;MAAGC,OAAK,EAAAC,MAAA,IAAEJ,QAAA,CAAAK,UAAU,CAACH,IAAI;wBAC5EA,IAAI,wBAPnBI,UAAA;mCAAAZ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}