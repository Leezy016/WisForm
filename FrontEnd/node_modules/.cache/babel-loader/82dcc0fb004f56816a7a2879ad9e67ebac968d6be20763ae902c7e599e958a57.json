{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from './NavBar.vue';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'FormCreate',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      selectedFields: [{\n        id: 'field1',\n        label: '字段1',\n        type: 'text'\n      }],\n      showForm: false,\n      formTitle: ''\n    };\n  },\n  computed: {\n    // 计算属性返回label数组  \n    labelArray() {\n      return this.selectedFields.map(field => field.label);\n    },\n    // 计算属性返回type数组  \n    typeArray() {\n      return this.selectedFields.map(field => field.type);\n    },\n    ...mapGetters(['username'])\n  },\n  methods: {\n    addField() {\n      const id = `field${this.selectedFields.length + 1}`;\n      this.selectedFields.push({\n        id,\n        label: `字段${this.selectedFields.length + 1}`,\n        type: 'text'\n      });\n    },\n    removeField(index) {\n      this.selectedFields.splice(index, 1);\n    },\n    generateForm() {\n      this.showForm = true;\n      // 生成表单数据对象，用于绑定表单输入\n      this.formData = this.selectedFields.reduce((acc, field) => {\n        acc[field.id] = '';\n        return acc;\n      });\n    },\n    submitForm() {\n      const {\n        username\n      } = this;\n      axios.post('http://localhost:8080/api/register', {\n        lable: this.labelArray,\n        type: this.typeArray,\n        username: username,\n        title: this.formTitle\n      }).then(response => {\n        if (response.data.success) {\n          console.log('表单创建成功');\n          router.push('/form-create');\n          alert('表单创建成功！');\n        } else {\n          this.errorMessage = response.data.message || '表单创建失败了，请稍后再试';\n        }\n      }).catch(error => {\n        if (error.response) {\n          // 后端返回的错误信息\n          this.errorMessage = error.response.data;\n        } else {\n          this.errorMessage = '表单创建失败，请稍后再试';\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["NavBar","mapGetters","name","components","data","selectedFields","id","label","type","showForm","formTitle","computed","labelArray","map","field","typeArray","methods","addField","length","push","removeField","index","splice","generateForm","formData","reduce","acc","submitForm","username","axios","post","lable","title","then","response","success","console","log","router","alert","errorMessage","message","catch","error"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormCreate.vue"],"sourcesContent":["\r\n<template>\r\n      <div> \r\n        <NavBar/> <!-- 引入并使用NavBar组件 --> \r\n      </div>\r\n      <div class=\"dynamic-form\">\r\n        <div class=\"form-title-input\">  \r\n          <label for=\"formTitle\">表单标题：</label>  \r\n          <input type=\"text\" id=\"formTitle\" v-model=\"formTitle\" placeholder=\"请输入表单标题\">  \r\n        </div> \r\n\r\n        <div v-for=\"(field, index) in selectedFields\" :key=\"index\" class=\"form-item\">\r\n          <input type=\"text\" v-model=\"field.label\" placeholder=\"表单项名称\" class=\"field-input\">\r\n            <select v-model=\"field.type\" class=\"field-select\">\r\n              <option value=\"text\">文本</option>\r\n              <option value=\"number\">数字</option>\r\n              <!-- 可以根据需要添加更多的选项 -->\r\n            </select>\r\n          <button @click=\"removeField(index)\" class=\"remove-btn\">-</button>\r\n        </div>\r\n\r\n        <button @click=\"addField\" class=\"add-btn\">添加表单项</button>\r\n        <button @click=\"generateForm\" class=\"generate-btn\">确认</button>\r\n\r\n        <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"form-table\">  \r\n          <table>  \r\n            <tr v-for=\"(field, index) in selectedFields\" :key=\"index\">  \r\n              <td>  \r\n                <label :for=\"field.id\" class=\"field-label\">{{ field.label }}</label>  \r\n              </td>  \r\n              <td>  \r\n                <input :type=\"field.type\" :id=\"field.id\" v-model=\"formData[field.id]\" class=\"field-input\">  \r\n              </td>  \r\n            </tr>  \r\n          </table>  \r\n          <button type=\"submit\" class=\"submit-btn\">提交</button>  \r\n        </form>\r\n\r\n    </div>\r\n  </template>\r\n\r\n  <script>\r\n  import NavBar from './NavBar.vue'; \r\n  import { mapGetters } from 'vuex';\r\n  export default {\r\n    name: 'FormCreate',\r\n    components: {  \r\n      NavBar\r\n    } ,\r\n    data() {\r\n      return {\r\n        selectedFields: [{ id: 'field1', label: '字段1', type: 'text' }],\r\n        showForm: false,\r\n        formTitle:''\r\n      };\r\n    }, \r\n    computed: {  \r\n      // 计算属性返回label数组  \r\n      labelArray() {  \r\n        return this.selectedFields.map(field => field.label);  \r\n      },  \r\n      // 计算属性返回type数组  \r\n      typeArray() {  \r\n        return this.selectedFields.map(field => field.type);  \r\n      },\r\n      ...mapGetters([  \r\n        'username'  \r\n      ])     \r\n    },\r\n    methods: {\r\n      addField() {\r\n        const id = `field${this.selectedFields.length + 1}`;\r\n        this.selectedFields.push({ id, label: `字段${this.selectedFields.length + 1}`, type: 'text' });\r\n      },\r\n      removeField(index) {\r\n        this.selectedFields.splice(index, 1);\r\n      },\r\n      generateForm() {\r\n        this.showForm = true;\r\n        // 生成表单数据对象，用于绑定表单输入\r\n        this.formData = this.selectedFields.reduce((acc, field) => {\r\n          acc[field.id] = '';\r\n          return acc;\r\n        });\r\n      },\r\n      submitForm() {\r\n          const { username } = this; \r\n          axios.post('http://localhost:8080/api/register', {  \r\n            lable: this.labelArray,  \r\n            type: this.typeArray,  \r\n            username: username,\r\n            title:this.formTitle\r\n          })  \r\n          .then(response => {  \r\n            if (response.data.success) { \r\n            console.log('表单创建成功'); \r\n            router.push('/form-create'); \r\n            alert('表单创建成功！');\r\n            }\r\n            else {  \r\n              this.errorMessage = response.data.message || '表单创建失败了，请稍后再试';  \r\n            }\r\n         })  \r\n      .catch(error => {  \r\n        if (error.response) {  \r\n          // 后端返回的错误信息\r\n          this.errorMessage = error.response.data;   \r\n        }else {\r\n          this.errorMessage = '表单创建失败，请稍后再试';\r\n        }\r\n      }); \r\n      },\r\n    },  \r\n};\r\n  </script>\r\n\r\n<style scoped>\r\n.dynamic-form {\r\n  max-width: 400px;\r\n  margin: auto;\r\n}\r\n\r\n.form-title-input{\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.form-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.field-input {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.field-select {\r\n  width: 120px;\r\n}\r\n\r\n.remove-btn {\r\n  margin-left: 10px;\r\n}\r\n\r\n.add-btn,.submit-btn , .generate-btn {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.form-table table {  \r\n  width: 100%; /* 表格宽度 */  \r\n  border-collapse: collapse; /* 合并边框 */  \r\n}  \r\n  \r\n.form-table table tr td {  \r\n  padding: 10px; /* 单元格内边距 */  \r\n  border: 1px solid #ddd; /* 单元格边框 */  \r\n}  \r\n  \r\n.form-table table tr td:first-child {  \r\n  width: 30%; /* 可以调整标签列的宽度 */  \r\n}  \r\n\r\n.form-table table tr td input {  \r\n  width: 100%; /* 输入字段占满单元格宽度 */  \r\n  box-sizing: border-box; /* 包含内边距和边框 */  \r\n}  \r\n</style>"],"mappings":";AA0CE,OAAOA,MAAK,MAAO,cAAc;AACjC,SAASC,UAAS,QAAS,MAAM;AACjC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVH;EACF;EACAI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,CAAC;QAAEC,EAAE,EAAE,QAAQ;QAAEC,KAAK,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAO,CAAC,CAAC;MAC9DC,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAC;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACP,cAAc,CAACQ,GAAG,CAACC,KAAI,IAAKA,KAAK,CAACP,KAAK,CAAC;IACtD,CAAC;IACD;IACAQ,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACV,cAAc,CAACQ,GAAG,CAACC,KAAI,IAAKA,KAAK,CAACN,IAAI,CAAC;IACrD,CAAC;IACD,GAAGP,UAAU,CAAC,CACZ,UAAS,CACV;EACH,CAAC;EACDe,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,MAAMX,EAAC,GAAK,QAAO,IAAI,CAACD,cAAc,CAACa,MAAK,GAAI,CAAE,EAAC;MACnD,IAAI,CAACb,cAAc,CAACc,IAAI,CAAC;QAAEb,EAAE;QAAEC,KAAK,EAAG,KAAI,IAAI,CAACF,cAAc,CAACa,MAAK,GAAI,CAAE,EAAC;QAAEV,IAAI,EAAE;MAAO,CAAC,CAAC;IAC9F,CAAC;IACDY,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAI,CAAChB,cAAc,CAACiB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACtC,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,CAACd,QAAO,GAAI,IAAI;MACpB;MACA,IAAI,CAACe,QAAO,GAAI,IAAI,CAACnB,cAAc,CAACoB,MAAM,CAAC,CAACC,GAAG,EAAEZ,KAAK,KAAK;QACzDY,GAAG,CAACZ,KAAK,CAACR,EAAE,IAAI,EAAE;QAClB,OAAOoB,GAAG;MACZ,CAAC,CAAC;IACJ,CAAC;IACDC,UAAUA,CAAA,EAAG;MACT,MAAM;QAAEC;MAAS,IAAI,IAAI;MACzBC,KAAK,CAACC,IAAI,CAAC,oCAAoC,EAAE;QAC/CC,KAAK,EAAE,IAAI,CAACnB,UAAU;QACtBJ,IAAI,EAAE,IAAI,CAACO,SAAS;QACpBa,QAAQ,EAAEA,QAAQ;QAClBI,KAAK,EAAC,IAAI,CAACtB;MACb,CAAC,EACAuB,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAAC9B,IAAI,CAAC+B,OAAO,EAAE;UAC3BC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;UACrBC,MAAM,CAACnB,IAAI,CAAC,cAAc,CAAC;UAC3BoB,KAAK,CAAC,SAAS,CAAC;QAChB,OACK;UACH,IAAI,CAACC,YAAW,GAAIN,QAAQ,CAAC9B,IAAI,CAACqC,OAAM,IAAK,eAAe;QAC9D;MACH,CAAC,EACHC,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACT,QAAQ,EAAE;UAClB;UACA,IAAI,CAACM,YAAW,GAAIG,KAAK,CAACT,QAAQ,CAAC9B,IAAI;QACzC,CAAC,MAAK;UACJ,IAAI,CAACoC,YAAW,GAAI,cAAc;QACpC;MACF,CAAC,CAAC;IACF;EACF;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}