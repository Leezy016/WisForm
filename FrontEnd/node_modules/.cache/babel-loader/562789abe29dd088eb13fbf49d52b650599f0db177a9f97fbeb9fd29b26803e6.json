{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      selectedFields: [{\n        id: 'field1',\n        label: '字段1',\n        type: 'text'\n      }],\n      showForm: false,\n      formData: {}\n    };\n  },\n  methods: {\n    addField() {\n      const id = `field${this.selectedFields.length + 1}`;\n      this.selectedFields.push({\n        id,\n        label: `字段${this.selectedFields.length + 1}`,\n        type: 'text'\n      });\n    },\n    removeField(index) {\n      this.selectedFields.splice(index, 1);\n    },\n    generateForm() {\n      this.showForm = true;\n      // 生成表单数据对象，用于绑定表单输入\n      this.formData = this.selectedFields.reduce((acc, field) => {\n        acc[field.id] = '';\n        return acc;\n      }, {});\n    },\n    submitForm() {\n      // 处理表单提交逻辑\n      console.log('提交表单:', this.formData);\n    }\n  }\n};","map":{"version":3,"names":["data","selectedFields","id","label","type","showForm","formData","methods","addField","length","push","removeField","index","splice","generateForm","reduce","acc","field","submitForm","console","log"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/DynamicForm.vue"],"sourcesContent":["<template>\n  <div class=\"dynamic-form\">\n    <h2>选择表单项</h2>\n    <div v-for=\"(field, index) in selectedFields\" :key=\"index\" class=\"form-item\">\n      <input type=\"text\" v-model=\"field.label\" placeholder=\"表单项名称\" class=\"field-input\">\n      <select v-model=\"field.type\" class=\"field-select\">\n        <option value=\"text\">文本</option>\n        <option value=\"number\">数字</option>\n        <!-- 可以根据需要添加更多的选项 -->\n      </select>\n      <button @click=\"removeField(index)\" class=\"remove-btn\">-</button>\n    </div>\n    <button @click=\"addField\" class=\"add-btn\">添加表单项</button>\n    <button @click=\"generateForm\" class=\"generate-btn\">确认</button>\n    <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"form\">\n      <div v-for=\"(field, index) in selectedFields\" :key=\"index\" class=\"form-field\">\n        <label :for=\"field.id\" class=\"field-label\">{{ field.label }}：</label>\n        <input :type=\"field.type\" :id=\"field.id\" v-model=\"formData[field.id]\" class=\"field-input\">\n      </div>\n      <button type=\"submit\" class=\"submit-btn\">提交</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      selectedFields: [{ id: 'field1', label: '字段1', type: 'text' }],\n      showForm: false,\n      formData: {}\n    };\n  },\n  methods: {\n    addField() {\n      const id = `field${this.selectedFields.length + 1}`;\n      this.selectedFields.push({ id, label: `字段${this.selectedFields.length + 1}`, type: 'text' });\n    },\n    removeField(index) {\n      this.selectedFields.splice(index, 1);\n    },\n    generateForm() {\n      this.showForm = true;\n      // 生成表单数据对象，用于绑定表单输入\n      this.formData = this.selectedFields.reduce((acc, field) => {\n        acc[field.id] = '';\n        return acc;\n      }, {});\n    },\n    submitForm() {\n      // 处理表单提交逻辑\n      console.log('提交表单:', this.formData);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.dynamic-form {\n  max-width: 400px;\n  margin: auto;\n}\n\n.dynamic-form h2 {\n  margin-bottom: 20px;\n}\n\n.form-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.field-input {\n  flex: 1;\n  margin-right: 10px;\n}\n\n.field-select {\n  width: 120px;\n}\n\n.remove-btn {\n  margin-left: 10px;\n}\n\n.add-btn, .generate-btn {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 10px;\n}\n\n.form {\n  margin-top: 20px;\n}\n\n.form-field {\n  margin-bottom: 10px;\n}\n\n.field-label {\n  margin-right: 10px;\n}\n\n.submit-btn {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n</style>\n"],"mappings":";AAyBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,CAAC;QAAEC,EAAE,EAAE,QAAQ;QAAEC,KAAK,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAO,CAAC,CAAC;MAC9DC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,CAAC;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,MAAMN,EAAC,GAAK,QAAO,IAAI,CAACD,cAAc,CAACQ,MAAK,GAAI,CAAE,EAAC;MACnD,IAAI,CAACR,cAAc,CAACS,IAAI,CAAC;QAAER,EAAE;QAAEC,KAAK,EAAG,KAAI,IAAI,CAACF,cAAc,CAACQ,MAAK,GAAI,CAAE,EAAC;QAAEL,IAAI,EAAE;MAAO,CAAC,CAAC;IAC9F,CAAC;IACDO,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAI,CAACX,cAAc,CAACY,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACtC,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,CAACT,QAAO,GAAI,IAAI;MACpB;MACA,IAAI,CAACC,QAAO,GAAI,IAAI,CAACL,cAAc,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QACzDD,GAAG,CAACC,KAAK,CAACf,EAAE,IAAI,EAAE;QAClB,OAAOc,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX;MACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACd,QAAQ,CAAC;IACrC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}