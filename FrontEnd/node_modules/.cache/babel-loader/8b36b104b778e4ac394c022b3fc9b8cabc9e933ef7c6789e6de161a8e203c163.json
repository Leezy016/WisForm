{"ast":null,"code":"import NavBar from './NavBar.vue';\nimport axios from 'axios';\nexport default {\n  props: ['title'],\n  // 接收从父组件传递过来的 title \n  data() {\n    return {\n      item: ['作者'],\n      itemType: ['/^(?:[\\u4e00-\\u9fa5·]{2,16})$/'],\n      phoneNumberError: ''\n    };\n  },\n  components: {\n    NavBar\n  },\n  methods: {\n    validatePhoneNumber(index) {\n      // 使用正则表达式来验证电话号码是否为11位数字  \n      const phoneRegex = this.itemType[index];\n      if (!phoneRegex.test(this.phoneNumber)) {\n        this.phoneNumberError = '电话号码必须是11位数字';\n      } else {\n        this.phoneNumberError = ''; // 如果没有错误，清空错误信息  \n      }\n    },\n    getItems() {\n      axios.post('http://localhost:8080/api/register', {\n        title: this.title\n      }).then(response => {\n        if (response.data.success) {\n          //console.log('表单内容获取成功'); \n          this.item = response.data.item, this.itemType = response.data.itemType;\n        } else {\n          this.getErrorMessage = response.data.message || '表单内容获取失败，请稍后再试';\n        }\n      }).catch(error => {\n        if (error.response) {\n          // 后端返回的错误信息\n          this.getErrorMessage = error.response.data;\n        } else {\n          this.getErrorMessage = '表单内容获取失败，请稍后再试';\n        }\n      });\n    }\n  },\n  created() {\n    this.getItems();\n  }\n};","map":{"version":3,"names":["NavBar","axios","props","data","item","itemType","phoneNumberError","components","methods","validatePhoneNumber","index","phoneRegex","test","phoneNumber","getItems","post","title","then","response","success","getErrorMessage","message","catch","error","created"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormFillDetail.vue"],"sourcesContent":["<template>  \n    <div class=\"form-fill-detail\">  \n      <NavBar/>\n      <p>{{ title }}</p>  \n      <!-- 在这里添加其他详情页面的内容 -->  \n      <div v-for=\"(itemName, index) in item\" :key=\"index\" class=\"form-group\">  \n      <label>{{ itemName }}</label>  \n      <input  \n        id=\"phone\"  \n        type=\"text\"  \n        v-model=\"phoneNumber\"  \n        @input=\"validatePhoneNumber(index)\"  \n        class=\"form-control\"  \n      />  \n      <!-- 显示错误信息 -->  \n      <p v-if=\"phoneNumberError\" class=\"error-message\">{{ phoneNumberError }}</p>  \n\n    </div>  \n      <button type=\"submit\" class=\"submit-btn\">提交</button>  <!-- 提交表单的按钮 -->\n    </div>  \n  </template>  \n    \n  <script>  \n  import NavBar from './NavBar.vue'; \n  import axios from 'axios';\n  export default {  \n    props: ['title'], // 接收从父组件传递过来的 title \n    data() {  \n    return {  \n      item: ['作者'],\n      itemType:['/^(?:[\\u4e00-\\u9fa5·]{2,16})$/'],\n      phoneNumberError:''\n    };  \n    },  \n    components: {\n          NavBar,\n    },\n    methods:{\n      validatePhoneNumber(index) {  \n      // 使用正则表达式来验证电话号码是否为11位数字  \n      const phoneRegex = this.itemType[index];  \n      if (!phoneRegex.test(this.phoneNumber)) {  \n        this.phoneNumberError = '电话号码必须是11位数字';  \n      } else {  \n        this.phoneNumberError = ''; // 如果没有错误，清空错误信息  \n      }  \n    } ,\n    getItems() {   \n      axios.post('http://localhost:8080/api/register', {\n        title:this.title\n      })  \n      .then(response => {  \n        if (response.data.success) { \n          //console.log('表单内容获取成功'); \n          this.item=response.data.item,\n          this.itemType=response.data.itemType\n        }\n        else {  \n          this.getErrorMessage = response.data.message || '表单内容获取失败，请稍后再试';  \n        }\n      })  \n      .catch(error => {  \n        if (error.response) {  \n          // 后端返回的错误信息\n          this.getErrorMessage = error.response.data;   \n        }\n        else {\n          this.getErrorMessage = '表单内容获取失败，请稍后再试';\n        }\n      });  \n    },   \n    },  \n    created() {  \n      this.getItems(); \n    },\n\n  };  \n  </script>\n\n  <style>\n  .form-fill-detail{\n    margin: auto;\n  }\n</style>"],"mappings":"AAuBE,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,KAAK,EAAE,CAAC,OAAO,CAAC;EAAE;EAClBC,IAAIA,CAAA,EAAG;IACP,OAAO;MACLC,IAAI,EAAE,CAAC,IAAI,CAAC;MACZC,QAAQ,EAAC,CAAC,gCAAgC,CAAC;MAC3CC,gBAAgB,EAAC;IACnB,CAAC;EACD,CAAC;EACDC,UAAU,EAAE;IACNP;EACN,CAAC;EACDQ,OAAO,EAAC;IACNC,mBAAmBA,CAACC,KAAK,EAAE;MAC3B;MACA,MAAMC,UAAS,GAAI,IAAI,CAACN,QAAQ,CAACK,KAAK,CAAC;MACvC,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC,EAAE;QACtC,IAAI,CAACP,gBAAe,GAAI,cAAc;MACxC,OAAO;QACL,IAAI,CAACA,gBAAe,GAAI,EAAE,EAAE;MAC9B;IACF;IACAQ,QAAQA,CAAA,EAAG;MACTb,KAAK,CAACc,IAAI,CAAC,oCAAoC,EAAE;QAC/CC,KAAK,EAAC,IAAI,CAACA;MACb,CAAC,EACAC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACf,IAAI,CAACgB,OAAO,EAAE;UACzB;UACA,IAAI,CAACf,IAAI,GAACc,QAAQ,CAACf,IAAI,CAACC,IAAI,EAC5B,IAAI,CAACC,QAAQ,GAACa,QAAQ,CAACf,IAAI,CAACE,QAAO;QACrC,OACK;UACH,IAAI,CAACe,eAAc,GAAIF,QAAQ,CAACf,IAAI,CAACkB,OAAM,IAAK,gBAAgB;QAClE;MACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACL,QAAQ,EAAE;UAClB;UACA,IAAI,CAACE,eAAc,GAAIG,KAAK,CAACL,QAAQ,CAACf,IAAI;QAC5C,OACK;UACH,IAAI,CAACiB,eAAc,GAAI,gBAAgB;QACzC;MACF,CAAC,CAAC;IACJ;EACA,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR,IAAI,CAACV,QAAQ,CAAC,CAAC;EACjB;AAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}