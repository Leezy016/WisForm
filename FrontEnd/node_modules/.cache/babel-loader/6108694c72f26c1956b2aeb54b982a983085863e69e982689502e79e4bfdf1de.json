{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from './NavBar.vue';\nimport axios from 'axios';\nexport default {\n  props: ['title'],\n  data() {\n    return {\n      sum: 2,\n      //总条目数\n      nums: ['1', '2', '4', '5', '6'],\n      curNum: 1,\n      //当前页数默认1\n\n      item: ['item1', 'item2'],\n      content: ['1', '2'],\n      getcErrorMessage: '',\n      getsErrorMessage: ''\n    };\n  },\n  components: {\n    NavBar\n  },\n  methods: {\n    pagers() {\n      //重置\n      this.pageinationLength = [];\n      //开始页码1\n      let start = this.cur - 4 > 1 ? this.pageinationCurrentPage - 4 : 1;\n      //当前页码减去开始页码得到差\n      let interval = this.pageinationCurrentPage - start;\n      //最多9个页码，总页码减去interval 得到end要显示的数量+\n      let end = 9 - interval < this.pageinationPage ? 9 - interval : this.pageinationPage;\n      //最末页码减开始页码小于8\n      if (end - start != 8) {\n        //最末页码加上与不足9页的数量，数量不得大于总页数\n        end = end + (8 - (end - start)) < this.pageinationPage ? end + (8 - (end - start)) : this.pageinationPage;\n        //最末页码加上但是还不够9页，进行开始页码追加，开始页码不得小于1\n        if (end - start != 8) {\n          start = end - 8 > 1 ? end - 8 : 1;\n        }\n      }\n      for (let i = start; i <= end; i++) {\n        this.pageinationLength.push(i);\n      }\n    },\n    //计算分页显示的数字\n    pageUp(state) {\n      if (this.curNum - 1 != 0 && state == 1) {\n        this.jump(this.curNum - 1);\n      } else {\n        this.jump(1);\n      }\n    },\n    //上一页跟首页 state=1是上一页 state=0是首页\n    pageDown(state) {\n      if (this.curNum + 1 != this.sum && state == 1) {\n        this.jump(this.curNum + 1);\n      } else {\n        this.jump(this.sum);\n      }\n    },\n    // state=1是下一页 state=0是尾页\n    jump(num) {\n      this.curNum = num;\n      //this.pagers();\n      //this.pageChangge(this.curNum);\n    },\n    //跳转页码\n    getSum() {\n      axios.post('http://localhost:8080/fillformlist', {\n        formatname: this.title\n      }).then(response => {\n        if (response.data.success) {\n          this.sum = response.data.numm;\n        } else {\n          this.getsErrorMessage = response.data.message || '表单获取失败，请稍后再试';\n        }\n      }).catch(error => {\n        if (error.response) {\n          // 后端返回的错误信息\n          this.getsErrorMessage = error.response.data;\n        } else {\n          this.getsErrorMessage = '表单获取失败，请稍后再试';\n        }\n      });\n    },\n    getContent(n) {\n      axios.post('http://localhost:8080/fillformlist', {\n        num: n\n      }).then(response => {\n        if (response.data.success) {\n          this.item = response.data.Itemlist, this.content = response.data.ValueList;\n        } else {\n          this.getcErrorMessage = response.data.message || '表单获取失败，请稍后再试';\n        }\n      }).catch(error => {\n        if (error.response) {\n          // 后端返回的错误信息\n          this.getcErrorMessage = error.response.data;\n        } else {\n          this.getcErrorMessage = '表单获取失败，请稍后再试';\n        }\n      });\n    }\n  },\n  created() {\n    //this.getSum();\n    //this.getContent(0); \n  }\n};","map":{"version":3,"names":["NavBar","axios","props","data","sum","nums","curNum","item","content","getcErrorMessage","getsErrorMessage","components","methods","pagers","pageinationLength","start","cur","pageinationCurrentPage","interval","end","pageinationPage","i","push","pageUp","state","jump","pageDown","num","getSum","post","formatname","title","then","response","success","numm","message","catch","error","getContent","n","Itemlist","ValueList","created"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormViewDetail.vue"],"sourcesContent":["<template>\n  <div class=\"form-view-detail\"> \n    <NavBar /> \n\n    <div class=\"pageination\" v-if=\"sum\">\n      <div @click=\"pageUp(0)\" class=\"pagination_page\">首页</div>\n      <div @click=\"pageUp(1)\" class=\"pagination_page\">上一页</div>\n      <div class=\"pagination_page\" \n          v-for=\"(i,index) in nums\" :key=\"index\" @click=\"jump(i)\">\n        {{i}}</div>\n      <div @click=\"pageDown(1)\" class=\"pagination_page\" >下一页</div>\n      <div @click=\"pageDown(0)\" class=\"pagination_page pagination_page_right\" >尾页</div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n\nimport NavBar from './NavBar.vue'; \nimport axios from 'axios';\nexport default {\n  props: ['title'],\n  data(){\n    return {\n      sum:2,//总条目数\n      nums: ['1','2','4','5','6'],\n      curNum: 1,//当前页数默认1\n\n      item: ['item1','item2'],\n      content:['1','2'],\n      getcErrorMessage:'',\n      getsErrorMessage:'',\n    }\n  },\n  components: {  \n  NavBar  \n  } ,\n  methods:{\n    pagers(){\n        //重置\n        this.pageinationLength = [];\n        //开始页码1\n        let start = this.cur - 4 > 1 ? this.pageinationCurrentPage - 4 : 1;\n        //当前页码减去开始页码得到差\n        let interval = this.pageinationCurrentPage - start;\n        //最多9个页码，总页码减去interval 得到end要显示的数量+\n        let end = (9 - interval) < this.pageinationPage ? (9 - interval) : this.pageinationPage;\n        //最末页码减开始页码小于8\n        if ((end - start) != 8) {\n          //最末页码加上与不足9页的数量，数量不得大于总页数\n          end = end + (8 - (end - start)) < this.pageinationPage ? end + (8 - (end - start)) : this.pageinationPage;\n          //最末页码加上但是还不够9页，进行开始页码追加，开始页码不得小于1\n          if ((end - start) != 8) {\n            start = (end - 8) > 1 ? (end - 8) : 1;\n          }\n        }\n        for (let i = start; i <= end; i++) {\n          this.pageinationLength.push(i);\n        }\n      },//计算分页显示的数字\n    pageUp(state){\n      if (this.curNum - 1 != 0 && state == 1) {\n        this.jump(this.curNum - 1);\n      } else {\n        this.jump(1);\n      }\n    },//上一页跟首页 state=1是上一页 state=0是首页\n    pageDown(state){\n      if (this.curNum + 1 != this.sum && state == 1) {\n        this.jump(this.curNum + 1);\n      } else {\n        this.jump(this.sum);\n      }\n    },// state=1是下一页 state=0是尾页\n    jump(num){\n        this.curNum = num;\n        //this.pagers();\n        //this.pageChangge(this.curNum);\n      },//跳转页码\n    getSum(){\n      axios.post('http://localhost:8080/fillformlist', {  \n      formatname:this.title\n      })  \n      .then(response => {  \n        if (response.data.success) {  \n          this.sum=response.data.numm\n        }\n        else {  \n          this.getsErrorMessage = response.data.message || '表单获取失败，请稍后再试';  \n        }\n       })  \n      .catch(error => {  \n        if (error.response) {  \n          // 后端返回的错误信息\n          this.getsErrorMessage = error.response.data;   \n        }\n        else {\n          this.getsErrorMessage = '表单获取失败，请稍后再试';\n        }\n      }); \n    },\n    getContent(n){\n      axios.post('http://localhost:8080/fillformlist', {  \n        num:n\n      })  \n      .then(response => {  \n        if (response.data.success) {  \n          this.item=response.data.Itemlist,\n          this.content=response.data.ValueList\n        }\n        else {  \n          this.getcErrorMessage = response.data.message || '表单获取失败，请稍后再试';  \n        }\n       })  \n      .catch(error => {  \n        if (error.response) {  \n          // 后端返回的错误信息\n          this.getcErrorMessage = error.response.data;   \n        }\n        else {\n          this.getcErrorMessage = '表单获取失败，请稍后再试';\n        }\n      }); \n    }\n  },\n\n  created() {  \n    //this.getSum();\n    //this.getContent(0); \n  }, \n};\n</script>\n\n<style scoped>\n.form-view-detail{  \nmax-width: 400px;\nmargin: auto;\n}\n.pageination_align{\n  text-align: center\n}\n.pageination {\n  color: #48576a;\n  font-size: 12px;\n  display: inline-block;\n  user-select: none;\n}\n\n.pagination_page {\n  padding: 0 4px;\n  border: 1px solid #d1dbe5;\n  border-right: 0;\n  background: #fff;\n  font-size: 13px;\n  min-width: 28px;\n  height: 28px;\n  line-height: 28px;\n  cursor: pointer;\n  box-sizing: border-box;\n  text-align: center;\n  float: left;\n}\n\n.pagination_page_right {\n  border-right: 1px solid #d1dbe5;\n}\n\n.pagination_page:hover {\n  color: #20a0ff;\n}\n\n.disabled {\n  color: #e4e4e4 !important;\n  background-color: #fff;\n  cursor: not-allowed;\n}\n\n.pagination_page_active {\n  border-color: #20a0ff;\n  background-color: #20a0ff;\n  color: #fff !important;;\n  cursor: default;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}