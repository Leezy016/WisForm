{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4295d220\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"sidebar\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"我填写的\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"我发布的\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"我可查看\", -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_2, _hoisted_3, _hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"nav\", _hoisted_1, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.permissions, permission => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: permission\n    }, [_ctx.textMap[permission] === '查看表单' ? (_openBlock(), _createElementBlock(\"a\", {\n      key: 0,\n      onClick: _cache[0] || (_cache[0] = $event => $data.showDropdown = true),\n      href: '#'\n    }, _toDisplayString(_ctx.textMap[permission]), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 下拉菜单 \"), $data.showDropdown && _ctx.textMap[permission] === '查看表单' ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      class: \"dropdown-menu\",\n      onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.handleClickOutside && $options.handleClickOutside(...args), [\"stop\"]))\n    }, [..._hoisted_5])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","permissions","permission","key","textMap","onClick","_cache","$event","$data","showDropdown","href","_createCommentVNode","_withModifiers","args","$options","handleClickOutside","_hoisted_5"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/NavBar.vue"],"sourcesContent":["<template>    \r\n  <nav class=\"sidebar\">    \r\n    <ul>    \r\n      <li v-for=\"permission in permissions\" :key=\"permission\">    \r\n        <a   \r\n          v-if=\"textMap[permission] === '查看表单'\"   \r\n          @click=\"showDropdown = true\"   \r\n          :href=\"'#'\" \r\n        >  \r\n          {{ textMap[permission] }}  \r\n        </a>  \r\n        <!-- 下拉菜单 -->  \r\n        <div   \r\n          v-if=\"showDropdown && textMap[permission] === '查看表单'\"   \r\n          class=\"dropdown-menu\"  \r\n          @click.stop=\"handleClickOutside\"  \r\n        >  \r\n          <p>我填写的</p>  \r\n          <p>我发布的</p>  \r\n          <p>我可查看</p>  \r\n        </div>  \r\n      </li>   \r\n    </ul>    \r\n  </nav>    \r\n</template>    \r\n  \r\n<script>    \r\nexport default {    \r\n  name: 'NavBar',    \r\n  data() {  \r\n    return {  \r\n      showDropdown: false, // 控制下拉菜单的显示与隐藏  \r\n    };  \r\n  },  \r\n  methods: {  \r\n    handleClickOutside(event) {  \r\n      // 当点击下拉菜单以外的地方时隐藏下拉菜单  \r\n      if (!(event.target.closest('.dropdown-menu') || event.target.closest('a'))) {  \r\n        this.showDropdown = false;  \r\n      }  \r\n    },  \r\n  },  \r\n  computed: {    \r\n    // ... 省略了permissions, textMap, linkMap的计算属性  \r\n  },    \r\n  mounted() {  \r\n    // 添加事件监听器以处理点击下拉菜单外部的事件  \r\n    document.body.addEventListener('click', this.handleClickOutside);  \r\n  },  \r\n  beforeDestroy() {  \r\n    // 组件销毁前移除事件监听器  \r\n    document.body.removeEventListener('click', this.handleClickOutside);  \r\n  },  \r\n};    \r\n</script>  \r\n\r\n<style scoped>  \r\n.sidebar {  \r\n  position: fixed; /* 或者 absolute，取决于你的页面布局需求 */  \r\n  top: 0;  \r\n  left: 0;  \r\n  bottom: 0; /* 如果你想让侧边栏占满整个页面高度 */  \r\n  width: 200px; /* 设置侧边栏宽度 */  \r\n  background-color: #f8f9fa; /* 设置背景颜色 */  \r\n  overflow-y: auto; /* 如果内容太多，允许垂直滚动 */  \r\n  padding-top: 20px; /* 顶部内边距，可选 */  \r\n}  \r\n  \r\n.sidebar ul {  \r\n  list-style-type: none;  \r\n  padding: 0;  \r\n  margin: 0;  \r\n}  \r\n  \r\n.sidebar li {  \r\n  padding: 10px; /* 设置列表项的内边距 */  \r\n  border-bottom: 1px solid #ddd; /* 可选，设置列表项之间的分隔线 */  \r\n}  \r\n  \r\n/* 如果你希望点击侧边栏链接时不产生默认的蓝色背景 */  \r\n.sidebar li a {  \r\n  color: inherit;  \r\n  text-decoration: none;  \r\n}  \r\n  \r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAS;gEAgBZC,mBAAA,CAAW,WAAR,MAAI;gEACPA,mBAAA,CAAW,WAAR,MAAI;gEACPA,mBAAA,CAAW,WAAR,MAAI;oBAFPC,UAAW,EACXC,UAAW,EACXC,UAAW,C;;uBAlBnBC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJL,mBAAA,CAoBK,c,kBAnBHI,mBAAA,CAkBKE,SAAA,QArBXC,WAAA,CAG+BC,IAAA,CAAAC,WAAW,EAAzBC,UAAU;yBAArBN,mBAAA,CAkBK;MAlBkCO,GAAG,EAAED;IAAU,IAE5CF,IAAA,CAAAI,OAAO,CAACF,UAAU,gB,cAD1BN,mBAAA,CAMI;MAVZO,GAAA;MAMWE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,YAAY;MACnBC,IAAI,EAAE;wBAEJV,IAAA,CAAAI,OAAO,CAACF,UAAU,qBAT/BS,mBAAA,gBAWQA,mBAAA,UAAa,EAELH,KAAA,CAAAC,YAAY,IAAIT,IAAA,CAAAI,OAAO,CAACF,UAAU,gB,cAD1CN,mBAAA,CAQM;MApBdO,GAAA;MAcUZ,KAAK,EAAC,eAAe;MACpBc,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAfhBM,cAAA,KAAAC,IAAA,KAeuBC,QAAA,CAAAC,kBAAA,IAAAD,QAAA,CAAAC,kBAAA,IAAAF,IAAA,CAAkB;OAfzC,IAAAG,UAAA,MAAAL,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}