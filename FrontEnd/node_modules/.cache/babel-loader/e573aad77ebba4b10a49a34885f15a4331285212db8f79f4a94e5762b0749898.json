{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from './NavBar.vue';\nimport axios from 'axios';\nexport default {\n  props: ['title'],\n  data() {\n    return {\n      sum: [],\n      //id列表\n      nums: [],\n      curNum: 1,\n      //当前页数默认1\n\n      getcErrorMessage: '',\n      getsErrorMessage: '',\n      changeable: 1\n    };\n  },\n  components: {\n    NavBar\n  },\n  methods: {\n    goToChange() {\n      this.$router.push({\n        name: 'FormChange',\n        params: {\n          id: this.sum[this.curNum - 1]\n        }\n      });\n    },\n    pageUp(state) {\n      if (this.curNum - 1 != 0 && state == 1) {\n        this.jump(this.curNum - 1);\n      } else {\n        this.jump(1);\n      }\n    },\n    //上一页跟首页 state=1是上一页 state=0是首页\n    pageDown(state) {\n      if (this.curNum + 1 != this.sum && state == 1) {\n        this.jump(this.curNum + 1);\n      } else {\n        this.jump(this.sum);\n      }\n    },\n    // state=1是下一页 state=0是尾页\n    jump(num) {\n      this.curNum = num;\n      this.pagers();\n      this.getContent(this.sum[num]);\n    },\n    //跳转页码\n    pagers() {\n      //重置\n      this.nums = [];\n      //开始页码1\n      let start = this.curNum - 3 > 1 ? this.curNum - 3 : 1;\n      //当前页码减去开始页码得到差\n      let interval = this.curNum - start;\n      //最多7个页码，总页码减去interval 得到end要显示的数量+\n      let end = 7 - interval < this.sum.length ? 7 - interval : this.sum.length;\n      //最末页码减开始页码小于8\n      if (end - start != 6) {\n        //最末页码加上与不足7页的数量，数量不得大于总页数\n        end = end + (6 - (end - start)) < this.sum.length ? end + (6 - (end - start)) : this.sum.length;\n        //最末页码加上但是还不够7页，进行开始页码追加，开始页码不得小于1\n        if (end - start != 6) {\n          start = end - 6 > 1 ? end - 6 : 1;\n        }\n      }\n      for (let i = start; i <= end; i++) {\n        this.nums.push(i);\n      }\n    },\n    //计算分页显示的数字\n    getSum() {\n      axios.post('http://localhost:8080/viewform/getSum', {\n        formatname: this.title\n      }).then(response => {\n        if (response.data.success) {\n          this.sum = response.data.titles;\n          this.pagers();\n          this.getContent(this.sum[0]);\n        } else {\n          this.getsErrorMessage = response.data.message || '表单获取失败，请稍后再试';\n        }\n      }).catch(error => {\n        if (error.response) {\n          // 后端返回的错误信息\n          this.getsErrorMessage = error.response.data;\n        } else {\n          this.getsErrorMessage = '表单获取失败，请稍后再试';\n        }\n      });\n    },\n    getContent(id) {\n      //console.log(id),\n      axios.post('http://localhost:8080/viewform/getContent', {\n        num: id,\n        title: this.title\n      }).then(response => {\n        if (response.data.success) {\n          //console.log(\"success\"),\n          this.$store.commit('SET_ITEM', response.data.item), this.$store.commit('SET_CONTENT', response.data.itemValue);\n          //changeable:\n        } else {\n          this.getcErrorMessage = response.data.message || '表单获取失败，请稍后再试';\n        }\n      }).catch(error => {\n        if (error.response) {\n          // 后端返回的错误信息\n          this.getcErrorMessage = error.response.data;\n        } else {\n          this.getcErrorMessage = '表单获取失败，请稍后再试';\n        }\n      });\n    }\n  },\n  created() {\n    this.getSum();\n  }\n};","map":{"version":3,"names":["NavBar","axios","props","data","sum","nums","curNum","getcErrorMessage","getsErrorMessage","changeable","components","methods","goToChange","$router","push","name","params","id","pageUp","state","jump","pageDown","num","pagers","getContent","start","interval","end","length","i","getSum","post","formatname","title","then","response","success","titles","message","catch","error","$store","commit","item","itemValue","created"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormViewDetail.vue"],"sourcesContent":["<template>\n  <div class=\"form-view-detail\"> \n    <NavBar /> \n    <form v-if=\"this.$store.state.item\"  class=\"form-table\">    \n        <table>    \n            <!-- 循环渲染已选择的表单项为表格形式 -->  \n            <tr v-for=\"(itemName, index) in this.$store.state.item\" :key=\"index\">    \n                <td>    \n                  <label>{{ itemName }}</label> \n                </td>\n                <td>\n                  <label>{{ this.$store.state.content[index] }}</label> \n                </td>        \n            </tr>    \n        </table>    \n    </form> \n    <div>\n      <button v-if=\"changeable\" type=\"view\" class=\"view-btn\" @click=\"goToChange()\">修改</button>\n    </div> \n\n    <div class=\"pageination\" v-if=\"sum\">\n      <div @click=\"pageUp(0)\" class=\"pagination_page\">首页</div>\n      <div @click=\"pageUp(1)\" class=\"pagination_page\">上一页</div>\n      <div class=\"pagination_page\" \n          v-for=\"(i,index) in nums\" :key=\"index\" @click=\"jump(i)\">\n        {{i}}</div>\n      <div @click=\"pageDown(1)\" class=\"pagination_page\" >下一页</div>\n      <div @click=\"pageDown(0)\" class=\"pagination_page pagination_page_right\" >尾页</div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n\nimport NavBar from './NavBar.vue'; \nimport axios from 'axios';\nexport default {\n  props: ['title'],\n  data() {  \n    return {  \n      sum:[],//id列表\n      nums: [],\n      curNum: 1,//当前页数默认1\n\n      getcErrorMessage:'',\n      getsErrorMessage:'', \n      changeable:1,\n    };  \n  }, \n  components: {  \n    NavBar,  \n  } ,\n  methods:{\n    goToChange() {  \n      this.$router.push({ name: 'FormChange', params: { id: this.sum[this.curNum - 1]} });  \n    } ,\n    pageUp(state){\n      if (this.curNum - 1 != 0 && state == 1) {\n        this.jump(this.curNum - 1);\n      } else {\n        this.jump(1);\n      }\n    },//上一页跟首页 state=1是上一页 state=0是首页\n    pageDown(state){\n      if (this.curNum + 1 != this.sum && state == 1) {\n        this.jump(this.curNum + 1);\n      } else {\n        this.jump(this.sum);\n      }\n    },// state=1是下一页 state=0是尾页\n    jump(num){\n        this.curNum = num;\n        this.pagers();\n        this.getContent(this.sum[num]);\n      },//跳转页码\n    pagers(){\n        //重置\n        this.nums = [];\n        //开始页码1\n        let start = this.curNum - 3 > 1 ? this.curNum - 3 : 1;\n        //当前页码减去开始页码得到差\n        let interval = this.curNum - start;\n        //最多7个页码，总页码减去interval 得到end要显示的数量+\n        let end = (7 - interval) < this.sum.length ? (7 - interval) : this.sum.length;\n        //最末页码减开始页码小于8\n        if ((end - start) != 6) {\n          //最末页码加上与不足7页的数量，数量不得大于总页数\n          end = end + (6 - (end - start)) < this.sum.length ? end + (6 - (end - start)) : this.sum.length;\n          //最末页码加上但是还不够7页，进行开始页码追加，开始页码不得小于1\n          if ((end - start) != 6) {\n            start = (end - 6) > 1 ? (end - 6) : 1;\n          }\n        }\n        for (let i = start; i <= end; i++) {\n          this.nums.push(i);\n        }\n      },//计算分页显示的数字\n  getSum(){\n  axios.post('http://localhost:8080/viewform/getSum', {  \n  formatname:this.title\n  })  \n  .then(response => {  \n    if (response.data.success) {  \n      this.sum=response.data.titles;\n      this.pagers();\n      this.getContent(this.sum[0]);\n    }\n    else {  \n      this.getsErrorMessage = response.data.message || '表单获取失败，请稍后再试';  \n    }\n   })  \n  .catch(error => {  \n    if (error.response) {  \n      // 后端返回的错误信息\n      this.getsErrorMessage = error.response.data;   \n    }\n    else {\n      this.getsErrorMessage = '表单获取失败，请稍后再试';\n    }\n  }); \n},\ngetContent(id){\n  //console.log(id),\n  axios.post('http://localhost:8080/viewform/getContent', {  \n    num:id,\n    title:this.title,\n  })  \n  .then(response => {  \n    if (response.data.success) {  \n      //console.log(\"success\"),\n      this.$store.commit('SET_ITEM', response.data.item),\n      this.$store.commit('SET_CONTENT', response.data.itemValue)\n      //changeable:\n    }\n    else {  \n      this.getcErrorMessage = response.data.message || '表单获取失败，请稍后再试';  \n    }\n   })  \n  .catch(error => {  \n    if (error.response) {  \n      // 后端返回的错误信息\n      this.getcErrorMessage = error.response.data;   \n    }\n    else {\n      this.getcErrorMessage = '表单获取失败，请稍后再试';\n    }\n  }); \n}\n  },\n  created() {  \n    this.getSum();\n  }, \n};\n</script>\n\n<style scoped>\n.form-view-detail{  \nmax-width: 400px;\nmargin: auto;\n}\n.pageination {\n  margin-top: 20px;\n  color: #48576a;\n  font-size: 12px;\n  display: inline-block;\n  user-select: none;\n}\n\n.pagination_page {\n  padding: 0 4px;\n  border: 1px solid #d1dbe5;\n  border-right: 0;\n  background: #fff;\n  font-size: 13px;\n  min-width: 28px;\n  height: 28px;\n  line-height: 28px;\n  cursor: pointer;\n  box-sizing: border-box;\n  text-align: center;\n  float: left;\n}\n\n.pagination_page_right {\n  border-right: 1px solid #d1dbe5;\n}\n\n.form-table table {  \n  width: 100%; /* 表格宽度 */  \n  border-collapse: collapse; /* 合并边框 */  \n}  \n  \n.form-table table tr td {  \n  padding: 10px; /* 单元格内边距 */  \n  border: 1px solid #ddd; /* 单元格边框 */  \n}  \n  \n.form-table table tr td:first-child {  \n  width: 30%; /* 可以调整标签列的宽度 */  \n}  \n\n.form-table table tr td input {  \n  width: 100%; /* 输入字段占满单元格宽度 */  \n  box-sizing: border-box; /* 包含内边距和边框 */  \n}  \n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}