{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"详情页面\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_NavBar), _hoisted_1, _createElementVNode(\"p\", null, \"标题: \" + _toDisplayString(_ctx.titleText), 1 /* TEXT */), _createCommentVNode(\" 在这里添加其他详情页面的内容 \")]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createVNode","_component_NavBar","_hoisted_1","_toDisplayString","_ctx","titleText","_createCommentVNode"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormFillDetail.vue"],"sourcesContent":["<template>  \n    <div>  \n      <NavBar/>\n      <h1>详情页面</h1>  \n      <p>标题: {{ titleText }}</p>  \n      <!-- 在这里添加其他详情页面的内容 -->  \n    </div>  \n  </template>  \n    \n  <script>  \n   import NavBar from './NavBar.vue'; \n  export default {  \n    props: ['title'], // 接收从父组件传递过来的 titleText  \n    data() {  \n    return { \n      title:'', \n      item: [],\n      itemType:[]\n    };  \n  },  \n  components: {\n          NavBar,\n      },\n  methods: {  \n    getItems() {   \n      axios.post('http://localhost:8080/api/register', {  \n\n        })  \n        .then(response => {  \n          if (response.data.success) { \n            //console.log('表单提交成功'); \n            this.titles=response.data.titles\n          }\n          else {  \n            this.getErrorMessage = response.data.message || '表单列表获取失败，请稍后再试';  \n          }\n         })  \n        .catch(error => {  \n          if (error.response) {  \n            // 后端返回的错误信息\n            this.getErrorMessage = error.response.data;   \n          }\n          else {\n            this.getErrorMessage = '表单提交失败，请稍后再试';\n          }\n        });  \n    },  \n    goToDetail(title) {  \n      this.$router.push({ name: 'FormFillDetail', params: { title: title} });  \n    }  \n  },  \n    created() {  \n      //this.getItems();\n      console.log(title); // 在组件创建时获取数据  \n    },\n\n  };  \n  </script>"],"mappings":";gCAGMA,mBAAA,CAAa,YAAT,MAAI;;;uBAFVC,mBAAA,CAKM,cAJJC,YAAA,CAASC,iBAAA,GACTC,UAAa,EACbJ,mBAAA,CAA0B,WAAvB,MAAI,GAAAK,gBAAA,CAAGC,IAAA,CAAAC,SAAS,kBACnBC,mBAAA,oBAAuB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}