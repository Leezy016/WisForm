{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from './NavBar.vue';\n//import axios from 'axios';\nexport default {\n  props: ['title'],\n  data() {\n    return {\n      sum: 10,\n      //总条目数\n      nums: [],\n      curNum: 5,\n      //当前页数默认1\n\n      item: ['item1', 'item2'],\n      content: ['1', '2'],\n      getcErrorMessage: '',\n      getsErrorMessage: ''\n    };\n  },\n  components: {\n    NavBar\n  },\n  methods: {\n    pagers() {\n      //重置\n      this.nums = [];\n      //开始页码1\n      let start = this.curNum - 3 > 1 ? this.curNum - 3 : 1;\n      //当前页码减去开始页码得到差\n      let interval = this.curNum - start;\n      //最多7个页码，总页码减去interval 得到end要显示的数量+\n      let end = 7 - interval < this.sum ? 7 - interval : this.sum;\n      //最末页码减开始页码小于8\n      if (end - start != 6) {\n        //最末页码加上与不足7页的数量，数量不得大于总页数\n        end = end + (6 - (end - start)) < this.sum ? end + (6 - (end - start)) : this.sum;\n        //最末页码加上但是还不够7页，进行开始页码追加，开始页码不得小于1\n        if (end - start != 6) {\n          start = end - 6 > 1 ? end - 6 : 1;\n        }\n      }\n      for (let i = start; i <= end; i++) {\n        this.nums.push(i);\n      }\n    },\n    //计算分页显示的数字\n    pageUp(state) {\n      if (this.curNum - 1 != 0 && state == 1) {\n        this.jump(this.curNum - 1);\n      } else {\n        this.jump(1);\n      }\n    },\n    //上一页跟首页 state=1是上一页 state=0是首页\n    pageDown(state) {\n      if (this.curNum + 1 != this.sum && state == 1) {\n        this.jump(this.curNum + 1);\n      } else {\n        this.jump(this.sum);\n      }\n    },\n    // state=1是下一页 state=0是尾页\n    jump(num) {\n      this.curNum = num;\n      //this.pagers();\n      //this.pageChangge(this.curNum);\n    } //跳转页码\n  },\n  created() {\n    //this.getSum();\n    //this.getContent(0); \n    this.pagers();\n  }\n};","map":{"version":3,"names":["NavBar","props","data","sum","nums","curNum","item","content","getcErrorMessage","getsErrorMessage","components","methods","pagers","start","interval","end","i","push","pageUp","state","jump","pageDown","num","created"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormViewDetail.vue"],"sourcesContent":["<template>\n  <div class=\"form-view-detail\"> \n    <NavBar /> \n    <div v-for=\"(itemName, index) in item\" :key=\"index\" class=\"form-group\">  \n        <label>{{ itemName }}:   </label> \n        <lable>\n          {{ content[index] }}\n        </lable> \n          <!-- <input v-model=\"content[index]\" />   -->\n    </div>\n    <form v-if=\"showForm\"  class=\"form-table\">    \n        <table>    \n            <!-- 循环渲染已选择的表单项为表格形式 -->  \n            <tr v-for=\"(itemName, index) in item\" :key=\"index\">    \n                <td>    \n                  <label>{{ itemName }}:   </label> \n<lable>\n          {{ content[index] }}\n        </lable> \n                </td>    \n                <td>    \n                  <p >  </p>\n                </td>    \n                \n            </tr>    \n        </table>    \n        <button type=\"submit\" class=\"submit-btn\">提交</button>  <!-- 提交表单的按钮 -->  \n    </form>  \n\n    <div class=\"pageination\" v-if=\"sum\">\n      <div @click=\"pageUp(0)\" class=\"pagination_page\">首页</div>\n      <div @click=\"pageUp(1)\" class=\"pagination_page\">上一页</div>\n      <div class=\"pagination_page\" \n          v-for=\"(i,index) in nums\" :key=\"index\" @click=\"jump(i)\">\n        {{i}}</div>\n      <div @click=\"pageDown(1)\" class=\"pagination_page\" >下一页</div>\n      <div @click=\"pageDown(0)\" class=\"pagination_page pagination_page_right\" >尾页</div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n\nimport NavBar from './NavBar.vue'; \n//import axios from 'axios';\nexport default {\n  props: ['title'],\n  data() {  \n    return {  \n      sum:10,//总条目数\n      nums: [],\n      curNum: 5,//当前页数默认1\n\n      item: ['item1','item2'],\n      content:['1','2'],\n      getcErrorMessage:'',\n      getsErrorMessage:'', \n    };  \n  }, \n  components: {  \n    NavBar,  \n  } ,\n  methods:{\n    pagers(){\n        //重置\n        this.nums = [];\n        //开始页码1\n        let start = this.curNum - 3 > 1 ? this.curNum - 3 : 1;\n        //当前页码减去开始页码得到差\n        let interval = this.curNum - start;\n        //最多7个页码，总页码减去interval 得到end要显示的数量+\n        let end = (7 - interval) < this.sum ? (7 - interval) : this.sum;\n        //最末页码减开始页码小于8\n        if ((end - start) != 6) {\n          //最末页码加上与不足7页的数量，数量不得大于总页数\n          end = end + (6 - (end - start)) < this.sum ? end + (6 - (end - start)) : this.sum;\n          //最末页码加上但是还不够7页，进行开始页码追加，开始页码不得小于1\n          if ((end - start) != 6) {\n            start = (end - 6) > 1 ? (end - 6) : 1;\n          }\n        }\n        for (let i = start; i <= end; i++) {\n          this.nums.push(i);\n        }\n      },//计算分页显示的数字\n    pageUp(state){\n      if (this.curNum - 1 != 0 && state == 1) {\n        this.jump(this.curNum - 1);\n      } else {\n        this.jump(1);\n      }\n    },//上一页跟首页 state=1是上一页 state=0是首页\n    pageDown(state){\n      if (this.curNum + 1 != this.sum && state == 1) {\n        this.jump(this.curNum + 1);\n      } else {\n        this.jump(this.sum);\n      }\n    },// state=1是下一页 state=0是尾页\n    jump(num){\n        this.curNum = num;\n        //this.pagers();\n        //this.pageChangge(this.curNum);\n      },//跳转页码\n  },\n  created() {  \n    //this.getSum();\n    //this.getContent(0); \n    this.pagers();\n  }, \n};\n</script>\n\n<style scoped>\n.form-view-detail{  \nmax-width: 400px;\nmargin: auto;\n}\n.pageination {\n  color: #48576a;\n  font-size: 12px;\n  display: inline-block;\n  user-select: none;\n}\n\n.pagination_page {\n  padding: 0 4px;\n  border: 1px solid #d1dbe5;\n  border-right: 0;\n  background: #fff;\n  font-size: 13px;\n  min-width: 28px;\n  height: 28px;\n  line-height: 28px;\n  cursor: pointer;\n  box-sizing: border-box;\n  text-align: center;\n  float: left;\n}\n\n.pagination_page_right {\n  border-right: 1px solid #d1dbe5;\n}\n</style>\n"],"mappings":";AA4CA,OAAOA,MAAK,MAAO,cAAc;AACjC;AACA,eAAe;EACbC,KAAK,EAAE,CAAC,OAAO,CAAC;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAC,EAAE;MAAC;MACPC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,CAAC;MAAC;;MAEVC,IAAI,EAAE,CAAC,OAAO,EAAC,OAAO,CAAC;MACvBC,OAAO,EAAC,CAAC,GAAG,EAAC,GAAG,CAAC;MACjBC,gBAAgB,EAAC,EAAE;MACnBC,gBAAgB,EAAC;IACnB,CAAC;EACH,CAAC;EACDC,UAAU,EAAE;IACVV;EACF;EACAW,OAAO,EAAC;IACNC,MAAMA,CAAA,EAAE;MACJ;MACA,IAAI,CAACR,IAAG,GAAI,EAAE;MACd;MACA,IAAIS,KAAI,GAAI,IAAI,CAACR,MAAK,GAAI,IAAI,IAAI,IAAI,CAACA,MAAK,GAAI,IAAI,CAAC;MACrD;MACA,IAAIS,QAAO,GAAI,IAAI,CAACT,MAAK,GAAIQ,KAAK;MAClC;MACA,IAAIE,GAAE,GAAK,IAAID,QAAQ,GAAI,IAAI,CAACX,GAAE,GAAK,IAAIW,QAAQ,GAAI,IAAI,CAACX,GAAG;MAC/D;MACA,IAAKY,GAAE,GAAIF,KAAK,IAAK,CAAC,EAAE;QACtB;QACAE,GAAE,GAAIA,GAAE,IAAK,KAAKA,GAAE,GAAIF,KAAK,CAAC,IAAI,IAAI,CAACV,GAAE,GAAIY,GAAE,IAAK,KAAKA,GAAE,GAAIF,KAAK,CAAC,IAAI,IAAI,CAACV,GAAG;QACjF;QACA,IAAKY,GAAE,GAAIF,KAAK,IAAK,CAAC,EAAE;UACtBA,KAAI,GAAKE,GAAE,GAAI,CAAC,GAAI,IAAKA,GAAE,GAAI,CAAC,GAAI,CAAC;QACvC;MACF;MACA,KAAK,IAAIC,CAAA,GAAIH,KAAK,EAAEG,CAAA,IAAKD,GAAG,EAAEC,CAAC,EAAE,EAAE;QACjC,IAAI,CAACZ,IAAI,CAACa,IAAI,CAACD,CAAC,CAAC;MACnB;IACF,CAAC;IAAC;IACJE,MAAMA,CAACC,KAAK,EAAC;MACX,IAAI,IAAI,CAACd,MAAK,GAAI,KAAK,KAAKc,KAAI,IAAK,CAAC,EAAE;QACtC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACf,MAAK,GAAI,CAAC,CAAC;MAC5B,OAAO;QACL,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC;MACd;IACF,CAAC;IAAC;IACFC,QAAQA,CAACF,KAAK,EAAC;MACb,IAAI,IAAI,CAACd,MAAK,GAAI,KAAK,IAAI,CAACF,GAAE,IAAKgB,KAAI,IAAK,CAAC,EAAE;QAC7C,IAAI,CAACC,IAAI,CAAC,IAAI,CAACf,MAAK,GAAI,CAAC,CAAC;MAC5B,OAAO;QACL,IAAI,CAACe,IAAI,CAAC,IAAI,CAACjB,GAAG,CAAC;MACrB;IACF,CAAC;IAAC;IACFiB,IAAIA,CAACE,GAAG,EAAC;MACL,IAAI,CAACjB,MAAK,GAAIiB,GAAG;MACjB;MACA;IACF,CAAC,CAAC;EACN,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA;IACA,IAAI,CAACX,MAAM,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}