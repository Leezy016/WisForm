{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, vModelDynamic as _vModelDynamic } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-fill-detail\"\n};\nconst _hoisted_2 = [\"onInput\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_4 = [\"onUpdate:modelValue\", \"type\", \"placeholder\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submit-btn\"\n}, \"提交\", -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavBar), _createElementVNode(\"p\", null, _toDisplayString(_ctx.title), 1 /* TEXT */), _createCommentVNode(\" 在这里添加其他详情页面的内容 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.item, (itemName, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"form-group\"\n    }, [_createElementVNode(\"label\", null, _toDisplayString(itemName), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n      id: \"phone\",\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.phoneNumber = $event),\n      onInput: $event => _ctx.validatePhoneNumber(index),\n      class: \"form-control\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), [[_vModelText, _ctx.phoneNumber]]), _createCommentVNode(\" 显示错误信息 \"), _ctx.phoneNumberError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString(_ctx.phoneNumberError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => _ctx.formData[_ctx.indexName(index)] = $event,\n      type: _ctx.inputType(index),\n      placeholder: `请输入${_ctx.itemType[index]}类型的数据`,\n      class: \"form-control\"\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelDynamic, _ctx.formData[_ctx.indexName(index)]]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_5, _createCommentVNode(\" 提交表单的按钮 \")]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","type","_createElementBlock","_hoisted_1","_createVNode","_component_NavBar","_toDisplayString","_ctx","title","_createCommentVNode","_Fragment","_renderList","item","itemName","index","id","_cache","$event","phoneNumber","onInput","validatePhoneNumber","_hoisted_2","phoneNumberError","_hoisted_3","formData","indexName","inputType","placeholder","itemType","_hoisted_4","_hoisted_5"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormFillDetail.vue"],"sourcesContent":["<template>  \n    <div class=\"form-fill-detail\">  \n      <NavBar/>\n      <p>{{ title }}</p>  \n      <!-- 在这里添加其他详情页面的内容 -->  \n      <div v-for=\"(itemName, index) in item\" :key=\"index\" class=\"form-group\">  \n      <label>{{ itemName }}</label>  \n      <input  \n        id=\"phone\"  \n        type=\"text\"  \n        v-model=\"phoneNumber\"  \n        @input=\"validatePhoneNumber(index)\"  \n        class=\"form-control\"  \n      />  \n      <!-- 显示错误信息 -->  \n      <p v-if=\"phoneNumberError\" class=\"error-message\">{{ phoneNumberError }}</p>  \n      <input  \n        v-model=\"formData[indexName(index)]\"  \n        :type=\"inputType(index)\"  \n        :placeholder=\"`请输入${itemType[index]}类型的数据`\"  \n        class=\"form-control\"  \n      />  \n    </div>  \n      <button type=\"submit\" class=\"submit-btn\">提交</button>  <!-- 提交表单的按钮 -->\n    </div>  \n  </template>  \n    \n  <script>  \n  import NavBar from './NavBar.vue'; \n  import axios from 'axios';\n  export default {  \n    props: ['title'], // 接收从父组件传递过来的 title \n    data() {  \n    return {  \n      item: ['作者'],\n      itemType:[/^(?:[\\u4e00-\\u9fa5·]{2,16})$/]\n    };  \n    },  \n    components: {\n          NavBar,\n    },\n    methods:{\n      validatePhoneNumber(index) {  \n      // 使用正则表达式来验证电话号码是否为11位数字  \n      const phoneRegex = itemType;  \n      if (!phoneRegex.test(this.phoneNumber)) {  \n        this.phoneNumberError = '电话号码必须是11位数字';  \n      } else {  \n        this.phoneNumberError = ''; // 如果没有错误，清空错误信息  \n      }  \n    } \n    getItems() {   \n      axios.post('http://localhost:8080/api/register', {\n        title:this.title\n      })  \n      .then(response => {  \n        if (response.data.success) { \n          //console.log('表单内容获取成功'); \n          this.item=response.data.item,\n          this.itemType=response.data.itemType\n        }\n        else {  \n          this.getErrorMessage = response.data.message || '表单内容获取失败，请稍后再试';  \n        }\n      })  \n      .catch(error => {  \n        if (error.response) {  \n          // 后端返回的错误信息\n          this.getErrorMessage = error.response.data;   \n        }\n        else {\n          this.getErrorMessage = '表单内容获取失败，请稍后再试';\n        }\n      });  \n    },   \n    },  \n    created() {  \n      this.getItems(); \n    },\n\n  };  \n  </script>\n\n  <style>\n  .form-fill-detail{\n    margin: auto;\n  }\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAkB;mBADjC;;EAAAC,GAAA;EAeiCD,KAAK,EAAC;;mBAfvC;gCAuBME,mBAAA,CAAoD;EAA5CC,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAa,IAAE;;;uBAtB7CI,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,YAAA,CAASC,iBAAA,GACTL,mBAAA,CAAkB,WAAAM,gBAAA,CAAZC,IAAA,CAAAC,KAAK,kBACXC,mBAAA,oBAAuB,G,kBACvBP,mBAAA,CAiBIQ,SAAA,QAtBVC,WAAA,CAKuCJ,IAAA,CAAAK,IAAI,EAL3C,CAKmBC,QAAQ,EAAEC,KAAK;yBAA5BZ,mBAAA,CAiBI;MAjBoCH,GAAG,EAAEe,KAAK;MAAEhB,KAAK,EAAC;QAC1DE,mBAAA,CAA6B,eAAAM,gBAAA,CAAnBO,QAAQ,kB,gBAClBb,mBAAA,CAME;MALAe,EAAE,EAAC,OAAO;MACVd,IAAI,EAAC,MAAM;MATnB,uBAAAe,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUiBV,IAAA,CAAAW,WAAW,GAAAD,MAAA;MACnBE,OAAK,EAAAF,MAAA,IAAEV,IAAA,CAAAa,mBAAmB,CAACN,KAAK;MACjChB,KAAK,EAAC;6CAZduB,UAAA,I,cAUiBd,IAAA,CAAAW,WAAW,E,GAItBT,mBAAA,YAAe,EACNF,IAAA,CAAAe,gBAAgB,I,cAAzBpB,mBAAA,CAA2E,KAA3EqB,UAA2E,EAAAjB,gBAAA,CAAvBC,IAAA,CAAAe,gBAAgB,oBAf1Eb,mBAAA,gB,gBAgBMT,mBAAA,CAKE;MArBR,uBAAAiB,MAAA,IAiBiBV,IAAA,CAAAiB,QAAQ,CAACjB,IAAA,CAAAkB,SAAS,CAACX,KAAK,KAAAG,MAAA;MAChChB,IAAI,EAAEM,IAAA,CAAAmB,SAAS,CAACZ,KAAK;MACrBa,WAAW,QAAQpB,IAAA,CAAAqB,QAAQ,CAACd,KAAK;MAClChB,KAAK,EAAC;4BApBd+B,UAAA,I,iBAiBiBtB,IAAA,CAAAiB,QAAQ,CAACjB,IAAA,CAAAkB,SAAS,CAACX,KAAK,I;kCAMnCgB,UAAoD,EAAErB,mBAAA,aAAgB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}