{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"标题\")])], -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_NavBar), _createElementVNode(\"table\", null, [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedFields, (field, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"form-item\"\n    });\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.titles, (title, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: title.id,\n      onClick: $event => $options.goToDetail(title)\n    }, [_createElementVNode(\"td\", null, _toDisplayString(title.text), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createVNode","_component_NavBar","_hoisted_1","_Fragment","_renderList","_ctx","selectedFields","field","index","key","class","$data","titles","title","id","onClick","$event","$options","goToDetail","_toDisplayString","text","_hoisted_2"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormFill.vue"],"sourcesContent":["<template>  \r\n  <div>  \r\n    <NavBar/>\r\n    <table>  \r\n      <thead>  \r\n        <tr><th>标题</th></tr>  \r\n      </thead>  \r\n      <tbody> \r\n        <div v-for=\"(field, index) in selectedFields\" :key=\"index\" class=\"form-item\"></div> \r\n        <tr v-for=\"(title,index) in titles\" :key=\"title.id\" @click=\"goToDetail(title)\">  \r\n          <td>{{ title.text }}</td>  \r\n        </tr>  \r\n      </tbody>  \r\n    </table>  \r\n  </div>  \r\n</template>\r\n\r\n<script>\r\nimport NavBar from '../components/NavBar.vue';  \r\nexport default {  \r\n  data() {  \r\n    return {  \r\n      titles: [] // 假设这是从后端获取的数据  \r\n    };  \r\n  },  \r\n  components: {\r\n          NavBar,\r\n      },\r\n  methods: {  \r\n    // 假设你已经有了获取数据的方法  \r\n    fetchTitles() {  \r\n      // 模拟从后端获取数据  \r\n      // 实际应用中，你可能会使用 axios 或其他 HTTP 库来请求后端 API  \r\n      this.titles = [  \r\n        { id: 1, text: '标题1' },  \r\n        { id: 2, text: '标题2' },  \r\n        // ...  \r\n      ];  \r\n    },  \r\n    goToDetail(title) {  \r\n      this.$router.push({ name: 'TitleDetail', params: { titleId: title.id, titleText: title.text } });  \r\n    }  \r\n  },  \r\n  created() {  \r\n    this.fetchTitles(); // 在组件创建时获取数据  \r\n  }  \r\n};  \r\n</script>\r\n\r\n<style>  \r\n.container {  \r\n  display: flex;  \r\n  flex-direction: row;  \r\n}  \r\n  \r\n.content {  \r\n  margin-left: 200px; /* 与侧边栏的宽度相同，以确保内容不会与侧边栏重叠 */  \r\n  /* 其他样式... */  \r\n}  \r\n</style>"],"mappings":";gCAIMA,mBAAA,CAEQ,gB,aADNA,mBAAA,CAAoB,a,aAAhBA,mBAAA,CAAW,YAAP,IAAE,E;mBALlB;;;uBACEC,mBAAA,CAaM,cAZJC,YAAA,CAASC,iBAAA,GACTH,mBAAA,CAUQ,gBATNI,UAEQ,EACRJ,mBAAA,CAKQ,iB,kBAJNC,mBAAA,CAAmFI,SAAA,QAR3FC,WAAA,CAQsCC,IAAA,CAAAC,cAAc,EARpD,CAQqBC,KAAK,EAAEC,KAAK;yBAAzBT,mBAAA,CAAmF;MAApCU,GAAG,EAAED,KAAK;MAAEE,KAAK,EAAC;;qDACjEX,mBAAA,CAEKI,SAAA,QAXbC,WAAA,CASoCO,KAAA,CAAAC,MAAM,EAT1C,CASoBC,KAAK,EAACL,KAAK;yBAAvBT,mBAAA,CAEK;MAFgCU,GAAG,EAAEI,KAAK,CAACC,EAAE;MAAGC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACL,KAAK;QAC1Ef,mBAAA,CAAyB,YAAAqB,gBAAA,CAAlBN,KAAK,CAACO,IAAI,iB,iBAV3BC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}