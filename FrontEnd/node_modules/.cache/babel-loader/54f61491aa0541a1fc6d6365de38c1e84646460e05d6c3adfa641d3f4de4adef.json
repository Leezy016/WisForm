{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"请选择需要填写的表单\")])], -1 /* HOISTED */);\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_NavBar), _createElementVNode(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.titles, (title, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      onClick: $event => $options.goToDetail(title)\n    }, [_createElementVNode(\"td\", null, _toDisplayString(title), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_NavBar","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","titles","title","index","key","onClick","$event","$options","goToDetail","_toDisplayString","_hoisted_3"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormFill.vue"],"sourcesContent":["<template>  \r\n  <div>  \r\n    <NavBar/>\r\n    <table class=\"table\">  \r\n      <thead>  \r\n        <tr><th>请选择需要填写的表单</th></tr>  \r\n      </thead>  \r\n      <tbody>  \r\n        <tr v-for=\"(title,index) in titles\" :key=\"index\" @click=\"goToDetail(title)\">  \r\n          <td>{{ title }}</td>  \r\n        </tr>  \r\n      </tbody>  \r\n    </table>  \r\n  </div>  \r\n</template>\r\n\r\n<script>\r\nimport NavBar from '../components/NavBar.vue'; \r\nimport axios from 'axios';\r\nimport router from '../router'; \r\nexport default {  \r\n  data() {  \r\n    return {  \r\n      titles: []  ,\r\n      getErrorMessage:'' \r\n    };  \r\n  },  \r\n  components: {\r\n          NavBar,\r\n      },\r\n  methods: {  \r\n    getTitles() {   \r\n      axios.post('http://localhost:8080/api/register', {  \r\n        })  \r\n        .then(response => {  \r\n          if (response.data.success) { \r\n            //console.log('表单提交成功'); \r\n            this.titles=response.data.titles\r\n          }\r\n          else {  \r\n            this.getErrorMessage = response.data.message || '表单列表获取失败，请稍后再试';  \r\n          }\r\n         })  \r\n        .catch(error => {  \r\n          if (error.response) {  \r\n            // 后端返回的错误信息\r\n            this.errorMessage = error.response.data;   \r\n          }\r\n          else {\r\n            this.errorMessage = '表单提交失败，请稍后再试';\r\n          }\r\n        });  \r\n    },  \r\n    goToDetail(title) {  \r\n      this.$router.push({ name: 'TitleDetail', params: { titleId: title.id, titleText: title.text } });  \r\n    }  \r\n  },  \r\n  created() {  \r\n    this.getTitles(); // 在组件创建时获取数据  \r\n  }  \r\n};  \r\n</script>\r\n\r\n<style>  \r\n.container {  \r\n  display: flex;  \r\n  flex-direction: row;  \r\n}  \r\n  \r\n.table {  \r\n  max-width: 400px;\r\n  margin: auto;\r\n}  \r\n</style>"],"mappings":";;EAGWA,KAAK,EAAC;AAAO;gCAClBC,mBAAA,CAEQ,gB,aADNA,mBAAA,CAA4B,a,aAAxBA,mBAAA,CAAmB,YAAf,YAAU,E;mBAL1B;;;uBACEC,mBAAA,CAYM,cAXJC,YAAA,CAASC,iBAAA,GACTH,mBAAA,CASQ,SATRI,UASQ,GARNC,UAEQ,EACRL,mBAAA,CAIQ,iB,kBAHNC,mBAAA,CAEKK,SAAA,QAVbC,WAAA,CAQoCC,KAAA,CAAAC,MAAM,EAR1C,CAQoBC,KAAK,EAACC,KAAK;yBAAvBV,mBAAA,CAEK;MAFgCW,GAAG,EAAED,KAAK;MAAGE,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACN,KAAK;QACvEV,mBAAA,CAAoB,YAAAiB,gBAAA,CAAbP,KAAK,iB,iBATtBQ,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}