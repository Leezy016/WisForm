{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, toDisplayString as _toDisplayString, vModelDynamic as _vModelDynamic, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8d78bde0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"dynamic-form\"\n};\nconst _hoisted_2 = {\n  class: \"form-title-input\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"formTitle\"\n}, \"表单标题：\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"text\"\n}, \"文本\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"number\"\n}, \"数字\", -1 /* HOISTED */));\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"for\"];\nconst _hoisted_10 = [\"type\", \"id\", \"onUpdate:modelValue\"];\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submit-btn\"\n}, \"提交\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_NavBar), _createCommentVNode(\" 引入并使用NavBar组件 \")]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"formTitle\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formTitle = $event),\n    placeholder: \"请输入表单标题\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formTitle]])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedFields, (field, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"form-item\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => field.label = $event,\n      placeholder: \"表单项名称\",\n      class: \"field-input\"\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelText, field.label]]), _withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": $event => field.type = $event,\n      class: \"field-select\"\n    }, [_hoisted_6, _hoisted_7, _createCommentVNode(\" 可以根据需要添加更多的选项 \")], 8 /* PROPS */, _hoisted_5), [[_vModelSelect, field.type]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeField(index),\n      class: \"remove-btn\"\n    }, \"-\", 8 /* PROPS */, _hoisted_8)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addField && $options.addField(...args)),\n    class: \"add-btn\"\n  }, \"添加表单项\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.generateForm && $options.generateForm(...args)),\n    class: \"generate-btn\"\n  }, \"确认\"), $data.showForm ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 0,\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"])),\n    class: \"form-table\"\n  }, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedFields, (field, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"label\", {\n      for: field.id,\n      class: \"field-label\"\n    }, _toDisplayString(field.label), 9 /* TEXT, PROPS */, _hoisted_9)]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: field.type,\n      id: field.id,\n      \"onUpdate:modelValue\": $event => _ctx.formData[field.id] = $event,\n      class: \"field-input\"\n    }, null, 8 /* PROPS */, _hoisted_10), [[_vModelDynamic, _ctx.formData[field.id]]])])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_11], 32 /* NEED_HYDRATION */)) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","for","value","type","_createElementBlock","_Fragment","_createVNode","_component_NavBar","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","id","_cache","$event","$data","formTitle","placeholder","_renderList","selectedFields","field","index","key","label","_hoisted_4","_hoisted_6","_hoisted_7","_hoisted_5","onClick","$options","removeField","_hoisted_8","args","addField","generateForm","showForm","onSubmit","_withModifiers","submitForm","_hoisted_9","_ctx","formData","_hoisted_10","_hoisted_11"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormCreate.vue"],"sourcesContent":["\r\n<template>\r\n      <div> \r\n        <NavBar/> <!-- 引入并使用NavBar组件 --> \r\n      </div>\r\n      <div class=\"dynamic-form\">\r\n        <div class=\"form-title-input\">  \r\n          <label for=\"formTitle\">表单标题：</label>  \r\n          <input type=\"text\" id=\"formTitle\" v-model=\"formTitle\" placeholder=\"请输入表单标题\">  \r\n        </div> \r\n\r\n        <div v-for=\"(field, index) in selectedFields\" :key=\"index\" class=\"form-item\">\r\n          <input type=\"text\" v-model=\"field.label\" placeholder=\"表单项名称\" class=\"field-input\">\r\n            <select v-model=\"field.type\" class=\"field-select\">\r\n              <option value=\"text\">文本</option>\r\n              <option value=\"number\">数字</option>\r\n              <!-- 可以根据需要添加更多的选项 -->\r\n            </select>\r\n          <button @click=\"removeField(index)\" class=\"remove-btn\">-</button>\r\n        </div>\r\n\r\n        <button @click=\"addField\" class=\"add-btn\">添加表单项</button>\r\n        <button @click=\"generateForm\" class=\"generate-btn\">确认</button>\r\n\r\n        <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"form-table\">  \r\n          <table>  \r\n            <tr v-for=\"(field, index) in selectedFields\" :key=\"index\">  \r\n              <td>  \r\n                <label :for=\"field.id\" class=\"field-label\">{{ field.label }}</label>  \r\n              </td>  \r\n              <td>  \r\n                <input :type=\"field.type\" :id=\"field.id\" v-model=\"formData[field.id]\" class=\"field-input\">  \r\n              </td>  \r\n            </tr>  \r\n          </table>  \r\n          <button type=\"submit\" class=\"submit-btn\">提交</button>  \r\n        </form>\r\n\r\n    </div>\r\n  </template>\r\n\r\n  <script>\r\n  import NavBar from './NavBar.vue'; \r\n  import { mapGetters } from 'vuex';\r\n  export default {\r\n    name: 'FormCreate',\r\n    components: {  \r\n      NavBar\r\n    } ,\r\n    data() {\r\n      return {\r\n        selectedFields: [{ id: 'field1', label: '字段1', type: 'text' }],\r\n        showForm: false,\r\n        formTitle:''\r\n      };\r\n    }, \r\n    computed: {  \r\n      // 计算属性返回label数组  \r\n      labelArray() {  \r\n        return this.selectedFields.map(field => field.label);  \r\n      },  \r\n      // 计算属性返回type数组  \r\n      typeArray() {  \r\n        return this.selectedFields.map(field => field.type);  \r\n      },\r\n      ...mapGetters([  \r\n        'username'  \r\n      ])     \r\n    },\r\n    methods: {\r\n      addField() {\r\n        const id = `field${this.selectedFields.length + 1}`;\r\n        this.selectedFields.push({ id, label: `字段${this.selectedFields.length + 1}`, type: 'text' });\r\n      },\r\n      removeField(index) {\r\n        this.selectedFields.splice(index, 1);\r\n      },\r\n      generateForm() {\r\n        this.showForm = true;\r\n        // 生成表单数据对象，用于绑定表单输入\r\n        this.formData = this.selectedFields.reduce((acc, field) => {\r\n          acc[field.id] = '';\r\n          return acc;\r\n        });\r\n      },\r\n      submitForm() {\r\n          const { username } = this; \r\n          axios.post('http://localhost:8080/api/register', {  \r\n            lable: this.labelArray,  \r\n            type: this.typeArray,  \r\n            username: username,\r\n            title:this.formTitle\r\n          })  \r\n          .then(response => {  \r\n            if (response.data.success) { \r\n            console.log('表单创建成功');\r\n            // 使用router.push跳转到/login页面  \r\n        router.push('/form-create'); \r\n        alert('表单创建成功！');\r\n        }else {  \r\n          this.errorMessage = response.data.message || '表单创建失败了，请稍后再试';  \r\n        }\r\n      })  \r\n      .catch(error => {  \r\n        if (error.response) {  \r\n          // 后端返回的错误信息\r\n          this.errorMessage = error.response.data;   \r\n        }else {\r\n          this.errorMessage = '表单创建失败，请稍后再试';\r\n        }\r\n      }); \r\n      },\r\n    },  \r\n};\r\n  </script>\r\n\r\n<style scoped>\r\n.dynamic-form {\r\n  max-width: 400px;\r\n  margin: auto;\r\n}\r\n\r\n.form-title-input{\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.form-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.field-input {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.field-select {\r\n  width: 120px;\r\n}\r\n\r\n.remove-btn {\r\n  margin-left: 10px;\r\n}\r\n\r\n.add-btn,.submit-btn , .generate-btn {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.form-table table {  \r\n  width: 100%; /* 表格宽度 */  \r\n  border-collapse: collapse; /* 合并边框 */  \r\n}  \r\n  \r\n.form-table table tr td {  \r\n  padding: 10px; /* 单元格内边距 */  \r\n  border: 1px solid #ddd; /* 单元格边框 */  \r\n}  \r\n  \r\n.form-table table tr td:first-child {  \r\n  width: 30%; /* 可以调整标签列的宽度 */  \r\n}  \r\n\r\n.form-table table tr td input {  \r\n  width: 100%; /* 输入字段占满单元格宽度 */  \r\n  box-sizing: border-box; /* 包含内边距和边框 */  \r\n}  \r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}