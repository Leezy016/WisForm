{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport axios from 'axios';\nexport default {\n  name: 'RegisterForm',\n  data() {\n    return {\n      username: '',\n      password: '',\n      role: 'dean',\n      department: '',\n      isNotDean: false,\n      errorMessage: ''\n    };\n  },\n  methods: {\n    handleSubmit() {\n      if (!this.username) {\n        this.errorMessage = '请填写用户名';\n        return;\n      }\n      if (!this.password) {\n        this.errorMessage = '请填写密码';\n        return;\n      }\n      if (!this.role) {\n        this.errorMessage = '请填写用户身份';\n        return;\n      }\n      if (this.role != 'dean' && !this.department) {\n        this.errorMessage = '请填写所处院系';\n        return;\n      }\n      this.errorMessage = '';\n      axios.post('http://localhost:8080/api/register', {\n        username: this.username,\n        password: this.password,\n        role: this.role,\n        department: this.department\n      }).then(response => {\n        if (response.data.success) {\n          // 注册成功处理逻辑  \n          console.log('注册成功');\n          // 使用router.push跳转到/login页面  \n          router.push('/login');\n          alert('注册成功！');\n        } else {\n          this.errorMessage = response.data.message || '注册失败了，请稍后再试';\n        }\n      }).catch(error => {\n        if (error.response) {\n          // 后端返回的错误信息\n          this.errorMessage = error.response.data;\n        } else {\n          this.errorMessage = '注册失败，请稍后再试';\n        }\n      });\n    },\n    checkDean() {\n      // 当身份选择变化时，检查是否为院长 \n      if (this.role === 'dean') this.isNotDean = false;else this.isNotDean = true;\n    }\n  }\n};","map":{"version":3,"names":["router","axios","name","data","username","password","role","department","isNotDean","errorMessage","methods","handleSubmit","post","then","response","success","console","log","push","alert","message","catch","error","checkDean"],"sources":["C:\\Users\\cruel eleven\\Desktop\\wisform\\FrontEnd\\src\\components\\Registation.vue"],"sourcesContent":["<template>  \r\n    <div class=\"registation\">  \r\n      <h2>注册</h2>  \r\n      <form @submit.prevent=\"handleSubmit\">  \r\n        <div>  \r\n          <label for=\"username\">用户名:</label>  \r\n          <input type=\"text\" id=\"username\" v-model=\"username\" required>  \r\n        </div>  \r\n        <div>  \r\n          <label for=\"password\">密码:</label>  \r\n          <input type=\"password\" id=\"password\" v-model=\"password\" required>  \r\n        </div>  \r\n        <div>  \r\n          <label for=\"role\">身份:</label>  \r\n          <select id=\"role\" v-model=\"role\" @change=\"checkDean\" required>    \r\n            <option value=\"dean\">院长</option>    \r\n            <option value=\"chair\">系主任</option>   \r\n            <option value=\"teacher\">老师</option> \r\n          </select>  \r\n        </div>  \r\n        <div v-if=\"isNotDean\">  \r\n          <label for=\"department\">系别:</label>    \r\n          <select id=\"department\" v-model=\"department\">  \r\n            <option value=\"CS\">计算机科学与技术</option>  \r\n            <option value=\"IS\">信息安全</option>  \r\n            <!-- 其他系别 -->  \r\n          </select>  \r\n        </div>  \r\n        <button type=\"submit\">注册</button>  \r\n      </form>  \r\n      <p v-if=\"errorMessage\" class=\"errorMessage\">{{ errorMessage }}</p>  \r\n    </div>  \r\n  </template>  \r\n    \r\n  <script>  \r\nimport router from '../router';\r\nimport axios from 'axios';\r\n\r\nexport default {  \r\n  name: 'RegisterForm',  \r\n  data() {  \r\n    return {  \r\n      username: '',  \r\n      password: '',  \r\n      role: 'dean', \r\n      department:'',\r\n      isNotDean:false,\r\n      errorMessage: '',  \r\n    };  \r\n  },  \r\n  methods: {  \r\n    handleSubmit() {  \r\n      if (!this.username){\r\n        this.errorMessage = '请填写用户名';  \r\n        return;  \r\n      } \r\n      if (!this.password){\r\n        this.errorMessage = '请填写密码';  \r\n        return;  \r\n      }\r\n      if (!this.role){\r\n        this.errorMessage = '请填写用户身份';  \r\n        return;  \r\n      } \r\n      if (this.role!='dean' && !this.department){\r\n        this.errorMessage = '请填写所处院系';  \r\n        return;  \r\n      } \r\n\r\n\r\n      this.errorMessage = '';  \r\n\r\n      axios.post('http://localhost:8080/api/register', {  \r\n        username: this.username,  \r\n        password: this.password,  \r\n        role: this.role , \r\n        department:this.department\r\n      })  \r\n      .then(response => {  \r\n        if (response.data.success) {\r\n        // 注册成功处理逻辑  \r\n        console.log('注册成功');\r\n        // 使用router.push跳转到/login页面  \r\n        router.push('/login'); \r\n        alert('注册成功！');\r\n        }else {  \r\n          this.errorMessage = response.data.message || '注册失败了，请稍后再试';  \r\n        }\r\n      })  \r\n      .catch(error => {  \r\n        if (error.response) {  \r\n          // 后端返回的错误信息\r\n          this.errorMessage = error.response.data;   \r\n        }else {\r\n          this.errorMessage = '注册失败，请稍后再试';\r\n        }\r\n      });  \r\n    }, \r\n    checkDean() {  \r\n      // 当身份选择变化时，检查是否为院长 \r\n      if(this.role==='dean')\r\n      this.isNotDean = false;\r\n      else\r\n      this.isNotDean = true;\r\n    },  \r\n  },  \r\n};  \r\n  </script>  \r\n    \r\n  <style scoped>  \r\n  .register-container {  \r\n    display: flex;  \r\n    flex-direction: column;  \r\n    align-items: center;  \r\n    justify-content: center;  \r\n    height: 100vh;  \r\n    padding: 20px;  \r\n    box-sizing: border-box;  \r\n  }  \r\n    \r\n  .error-message {  \r\n    color: red;  \r\n    margin-top: 10px;  \r\n  }  \r\n  </style>"],"mappings":";AAmCA,OAAOA,MAAK,MAAO,WAAW;AAC9B,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,MAAM;MACZC,UAAU,EAAC,EAAE;MACbC,SAAS,EAAC,KAAK;MACfC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAACP,QAAQ,EAAC;QACjB,IAAI,CAACK,YAAW,GAAI,QAAQ;QAC5B;MACF;MACA,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAC;QACjB,IAAI,CAACI,YAAW,GAAI,OAAO;QAC3B;MACF;MACA,IAAI,CAAC,IAAI,CAACH,IAAI,EAAC;QACb,IAAI,CAACG,YAAW,GAAI,SAAS;QAC7B;MACF;MACA,IAAI,IAAI,CAACH,IAAI,IAAE,MAAK,IAAK,CAAC,IAAI,CAACC,UAAU,EAAC;QACxC,IAAI,CAACE,YAAW,GAAI,SAAS;QAC7B;MACF;MAGA,IAAI,CAACA,YAAW,GAAI,EAAE;MAEtBR,KAAK,CAACW,IAAI,CAAC,oCAAoC,EAAE;QAC/CR,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,IAAI,EAAE,IAAI,CAACA,IAAG;QACdC,UAAU,EAAC,IAAI,CAACA;MAClB,CAAC,EACAM,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACX,IAAI,CAACY,OAAO,EAAE;UAC3B;UACAC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;UACnB;UACAjB,MAAM,CAACkB,IAAI,CAAC,QAAQ,CAAC;UACrBC,KAAK,CAAC,OAAO,CAAC;QACd,CAAC,MAAK;UACJ,IAAI,CAACV,YAAW,GAAIK,QAAQ,CAACX,IAAI,CAACiB,OAAM,IAAK,aAAa;QAC5D;MACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACR,QAAQ,EAAE;UAClB;UACA,IAAI,CAACL,YAAW,GAAIa,KAAK,CAACR,QAAQ,CAACX,IAAI;QACzC,CAAC,MAAK;UACJ,IAAI,CAACM,YAAW,GAAI,YAAY;QAClC;MACF,CAAC,CAAC;IACJ,CAAC;IACDc,SAASA,CAAA,EAAG;MACV;MACA,IAAG,IAAI,CAACjB,IAAI,KAAG,MAAM,EACrB,IAAI,CAACE,SAAQ,GAAI,KAAK,MAEtB,IAAI,CAACA,SAAQ,GAAI,IAAI;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}