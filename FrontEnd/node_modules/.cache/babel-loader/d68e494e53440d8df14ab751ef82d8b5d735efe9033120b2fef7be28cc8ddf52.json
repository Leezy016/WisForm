{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from '../components/NavBar.vue';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      titles: [],\n      getErrorMessage: ''\n    };\n  },\n  components: {\n    NavBar\n  },\n  methods: {\n    getTitles() {\n      axios.post('http://localhost:8080/fillformlist', {}).then(response => {\n        if (response.data.success) {\n          //console.log('表单提交成功'); \n          this.titles = response.data.titles;\n        } else {\n          this.getErrorMessage = response.data.message || '表单列表获取失败，请稍后再试';\n        }\n      }).catch(error => {\n        if (error.response) {\n          // 后端返回的错误信息\n          this.getErrorMessage = error.response.data;\n        } else {\n          this.getErrorMessage = '表单提交失败，请稍后再试';\n        }\n      });\n    },\n    goToDetail(title) {\n      this.$router.push({\n        name: 'FormFillDetail',\n        params: {\n          title: title\n        }\n      });\n    }\n  },\n  created() {\n    this.getTitles(); // 在组件创建时获取数据  \n  }\n};","map":{"version":3,"names":["NavBar","axios","data","titles","getErrorMessage","components","methods","getTitles","post","then","response","success","message","catch","error","goToDetail","title","$router","push","name","params","created"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormViewDetail.vue"],"sourcesContent":["<template>  \n  <div class=\"form-fill\">  \n    <NavBar/>\n    <table class=\"table\">  \n      <thead>  \n        <tr><th>请选择需要填写的表单</th></tr>  \n      </thead>  \n      <tbody>  \n        <tr v-for=\"(title,index) in titles\" :key=\"index\" @click=\"goToDetail(title)\">  \n          <td>{{ title }}</td>  \n        </tr>  \n      </tbody>  \n    </table> \n    <p v-if=\"getErrorMessage\" class=\"errorMessage\">{{ getErrorMessage }}</p> \n  </div>  \n</template>\n\n<script>\nimport NavBar from '../components/NavBar.vue'; \nimport axios from 'axios';\nexport default {  \n  data() {  \n    return {  \n      titles: [],\n      getErrorMessage:'' \n    };  \n  },  \n  components: {\n      NavBar,\n  },\n  methods: {  \n    getTitles() {   \n      axios.post('http://localhost:8080/fillformlist', {  \n        })  \n        .then(response => {  \n          if (response.data.success) { \n            //console.log('表单提交成功'); \n            this.titles=response.data.titles\n          }\n          else {  \n            this.getErrorMessage = response.data.message || '表单列表获取失败，请稍后再试';  \n          }\n         })  \n        .catch(error => {  \n          if (error.response) {  \n            // 后端返回的错误信息\n            this.getErrorMessage = error.response.data;   \n          }\n          else {\n            this.getErrorMessage = '表单提交失败，请稍后再试';\n          }\n        });  \n    },  \n    goToDetail(title) {  \n      this.$router.push({ name: 'FormFillDetail', params: { title: title} });  \n    }  \n  },  \n  created() {  \n    this.getTitles(); // 在组件创建时获取数据  \n  }  \n};  \n</script>\n\n<style>  \n.container {  \n  display: flex;  \n  flex-direction: row;  \n}  \n  \n.form-fill{  \n  max-width: 400px;\n  margin: auto;\n}  \n</style>\n"],"mappings":";AAkBA,OAAOA,MAAK,MAAO,0BAA0B;AAC7C,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,eAAe,EAAC;IAClB,CAAC;EACH,CAAC;EACDC,UAAU,EAAE;IACRL;EACJ,CAAC;EACDM,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACVN,KAAK,CAACO,IAAI,CAAC,oCAAoC,EAAE,CAC/C,CAAC,EACAC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACR,IAAI,CAACS,OAAO,EAAE;UACzB;UACA,IAAI,CAACR,MAAM,GAACO,QAAQ,CAACR,IAAI,CAACC,MAAK;QACjC,OACK;UACH,IAAI,CAACC,eAAc,GAAIM,QAAQ,CAACR,IAAI,CAACU,OAAM,IAAK,gBAAgB;QAClE;MACD,CAAC,EACDC,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACJ,QAAQ,EAAE;UAClB;UACA,IAAI,CAACN,eAAc,GAAIU,KAAK,CAACJ,QAAQ,CAACR,IAAI;QAC5C,OACK;UACH,IAAI,CAACE,eAAc,GAAI,cAAc;QACvC;MACF,CAAC,CAAC;IACN,CAAC;IACDW,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,MAAM,EAAE;UAAEJ,KAAK,EAAEA;QAAK;MAAE,CAAC,CAAC;IACxE;EACF,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR,IAAI,CAACd,SAAS,CAAC,CAAC,EAAE;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}