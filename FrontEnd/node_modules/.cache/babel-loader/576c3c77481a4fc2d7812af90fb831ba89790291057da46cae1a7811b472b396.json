{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from '../components/NavBar.vue';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      titles: ['111'],\n      getErrorMessage: ''\n    };\n  },\n  components: {\n    NavBar\n  },\n  methods: {\n    getTitles() {\n      axios.post('http://localhost:8080/fillformlist', {\n        username: this.$store.state.username\n      }).then(response => {\n        if (response.data.success) {\n          //console.log('表单提交成功'); \n          this.titles = response.data.titles;\n        } else {\n          this.getErrorMessage = response.data.message || '表单列表获取失败，请稍后再试';\n        }\n      }).catch(error => {\n        if (error.response) {\n          // 后端返回的错误信息\n          this.getErrorMessage = error.response.data;\n        } else {\n          this.getErrorMessage = '表单提交失败，请稍后再试';\n        }\n      });\n    },\n    goToDetail(title) {\n      this.$router.push({\n        name: 'FormFillDetail',\n        params: {\n          title: title\n        }\n      });\n    }\n  },\n  created() {\n    this.getTitles(); // 在组件创建时获取数据  \n  }\n};","map":{"version":3,"names":["NavBar","axios","data","titles","getErrorMessage","components","methods","getTitles","post","username","$store","state","then","response","success","message","catch","error","goToDetail","title","$router","push","name","params","created"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormFill2.vue"],"sourcesContent":["<template>  \n    <div class=\"form-fill\">  \n      <NavBar/>\n      <div class=\"welcome\">  \n        <img src='@/assets/welcome.png' style=\"width: 500px; height: 80px;\"  />  \n        </div>\n      <div >\n        <p>请选择需要填写的表单</p>\n      </div>\n      <table class=\"table\">  \n        <thead>  \n          <tr><th>表单标题</th></tr>  \n        </thead>  \n        <tbody>  \n          <tr v-for=\"(title,index) in titles\" :key=\"index\">  \n            <td>{{ title }}</td> \n            <button type=\"fill\" class=\"fill-btn\" @click=\"goToDetail(title)\">填写</button> \n          </tr>  \n        </tbody>  \n      </table> \n      <p v-if=\"getErrorMessage\" class=\"errorMessage\">{{ getErrorMessage }}</p> \n    </div>  \n  </template>\n  \n  <script>\n  import NavBar from '../components/NavBar.vue'; \n  import axios from 'axios';\n  export default {  \n    data() {  \n      return {  \n        titles: ['111'],\n        getErrorMessage:'' \n      };  \n    },  \n    components: {\n        NavBar,\n    },\n    methods: {  \n      getTitles() {   \n        axios.post('http://localhost:8080/fillformlist', {  \n          username:this.$store.state.username\n          })  \n          .then(response => {  \n            if (response.data.success) { \n              //console.log('表单提交成功'); \n              this.titles=response.data.titles\n            }\n            else {  \n              this.getErrorMessage = response.data.message || '表单列表获取失败，请稍后再试';  \n            }\n           })  \n          .catch(error => {  \n            if (error.response) {  \n              // 后端返回的错误信息\n              this.getErrorMessage = error.response.data;   \n            }\n            else {\n              this.getErrorMessage = '表单提交失败，请稍后再试';\n            }\n          });  \n      },  \n      goToDetail(title) {  \n        this.$router.push({ name: 'FormFillDetail', params: { title: title} });  \n      }  \n    },  \n    created() {  \n      this.getTitles(); // 在组件创建时获取数据  \n    }  \n  };  \n  </script>\n  \n  <style>  \n  .container {  \n    display: flex;  \n    flex-direction: row;  \n  }  \n    \n  .form-fill{  \n    max-width: 400px;\n    margin: auto;\n  }  \n  /* 表格基础样式 */  \n.table {  \n  width: 100%; /* 表格宽度设置为100% */  \n  border-collapse: collapse; /* 合并相邻的边框 */  \n  margin-bottom: 20px; /* 底部外边距 */  \n}  \n  \n/* 表格头部样式 */  \n.table thead th {  \n  background-color: #f2f2f2; /* 浅灰色背景 */  \n  color: #333; /* 文本颜色 */  \n  padding: 10px; /* 内边距 */  \n  border-bottom: 1px solid #ddd; /* 底部边框 */  \n  text-align: left; /* 文本左对齐 */\n    font: '黑体' sans-serif;\n}  \n  \n/* 表格主体样式 */  \n.table tbody tr {  \n  border-bottom: 1px solid #ddd; /* 底部边框 */  \n}  \n  \n.table tbody td {  \n  padding: 10px; /* 内边距 */  \n  vertical-align: top; /* 垂直对齐方式 */  \n}  \n  \n/* 填写按钮样式 */  \n.table .fill-btn {  \n  margin-left: 10px; /* 左边距 */  \n  padding: 5px 10px; /* 内边距 */  \n  background-color: #6292ff; /* 蓝色背景 */  \n  color: #fff; /* 白色文本 */  \n  border: none; /* 无边框 */  \n  border-radius: 4px; /* 圆角 */  \n  cursor: pointer; /* 鼠标悬停时变为小手图标 */  \n  transition: background-color 0.3s ease; /* 背景色过渡效果 */  \n}  \n  \n/* 填写按钮点击后的样式（可选） */  \n.table .fill-btn:active {  \n  background-color: #0056b3; /* 深蓝色背景 */  \n}\n  </style>\n  "],"mappings":";AAyBE,OAAOA,MAAK,MAAO,0BAA0B;AAC7C,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,CAAC,KAAK,CAAC;MACfC,eAAe,EAAC;IAClB,CAAC;EACH,CAAC;EACDC,UAAU,EAAE;IACRL;EACJ,CAAC;EACDM,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACVN,KAAK,CAACO,IAAI,CAAC,oCAAoC,EAAE;QAC/CC,QAAQ,EAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF;MAC3B,CAAC,EACAG,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACX,IAAI,CAACY,OAAO,EAAE;UACzB;UACA,IAAI,CAACX,MAAM,GAACU,QAAQ,CAACX,IAAI,CAACC,MAAK;QACjC,OACK;UACH,IAAI,CAACC,eAAc,GAAIS,QAAQ,CAACX,IAAI,CAACa,OAAM,IAAK,gBAAgB;QAClE;MACD,CAAC,EACDC,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACJ,QAAQ,EAAE;UAClB;UACA,IAAI,CAACT,eAAc,GAAIa,KAAK,CAACJ,QAAQ,CAACX,IAAI;QAC5C,OACK;UACH,IAAI,CAACE,eAAc,GAAI,cAAc;QACvC;MACF,CAAC,CAAC;IACN,CAAC;IACDc,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,MAAM,EAAE;UAAEJ,KAAK,EAAEA;QAAK;MAAE,CAAC,CAAC;IACxE;EACF,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR,IAAI,CAACjB,SAAS,CAAC,CAAC,EAAE;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}