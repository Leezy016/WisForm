{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from './NavBar.vue';\nexport default {\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      selectedFields: [{\n        id: 'field1',\n        label: '字段1',\n        type: 'text'\n      }],\n      showForm: false,\n      formData: {}\n    };\n  },\n  methods: {\n    addField() {\n      const id = `field${this.selectedFields.length + 1}`;\n      this.selectedFields.push({\n        id,\n        label: `字段${this.selectedFields.length + 1}`,\n        type: 'text'\n      });\n    },\n    removeField(index) {\n      this.selectedFields.splice(index, 1);\n    },\n    generateForm() {\n      this.showForm = true;\n      // 生成表单数据对象，用于绑定表单输入\n      this.formData = this.selectedFields.reduce((acc, field) => {\n        acc[field.id] = '';\n        return acc;\n      });\n    },\n    submitForm() {\n      // 处理表单提交逻辑\n      console.log('提交表单:', this.formData);\n    }\n  }\n};","map":{"version":3,"names":["NavBar","components","data","selectedFields","id","label","type","showForm","formData","methods","addField","length","push","removeField","index","splice","generateForm","reduce","acc","field","submitForm","console","log"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormCreate.vue"],"sourcesContent":["\r\n<template>\r\n      <div> \r\n        <NavBar/> <!-- 引入并使用NavBar组件 -->  \r\n      </div>\r\n      <div class=\"dynamic-form\">\r\n        <div class=\"form-title-input\">  \r\n          <label for=\"formTitle\">表单标题：</label>  \r\n          <input type=\"text\" id=\"formTitle\" v-model=\"formTitle\" placeholder=\"请输入表单标题\">  \r\n        </div> \r\n\r\n        <div v-for=\"(field, index) in selectedFields\" :key=\"index\" class=\"form-item\">\r\n          <input type=\"text\" v-model=\"field.label\" placeholder=\"表单项名称\" class=\"field-input\">\r\n            <select v-model=\"field.type\" class=\"field-select\">\r\n              <option value=\"text\">文本</option>\r\n              <option value=\"number\">数字</option>\r\n              <!-- 可以根据需要添加更多的选项 -->\r\n            </select>\r\n          <button @click=\"removeField(index)\" class=\"remove-btn\">-</button>\r\n        </div>\r\n\r\n        <button @click=\"addField\" class=\"add-btn\">添加表单项</button>\r\n        <button @click=\"generateForm\" class=\"generate-btn\">确认</button>\r\n\r\n        <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"form-table\">  \r\n          <table>  \r\n            <tr v-for=\"(field, index) in selectedFields\" :key=\"index\">  \r\n              <td>  \r\n                <label :for=\"field.id\" class=\"field-label\">{{ field.label }}</label>  \r\n              </td>  \r\n              <td>  \r\n                <input :type=\"field.type\" :id=\"field.id\" v-model=\"formData[field.id]\" class=\"field-input\">  \r\n              </td>  \r\n            </tr>  \r\n          </table>  \r\n          <button type=\"submit\" class=\"submit-btn\">提交</button>  \r\n        </form>\r\n\r\n    </div>\r\n  </template>\r\n\r\n  <script>\r\n  import NavBar from './NavBar.vue'; \r\n  export default {\r\n    components: {  \r\n      NavBar\r\n    } ,\r\n    data() {\r\n      return {\r\n        selectedFields: [{ id: 'field1', label: '字段1', type: 'text' }],\r\n        showForm: false,\r\n        formData: {}\r\n      };\r\n    }, \r\n    methods: {\r\n      addField() {\r\n        const id = `field${this.selectedFields.length + 1}`;\r\n        this.selectedFields.push({ id, label: `字段${this.selectedFields.length + 1}`, type: 'text' });\r\n      },\r\n      removeField(index) {\r\n        this.selectedFields.splice(index, 1);\r\n      },\r\n      generateForm() {\r\n        this.showForm = true;\r\n        // 生成表单数据对象，用于绑定表单输入\r\n        this.formData = this.selectedFields.reduce((acc, field) => {\r\n          acc[field.id] = '';\r\n          return acc;\r\n        });\r\n      },\r\n      submitForm() {\r\n        // 处理表单提交逻辑\r\n        console.log('提交表单:', this.formData);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n\r\n<style scoped>\r\n.dynamic-form {\r\n  max-width: 400px;\r\n  margin: auto;\r\n}\r\n\r\n.form-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.field-input {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.field-select {\r\n  width: 120px;\r\n}\r\n\r\n.remove-btn {\r\n  margin-left: 10px;\r\n}\r\n\r\n.add-btn,.submit-btn , .generate-btn {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.form-table table {  \r\n  width: 100%; /* 表格宽度 */  \r\n  border-collapse: collapse; /* 合并边框 */  \r\n}  \r\n  \r\n.form-table table tr td {  \r\n  padding: 10px; /* 单元格内边距 */  \r\n  border: 1px solid #ddd; /* 单元格边框 */  \r\n}  \r\n  \r\n.form-table table tr td:first-child {  \r\n  width: 30%; /* 可以调整标签列的宽度 */  \r\n}  \r\n\r\n.form-table table tr td input {  \r\n  width: 100%; /* 输入字段占满单元格宽度 */  \r\n  box-sizing: border-box; /* 包含内边距和边框 */  \r\n}  \r\n</style>"],"mappings":";AA0CE,OAAOA,MAAK,MAAO,cAAc;AACjC,eAAe;EACbC,UAAU,EAAE;IACVD;EACF;EACAE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,CAAC;QAAEC,EAAE,EAAE,QAAQ;QAAEC,KAAK,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAO,CAAC,CAAC;MAC9DC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,CAAC;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,MAAMN,EAAC,GAAK,QAAO,IAAI,CAACD,cAAc,CAACQ,MAAK,GAAI,CAAE,EAAC;MACnD,IAAI,CAACR,cAAc,CAACS,IAAI,CAAC;QAAER,EAAE;QAAEC,KAAK,EAAG,KAAI,IAAI,CAACF,cAAc,CAACQ,MAAK,GAAI,CAAE,EAAC;QAAEL,IAAI,EAAE;MAAO,CAAC,CAAC;IAC9F,CAAC;IACDO,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAI,CAACX,cAAc,CAACY,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACtC,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,CAACT,QAAO,GAAI,IAAI;MACpB;MACA,IAAI,CAACC,QAAO,GAAI,IAAI,CAACL,cAAc,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QACzDD,GAAG,CAACC,KAAK,CAACf,EAAE,IAAI,EAAE;QAClB,OAAOc,GAAG;MACZ,CAAC,CAAC;IACJ,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX;MACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACd,QAAQ,CAAC;IACrC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}