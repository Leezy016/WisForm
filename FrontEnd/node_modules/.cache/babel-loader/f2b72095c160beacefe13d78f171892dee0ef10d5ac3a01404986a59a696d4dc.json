{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_NavBar)]), _createCommentVNode(\" <div class=\\\"user-management\\\">\\r\\n    <table class=\\\"table\\\">  \\r\\n      <thead>  \\r\\n        <tr><th>用户管理</th></tr>  \\r\\n      </thead>  \\r\\n      <tbody>  \\r\\n        <tr v-for=\\\"(title,index) in titles\\\" :key=\\\"index\\\" @click=\\\"goToDetail(title)\\\">  \\r\\n          <td>{{ title }}</td>  \\r\\n          <button type=\\\"view\\\" class=\\\"view-btn\\\" @click=\\\"goToDetail(title)\\\">查看</button>\\r\\n        </tr>  \\r\\n      </tbody>  \\r\\n    </table> \\r\\n    <p v-if=\\\"getErrorMessage\\\" class=\\\"errorMessage\\\">{{ getErrorMessage }}</p>\\r\\n    </div> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_createVNode","_component_NavBar","_createCommentVNode"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/UserManagement.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <NavBar/>\r\n    </div>\r\n  <!-- <div class=\"user-management\">\r\n    <table class=\"table\">  \r\n      <thead>  \r\n        <tr><th>用户管理</th></tr>  \r\n      </thead>  \r\n      <tbody>  \r\n        <tr v-for=\"(title,index) in titles\" :key=\"index\" @click=\"goToDetail(title)\">  \r\n          <td>{{ title }}</td>  \r\n          <button type=\"view\" class=\"view-btn\" @click=\"goToDetail(title)\">查看</button>\r\n        </tr>  \r\n      </tbody>  \r\n    </table> \r\n    <p v-if=\"getErrorMessage\" class=\"errorMessage\">{{ getErrorMessage }}</p>\r\n    </div> -->\r\n</template>\r\n\r\n<script>\r\nimport NavBar from './NavBar.vue'; \r\nimport axios from 'axios';\r\nexport default {\r\n  components: {\r\n      NavBar\r\n    },\r\n    data() {  \r\n    return {  \r\n      username:'',\r\n      names:[],\r\n      roles:[],\r\n    };  \r\n  },  \r\n  methods: {  \r\n    getNames() {  \r\n      axios.post('http://localhost:8080/viewform/select', {  \r\n        num:this.num,\r\n        name:this.$store.state.username\r\n        })  \r\n        .then(response => {  \r\n          if (response.data.success) {  \r\n            this.titles=response.data.titles\r\n          }\r\n          else {  \r\n            this.getErrorMessage = response.data.message || '表单列表获取失败，请稍后再试';  \r\n          }\r\n         })  \r\n        .catch(error => {  \r\n          if (error.response) {  \r\n            // 后端返回的错误信息\r\n            this.getErrorMessage = error.response.data;   \r\n          }\r\n          else {\r\n            this.getErrorMessage = '表单列表获取失败，请稍后再试';\r\n          }\r\n        });  \r\n    },  \r\n    goToDetail(title) {  \r\n      this.$router.push({ name: 'FormViewDetail', params: { title: title} });  \r\n    }  \r\n  },  \r\n  created() {  \r\n    this.usernames(); // 在组件创建时获取数据  \r\n  }  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-management{\r\n  max-width: 300px;\r\n  margin: auto;\r\n  }\r\n</style>\r\n"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,SACIC,mBAAA,CAEM,cADJC,YAAA,CAASC,iBAAA,E,GAEbC,mBAAA,iiBAaY,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}