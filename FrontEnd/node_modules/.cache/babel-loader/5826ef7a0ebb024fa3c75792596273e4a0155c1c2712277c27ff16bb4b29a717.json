{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from './NavBar.vue';\nimport axios from 'axios';\nexport default {\n  props: ['title'],\n  // 接收从父组件传递过来的 title \n  data() {\n    return {\n      item: [],\n      content: [],\n      getErrorMessage: '',\n      submitErrorMessage: '',\n      matchErrorMessage: '',\n      keys: [\"姓名\", \"作者姓名\", \"项目名称\", \"论文标题\"],\n      selectedValue: '',\n      isKey: false\n    };\n  },\n  components: {\n    NavBar\n  },\n  methods: {\n    onValueChange() {\n      // 当选中值改变时触发的方法（可选）  \n      console.log('Selected value changed to:', this.selectedValue);\n    },\n    Match(item, itemValue, index) {\n      console.log(`match for item: ${item}, value: ${itemValue}`);\n      axios.post('http://localhost:8080/match', {\n        item: item,\n        itemValue: itemValue\n      }).then(response => {\n        if (response.data.success) {\n          this.content[index] = response.data.itemValue;\n        }\n      });\n    },\n    keyMatch(item, itemValue) {\n      console.log(`sent item: ${item}, value: ${itemValue}`);\n      axios.post('http://localhost:8080/key-match', {\n        item: item,\n        itemValue: itemValue\n      });\n    },\n    judge(item, itemValue, index) {\n      if (this.isKey) {\n        this.keyMatch(item, itemValue);\n        this.isKey = false;\n      } else {\n        this.Match(item, itemValue, index);\n      }\n    },\n    keyJudge(item, itemValue, index) {\n      for (let i = 0; i < this.keys.length; i++) {\n        if (this.keys[i] === item) {\n          this.isKey = true;\n          break;\n        }\n      }\n      if (this.isKey === false) {\n        this.Match(item, itemValue, index);\n      }\n    },\n    getItems() {\n      axios.post('http://localhost:8080/fillform-desplay', {\n        name: this.title\n      }).then(response => {\n        if (response.data.success) {\n          this.item = response.data.item;\n        } else {\n          this.getErrorMessage = response.data.message || '表单内容获取失败，请稍后再试';\n        }\n      }).catch(error => {\n        if (error.response) {\n          // 后端返回的错误信息\n          this.getErrorMessage = error.response.data;\n        } else {\n          this.getErrorMessage = '表单内容获取失败，请稍后再试';\n        }\n      });\n    },\n    submitForm() {\n      console.log(this.content);\n      axios.post('http://localhost:8080/fillform-recieve', {\n        title: this.title,\n        filler: this.$store.state.username,\n        Item: this.item,\n        ItemValue: this.content\n      }).then(response => {\n        if (response.data.success) {\n          //console.log('表单提交成功'); \n          alert('表单提交成功！');\n          this.$router.push('/form-fill');\n        } else {\n          this.submitErrorMessage = response.data.message || '表单提交失败，请稍后再试';\n          alert(this.submiterrorMessage);\n        }\n      }).catch(error => {\n        if (error.response) {\n          // 后端返回的错误信息\n          this.submitErrorMessage = error.response.data;\n        } else {\n          this.submitErrorMessage = '表单提交失败，请稍后再试';\n        }\n      });\n    },\n    goBack() {\n      this.$router.push('/form-fill');\n    }\n  },\n  created() {\n    this.getItems();\n    this.content = Array(this.item.length).fill('');\n  }\n};","map":{"version":3,"names":["NavBar","axios","props","data","item","content","getErrorMessage","submitErrorMessage","matchErrorMessage","keys","selectedValue","isKey","components","methods","onValueChange","console","log","Match","itemValue","index","post","then","response","success","keyMatch","judge","keyJudge","i","length","getItems","name","title","message","catch","error","submitForm","filler","$store","state","username","Item","ItemValue","alert","$router","push","submiterrorMessage","goBack","created","Array","fill"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormFillDetail.vue"],"sourcesContent":["<template>  \n    <div>\n      <NavBar/>\n    </div>\n    <div class=\"form-detail\">  \n\n      <div class=\"welcome\">  \n        <img src='@/assets/welcome.png' style=\"width: 500px; height: 80px;\"  />  \n        </div>\n\n      <p>{{ title }}</p>  \n\n      <div v-for=\"(itemName, index) in item\" :key=\"index\" class=\"form-group\">  \n        <label>{{ itemName }}</label>  \n        <el-input\n        v-model=\"content[index]\"\n        style=\"width: 240px\"\n        autosize\n        type=\"textarea\"\n        @focus=\"keyJudge(item[index],content[index],index)\"\n        @blur=\"judge(item[index],content[index],index)\"\n        />\n      </div>  \n\n        <button type=\"button\" class=\"submit-btn\" @click=\"submitForm\">提交</button> \n        <button type=\"button\" class=\"return-btn\" @click=\"goBack\">返回</button>\n        <p v-if=\"getErrorMessage\" class=\"errorMessage\">{{ getErrorMessage }}</p> \n        <p v-if=\"submitErrorMessage\" class=\"errorMessage\">{{ submitErrorMessage }}</p> \n    </div>  \n  </template>  \n    \n  <script>  \n  import NavBar from './NavBar.vue'; \n  import axios from 'axios';\n  export default {  \n    props: ['title'], // 接收从父组件传递过来的 title \n    data() {  \n    return {  \n      item: [],\n      content:[],\n      getErrorMessage:'',\n      submitErrorMessage:'',\n      matchErrorMessage:'',\n      keys:[\"姓名\",\"作者姓名\",\"项目名称\",\"论文标题\"],\n      selectedValue: '',\n      isKey:false,\n    };  \n    },  \n    components: {\n      NavBar,\n    },\n    methods:{\n      onValueChange() {  \n      // 当选中值改变时触发的方法（可选）  \n      console.log('Selected value changed to:', this.selectedValue);  \n    },  \n    Match(item, itemValue,index) {  \n      console.log(`match for item: ${item}, value: ${itemValue}`); \n      axios.post('http://localhost:8080/match', {  \n        item:item,\n        itemValue:itemValue\n        })  \n        .then(response => {  \n          if (response.data.success) {  \n            this.content[index]=response.data.itemValue\n          }\n         })\n    }, \n    keyMatch(item, itemValue) {    \n        console.log(`sent item: ${item}, value: ${itemValue}`);\n      axios.post('http://localhost:8080/key-match', {  \n        item:item,\n        itemValue:itemValue\n        }) \n    },\n    judge(item,itemValue,index){\n      if(this.isKey){\n        this.keyMatch(item,itemValue);\n        this.isKey=false;\n      }\n      else{\n        this.Match(item,itemValue,index);\n      }\n    },\n    keyJudge(item,itemValue,index){  \n      for (let i = 0; i < this.keys.length; i++) {   \n        if (this.keys[i] === item) {  \n          this.isKey = true;  \n          break;  \n        }  \n      }  \n      if (this.isKey===false) {  \n        this.Match(item, itemValue,index);  \n      }  \n    },\n    getItems() {   \n      axios.post('http://localhost:8080/fillform-desplay', {\n        name:this.title,\n      })  \n      .then(response => {  \n        if (response.data.success) { \n          this.item=response.data.item;\n        }\n        else {  \n          this.getErrorMessage = response.data.message || '表单内容获取失败，请稍后再试';  \n        }\n      })  \n      .catch(error => {  \n        if (error.response) {  \n          // 后端返回的错误信息\n          this.getErrorMessage = error.response.data;   \n        }\n        else {\n          this.getErrorMessage = '表单内容获取失败，请稍后再试';\n        }\n      });  \n    },  \n    submitForm() {  \n      console.log(this.content);  \n      axios.post('http://localhost:8080/fillform-recieve', {\n        title:this.title,\n        filler:this.$store.state.username,\n        Item:this.item,\n        ItemValue:this.content\n      })  \n      .then(response => {  \n        if (response.data.success) { \n          //console.log('表单提交成功'); \n          alert('表单提交成功！');\n          this.$router.push('/form-fill');\n        }\n        else {  \n          this.submitErrorMessage = response.data.message || '表单提交失败，请稍后再试'; \n          alert(this.submiterrorMessage); \n        }\n      })  \n      .catch(error => {  \n        if (error.response) {  \n          // 后端返回的错误信息\n          this.submitErrorMessage = error.response.data;   \n        }\n        else {\n          this.submitErrorMessage = '表单提交失败，请稍后再试';\n        }\n      });  \n    },   \n    goBack(){\n      this.$router.push('/form-fill');\n    }, \n    }, \n    \n    created() {  \n      this.getItems(); \n      this.content = Array(this.item.length).fill(''); \n    },\n\n  };  \n  </script>\n\n  <style>\n  .form-detail{\n    max-width: 400px;\n    margin: auto;\n  }\n  .container {  \n    display: flex;  \n    flex-direction: row;  \n  }  \n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}