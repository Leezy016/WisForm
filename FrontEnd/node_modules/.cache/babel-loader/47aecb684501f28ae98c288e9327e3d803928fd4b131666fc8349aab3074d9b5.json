{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2d13e59e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"user-management\"\n};\nconst _hoisted_2 = {\n  class: \"table\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"用户管理\")])], -1 /* HOISTED */));\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"errorMessage\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_NavBar)]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.names, (name, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(name), 1 /* TEXT */), _createElementVNode(\"button\", {\n      type: \"view\",\n      class: \"view-btn\",\n      onClick: $event => $options.deleteUser(name)\n    }, \"查看\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.getErrorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($data.getErrorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_Fragment","_createVNode","_component_NavBar","_hoisted_1","_hoisted_2","_hoisted_3","_renderList","$data","names","name","index","_toDisplayString","type","onClick","$event","$options","deleteUser","_hoisted_4","getErrorMessage","_hoisted_5","_createCommentVNode"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/UserManagement.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <NavBar/>\r\n    </div>\r\n    \r\n  <div class=\"user-management\">\r\n    <table class=\"table\">  \r\n      <thead>  \r\n        <tr><th>用户管理</th></tr>  \r\n      </thead>  \r\n      <tbody>  \r\n        <tr v-for=\"(name,index) in names\" :key=\"index\" >  \r\n          <td>{{ name }}</td>  \r\n          <button type=\"view\" class=\"view-btn\" @click=\"deleteUser(name)\">查看</button>\r\n        </tr>  \r\n      </tbody>  \r\n    </table> \r\n    <p v-if=\"getErrorMessage\" class=\"errorMessage\">{{ getErrorMessage }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from './NavBar.vue'; \r\nimport axios from 'axios';\r\nexport default {\r\n  components: {\r\n      NavBar\r\n    },\r\n    data() {  \r\n    return {  \r\n      username:'',\r\n      names:[],\r\n      roles:[],\r\n      getErrorMessage:'',\r\n      deleteErrorMessage:'',\r\n    };  \r\n  },  \r\n  methods: {  \r\n    getNames() {  \r\n      axios.post('http://localhost:8080/viewform/select', {  \r\n        username:this.$store.state.username\r\n        })  \r\n        .then(response => {  \r\n          if (response.data.success) {  \r\n            this.names=response.data.names\r\n          }\r\n          else {  \r\n            this.getErrorMessage = response.data.message || '用户列表获取失败，请稍后再试';  \r\n          }\r\n         })  \r\n        .catch(error => {  \r\n          if (error.response) { \r\n            this.getErrorMessage = error.response.data;   \r\n          }\r\n          else {\r\n            this.getErrorMessage = '用户列表获取失败，请稍后再试';\r\n          }\r\n        });  \r\n    },  \r\n    deleteUser(username) {  \r\n      axios.post('http://localhost:8080/viewform/select', {  \r\n        username:username\r\n        })  \r\n        .then(response => {  \r\n          if (response.data.success) {  \r\n            alert('删除用户成功');\r\n          }\r\n          else {  \r\n            this.deleteErrorMessage = response.data.message || '删除用户失败，请稍后再试';  \r\n          }\r\n         })  \r\n        .catch(error => {  \r\n          if (error.response) { \r\n            this.deleteErrorMessage = error.response.data;   \r\n          }\r\n          else {\r\n            this.deleteErrorMessage = '删除用户失败，请稍后再试';\r\n          }\r\n        });\r\n    }  \r\n  },  \r\n  created() {  \r\n    this.getNames(); // 在组件创建时获取数据  \r\n  }  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-management{\r\n  max-width: 300px;\r\n  margin: auto;\r\n  }\r\n</style>\r\n"],"mappings":";;;EAKOA,KAAK,EAAC;AAAiB;;EACnBA,KAAK,EAAC;AAAO;gEAClBC,mBAAA,CAEQ,gB,aADNA,mBAAA,CAAsB,a,aAAlBA,mBAAA,CAAa,YAAT,MAAI,E;mBARpB;;EAAAC,GAAA;EAiB8BF,KAAK,EAAC;;;;uBAjBpCG,mBAAA,CAAAC,SAAA,SACIH,mBAAA,CAEM,cADJI,YAAA,CAASC,iBAAA,E,GAGbL,mBAAA,CAaQ,OAbRM,UAaQ,GAZNN,mBAAA,CAUQ,SAVRO,UAUQ,GATNC,UAEQ,EACRR,mBAAA,CAKQ,iB,kBAJNE,mBAAA,CAGKC,SAAA,QAdbM,WAAA,CAWmCC,KAAA,CAAAC,KAAK,EAXxC,CAWoBC,IAAI,EAACC,KAAK;yBAAtBX,mBAAA,CAGK;MAH8BD,GAAG,EAAEY;IAAK,IAC3Cb,mBAAA,CAAmB,YAAAc,gBAAA,CAAZF,IAAI,kBACXZ,mBAAA,CAA0E;MAAlEe,IAAI,EAAC,MAAM;MAAChB,KAAK,EAAC,UAAU;MAAEiB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACP,IAAI;OAAG,IAAE,iBAb3EQ,UAAA,E;sCAiBaV,KAAA,CAAAW,eAAe,I,cAAxBnB,mBAAA,CAAwE,KAAxEoB,UAAwE,EAAAR,gBAAA,CAAtBJ,KAAA,CAAAW,eAAe,oBAjBrEE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}