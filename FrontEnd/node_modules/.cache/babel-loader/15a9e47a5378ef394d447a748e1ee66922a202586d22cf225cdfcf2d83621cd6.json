{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-fill\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \" 请选择需要填写的表单 \", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"请选择需要填写的表单\")])], -1 /* HOISTED */);\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"errorMessage\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavBar), _hoisted_2, _createVNode(_component_el_table, {\n    data: $data.titles,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"标题\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" <template slot-scope=\\\"scope\\\">  \\n            <span>{{ scope.row.name }}</span> \\n            <el-button type=\\\"primary\\\" class=\\\"fill-btn\\\" @click=\\\"goToDetail(scope.row.name)\\\">填写</el-button>  \\n        </template>   \")]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"]), _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.titles, (title, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(title), 1 /* TEXT */), _createElementVNode(\"button\", {\n      type: \"fill\",\n      class: \"fill-btn\",\n      onClick: $event => $options.goToDetail(title)\n    }, \"填写\", 8 /* PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.getErrorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.getErrorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_createVNode","_component_NavBar","_hoisted_2","_component_el_table","data","$data","titles","style","default","_withCtx","_component_el_table_column","prop","label","_createCommentVNode","_","_hoisted_3","_hoisted_4","_Fragment","_renderList","title","index","_toDisplayString","type","onClick","$event","$options","goToDetail","_hoisted_5","getErrorMessage","_hoisted_6"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormFill2.vue"],"sourcesContent":["<template>  \n    <div class=\"form-fill\">  \n      <NavBar/>\n        <p>\n            请选择需要填写的表单\n        </p>\n\n        <el-table  \n        :data=\"titles\"  \n        style=\"width: 100%\"  \n        >  \n        <el-table-column  \n        prop=\"name\"   \n        label=\"标题\"  \n        >  \n        <!-- <template slot-scope=\"scope\">  \n            <span>{{ scope.row.name }}</span> \n            <el-button type=\"primary\" class=\"fill-btn\" @click=\"goToDetail(scope.row.name)\">填写</el-button>  \n        </template>   -->\n    </el-table-column>  \n    </el-table> \n\n\n\n      <table class=\"table\">  \n        <thead>  \n          <tr><th>请选择需要填写的表单</th></tr>  \n        </thead>  \n        <tbody>  \n          <tr v-for=\"(title,index) in titles\" :key=\"index\">  \n            <td>{{ title }}</td> \n            <button type=\"fill\" class=\"fill-btn\" @click=\"goToDetail(title)\">填写</button> \n          </tr>  \n        </tbody>  \n      </table> \n      <p v-if=\"getErrorMessage\" class=\"errorMessage\">{{ getErrorMessage }}</p> \n    </div>  \n  </template>\n  \n  <script>\n  import NavBar from '../components/NavBar.vue'; \n  import axios from 'axios';\n  export default {  \n    data() {  \n      return {  \n        titles: [],\n        getErrorMessage:'' \n      };  \n    },  \n    components: {\n        NavBar,\n    },\n    methods: {  \n      getTitles() {   \n        axios.post('http://localhost:8080/fillformlist', {  \n          username:this.$store.state.username\n          })  \n          .then(response => {  \n            if (response.data.success) { \n              //console.log('表单提交成功'); \n              this.titles=response.data.titles\n            }\n            else {  \n              this.getErrorMessage = response.data.message || '表单列表获取失败，请稍后再试';  \n            }\n           })  \n          .catch(error => {  \n            if (error.response) {  \n              // 后端返回的错误信息\n              this.getErrorMessage = error.response.data;   \n            }\n            else {\n              this.getErrorMessage = '表单提交失败，请稍后再试';\n            }\n          });  \n      },  \n      goToDetail(title) {  \n        this.$router.push({ name: 'FormFillDetail', params: { title: title} });  \n      }  \n    },  \n    created() {  \n      this.getTitles(); // 在组件创建时获取数据  \n    }  \n  };  \n  </script>\n  \n  <style>  \n  .container {  \n    display: flex;  \n    flex-direction: row;  \n  }  \n    \n  .form-fill{  \n    max-width: 400px;\n    margin: auto;\n  }  \n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAW;gCAElBC,mBAAA,CAEI,WAFD,cAEH;;EAmBKD,KAAK,EAAC;AAAO;gCAClBC,mBAAA,CAEQ,gB,aADNA,mBAAA,CAA4B,a,aAAxBA,mBAAA,CAAmB,YAAf,YAAU,E;mBA1B5B;;EAAAC,GAAA;EAmCgCF,KAAK,EAAC;;;;;;uBAlClCG,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCJC,YAAA,CAASC,iBAAA,GACPC,UAEI,EAEJF,YAAA,CAaOG,mBAAA;IAZNC,IAAI,EAAEC,KAAA,CAAAC,MAAM;IACbC,KAAmB,EAAnB;MAAA;IAAA;;IATRC,OAAA,EAAAC,QAAA,CAWQ,MAQc,CARdT,YAAA,CAQcU,0BAAA;MAPdC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAC;;MAbdJ,OAAA,EAAAC,QAAA,CAeQ,MAGiB,CAHjBI,mBAAA,iOAGiB,C;MAlBzBC,CAAA;;IAAAA,CAAA;+BAwBMlB,mBAAA,CAUQ,SAVRmB,UAUQ,GATNC,UAEQ,EACRpB,mBAAA,CAKQ,iB,kBAJNE,mBAAA,CAGKmB,SAAA,QAhCfC,WAAA,CA6BsCb,KAAA,CAAAC,MAAM,EA7B5C,CA6BsBa,KAAK,EAACC,KAAK;yBAAvBtB,mBAAA,CAGK;MAHgCD,GAAG,EAAEuB;IAAK,IAC7CxB,mBAAA,CAAoB,YAAAyB,gBAAA,CAAbF,KAAK,kBACZvB,mBAAA,CAA2E;MAAnE0B,IAAI,EAAC,MAAM;MAAC3B,KAAK,EAAC,UAAU;MAAE4B,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACP,KAAK;OAAG,IAAE,iBA/B9EQ,UAAA,E;sCAmCetB,KAAA,CAAAuB,eAAe,I,cAAxB9B,mBAAA,CAAwE,KAAxE+B,UAAwE,EAAAR,gBAAA,CAAtBhB,KAAA,CAAAuB,eAAe,oBAnCvEf,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}