{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-fill\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"欢迎使用Wi d\")], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"请选择需要填写的表单\")], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"table\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"表单标题\")])], -1 /* HOISTED */);\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"errorMessage\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavBar), _hoisted_2, _hoisted_3, _createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.titles, (title, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(title), 1 /* TEXT */), _createElementVNode(\"button\", {\n      type: \"fill\",\n      class: \"fill-btn\",\n      onClick: $event => $options.goToDetail(title)\n    }, \"填写\", 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.getErrorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString($data.getErrorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_createVNode","_component_NavBar","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","$data","titles","title","index","_toDisplayString","type","onClick","$event","$options","goToDetail","_hoisted_6","getErrorMessage","_hoisted_7","_createCommentVNode"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormFill2.vue"],"sourcesContent":["<template>  \n    <div class=\"form-fill\">  \n      <NavBar/>\n      <div>\n        <p>欢迎使用Wi d</p>\n      </div>\n      <div>\n        <p>请选择需要填写的表单</p>\n      </div>\n      <table class=\"table\">  \n        <thead>  \n          <tr><th>表单标题</th></tr>  \n        </thead>  \n        <tbody>  \n          <tr v-for=\"(title,index) in titles\" :key=\"index\">  \n            <td>{{ title }}</td> \n            <button type=\"fill\" class=\"fill-btn\" @click=\"goToDetail(title)\">填写</button> \n          </tr>  \n        </tbody>  \n      </table> \n      <p v-if=\"getErrorMessage\" class=\"errorMessage\">{{ getErrorMessage }}</p> \n    </div>  \n  </template>\n  \n  <script>\n  import NavBar from '../components/NavBar.vue'; \n  import axios from 'axios';\n  export default {  \n    data() {  \n      return {  \n        titles: ['111'],\n        getErrorMessage:'' \n      };  \n    },  \n    components: {\n        NavBar,\n    },\n    methods: {  \n      getTitles() {   \n        axios.post('http://localhost:8080/fillformlist', {  \n          username:this.$store.state.username\n          })  \n          .then(response => {  \n            if (response.data.success) { \n              //console.log('表单提交成功'); \n              this.titles=response.data.titles\n            }\n            else {  \n              this.getErrorMessage = response.data.message || '表单列表获取失败，请稍后再试';  \n            }\n           })  \n          .catch(error => {  \n            if (error.response) {  \n              // 后端返回的错误信息\n              this.getErrorMessage = error.response.data;   \n            }\n            else {\n              this.getErrorMessage = '表单提交失败，请稍后再试';\n            }\n          });  \n      },  \n      goToDetail(title) {  \n        this.$router.push({ name: 'FormFillDetail', params: { title: title} });  \n      }  \n    },  \n    created() {  \n      this.getTitles(); // 在组件创建时获取数据  \n    }  \n  };  \n  </script>\n  \n  <style>  \n  .container {  \n    display: flex;  \n    flex-direction: row;  \n  }  \n    \n  .form-fill{  \n    max-width: 400px;\n    margin: auto;\n  }  \n  /* 表格基础样式 */  \n.table {  \n  width: 100%; /* 表格宽度设置为100% */  \n  border-collapse: collapse; /* 合并相邻的边框 */  \n  margin-bottom: 20px; /* 底部外边距 */  \n}  \n  \n/* 表格头部样式 */  \n.table thead th {  \n  background-color: #f2f2f2; /* 浅灰色背景 */  \n  color: #333; /* 文本颜色 */  \n  padding: 10px; /* 内边距 */  \n  border-bottom: 1px solid #ddd; /* 底部边框 */  \n  text-align: left; /* 文本左对齐 */\n    font: '黑体' sans-serif;\n}  \n  \n/* 表格主体样式 */  \n.table tbody tr {  \n  border-bottom: 1px solid #ddd; /* 底部边框 */  \n}  \n  \n.table tbody td {  \n  padding: 10px; /* 内边距 */  \n  vertical-align: top; /* 垂直对齐方式 */  \n}  \n  \n/* 填写按钮样式 */  \n.table .fill-btn {  \n  margin-left: 10px; /* 左边距 */  \n  padding: 5px 10px; /* 内边距 */  \n  background-color: #6292ff; /* 蓝色背景 */  \n  color: #fff; /* 白色文本 */  \n  border: none; /* 无边框 */  \n  border-radius: 4px; /* 圆角 */  \n  cursor: pointer; /* 鼠标悬停时变为小手图标 */  \n  transition: background-color 0.3s ease; /* 背景色过渡效果 */  \n}  \n  \n/* 填写按钮点击后的样式（可选） */  \n.table .fill-btn:active {  \n  background-color: #0056b3; /* 深蓝色背景 */  \n}\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAW;gCAEpBC,mBAAA,CAEM,c,aADJA,mBAAA,CAAe,WAAZ,UAAQ,E;gCAEbA,mBAAA,CAEM,c,aADJA,mBAAA,CAAiB,WAAd,YAAU,E;;EAERD,KAAK,EAAC;AAAO;gCAClBC,mBAAA,CAEQ,gB,aADNA,mBAAA,CAAsB,a,aAAlBA,mBAAA,CAAa,YAAT,MAAI,E;mBAXtB;;EAAAC,GAAA;EAoBgCF,KAAK,EAAC;;;;uBAnBlCG,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,YAAA,CAASC,iBAAA,GACTC,UAEM,EACNC,UAEM,EACNP,mBAAA,CAUQ,SAVRQ,UAUQ,GATNC,UAEQ,EACRT,mBAAA,CAKQ,iB,kBAJNE,mBAAA,CAGKQ,SAAA,QAjBfC,WAAA,CAcsCC,KAAA,CAAAC,MAAM,EAd5C,CAcsBC,KAAK,EAACC,KAAK;yBAAvBb,mBAAA,CAGK;MAHgCD,GAAG,EAAEc;IAAK,IAC7Cf,mBAAA,CAAoB,YAAAgB,gBAAA,CAAbF,KAAK,kBACZd,mBAAA,CAA2E;MAAnEiB,IAAI,EAAC,MAAM;MAAClB,KAAK,EAAC,UAAU;MAAEmB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACP,KAAK;OAAG,IAAE,iBAhB9EQ,UAAA,E;sCAoBeV,KAAA,CAAAW,eAAe,I,cAAxBrB,mBAAA,CAAwE,KAAxEsB,UAAwE,EAAAR,gBAAA,CAAtBJ,KAAA,CAAAW,eAAe,oBApBvEE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}