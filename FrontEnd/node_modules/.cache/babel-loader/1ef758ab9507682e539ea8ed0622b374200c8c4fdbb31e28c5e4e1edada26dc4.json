{"ast":null,"code":"export default {\n  name: 'NavBar',\n  data() {\n    return {\n      showDropdown: false // 控制下拉菜单的显示与隐藏  \n    };\n  },\n  methods: {\n    handleClickOutside(event) {\n      // 当点击下拉菜单以外的地方时隐藏下拉菜单  \n      if (!(event.target.closest('.dropdown-menu') || event.target.closest('a'))) {\n        this.showDropdown = false;\n      }\n    }\n  },\n  computed: {\n    // ... 省略了permissions, textMap, linkMap的计算属性  \n  },\n  mounted() {\n    // 添加事件监听器以处理点击下拉菜单外部的事件  \n    document.body.addEventListener('click', this.handleClickOutside);\n  },\n  beforeDestroy() {\n    // 组件销毁前移除事件监听器  \n    document.body.removeEventListener('click', this.handleClickOutside);\n  }\n};","map":{"version":3,"names":["name","data","showDropdown","methods","handleClickOutside","event","target","closest","computed","mounted","document","body","addEventListener","beforeDestroy","removeEventListener"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/NavBar.vue"],"sourcesContent":["<template>    \r\n  <nav class=\"sidebar\">    \r\n    <ul>    \r\n      <li v-for=\"permission in permissions\" :key=\"permission\">    \r\n        <a   \r\n          v-if=\"textMap[permission] === '查看表单'\"   \r\n          @click=\"showDropdown = true\"   \r\n          :href=\"'#'\" \r\n        >  \r\n          {{ textMap[permission] }}  \r\n        </a>  \r\n        <!-- 下拉菜单 -->  \r\n        <div   \r\n          v-if=\"showDropdown && textMap[permission] === '查看表单'\"   \r\n          class=\"dropdown-menu\"  \r\n          @click.stop=\"handleClickOutside\"  \r\n        >  \r\n          <p>我填写的</p>  \r\n          <p>我发布的</p>  \r\n          <p>我可查看</p>  \r\n        </div>  \r\n      </li>   \r\n    </ul>    \r\n  </nav>    \r\n</template>    \r\n  \r\n<script>    \r\nexport default {    \r\n  name: 'NavBar',    \r\n  data() {  \r\n    return {  \r\n      showDropdown: false, // 控制下拉菜单的显示与隐藏  \r\n    };  \r\n  },  \r\n  methods: {  \r\n    handleClickOutside(event) {  \r\n      // 当点击下拉菜单以外的地方时隐藏下拉菜单  \r\n      if (!(event.target.closest('.dropdown-menu') || event.target.closest('a'))) {  \r\n        this.showDropdown = false;  \r\n      }  \r\n    },  \r\n  },  \r\n  computed: {    \r\n    // ... 省略了permissions, textMap, linkMap的计算属性  \r\n  },    \r\n  mounted() {  \r\n    // 添加事件监听器以处理点击下拉菜单外部的事件  \r\n    document.body.addEventListener('click', this.handleClickOutside);  \r\n  },  \r\n  beforeDestroy() {  \r\n    // 组件销毁前移除事件监听器  \r\n    document.body.removeEventListener('click', this.handleClickOutside);  \r\n  },  \r\n};    \r\n</script>  \r\n\r\n<style scoped>  \r\n.sidebar {  \r\n  position: fixed; /* 或者 absolute，取决于你的页面布局需求 */  \r\n  top: 0;  \r\n  left: 0;  \r\n  bottom: 0; /* 如果你想让侧边栏占满整个页面高度 */  \r\n  width: 200px; /* 设置侧边栏宽度 */  \r\n  background-color: #f8f9fa; /* 设置背景颜色 */  \r\n  overflow-y: auto; /* 如果内容太多，允许垂直滚动 */  \r\n  padding-top: 20px; /* 顶部内边距，可选 */  \r\n}  \r\n  \r\n.sidebar ul {  \r\n  list-style-type: none;  \r\n  padding: 0;  \r\n  margin: 0;  \r\n}  \r\n  \r\n.sidebar li {  \r\n  padding: 10px; /* 设置列表项的内边距 */  \r\n  border-bottom: 1px solid #ddd; /* 可选，设置列表项之间的分隔线 */  \r\n}  \r\n  \r\n/* 如果你希望点击侧边栏链接时不产生默认的蓝色背景 */  \r\n.sidebar li a {  \r\n  color: inherit;  \r\n  text-decoration: none;  \r\n}  \r\n  \r\n</style>"],"mappings":"AA2BA,eAAe;EACbA,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,KAAK,CAAE;IACvB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,kBAAkBA,CAACC,KAAK,EAAE;MACxB;MACA,IAAI,EAAEA,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC,gBAAgB,KAAKF,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;QAC1E,IAAI,CAACL,YAAW,GAAI,KAAK;MAC3B;IACF;EACF,CAAC;EACDM,QAAQ,EAAE;IACR;EAAA,CACD;EACDC,OAAOA,CAAA,EAAG;IACR;IACAC,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACR,kBAAkB,CAAC;EAClE,CAAC;EACDS,aAAaA,CAAA,EAAG;IACd;IACAH,QAAQ,CAACC,IAAI,CAACG,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACV,kBAAkB,CAAC;EACrE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}