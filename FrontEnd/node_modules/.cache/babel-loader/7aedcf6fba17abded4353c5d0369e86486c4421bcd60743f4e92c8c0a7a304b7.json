{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4295d220\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"sidebar\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"我填写的\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"我发布的\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"我可查看\", -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_2, _hoisted_3, _hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"nav\", _hoisted_1, [_createElementVNode(\"ul\", null, [_createCommentVNode(\" 使用 v-for 遍历 permissions 并根据权限显示不同的文本 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.permissions, permission => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: permission\n    }, [_createCommentVNode(\" <a v-if=\\\"textMap[permission]\\\" :href=\\\"linkMap[permission]\\\">  \\r\\n          {{ textMap[permission] }}  \\r\\n        </a> \"), $options.textMap[permission] === '查看表单' ? (_openBlock(), _createElementBlock(\"a\", {\n      key: 0,\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.showDropdown = true),\n      href: '#'\n    }, _toDisplayString($options.textMap[permission]), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _ctx.showDropdown && $options.textMap[permission] === '查看表单' ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      class: \"dropdown-menu\",\n      onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.handleClickOutside && _ctx.handleClickOutside(...args), [\"stop\"]))\n    }, [..._hoisted_5])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createElementBlock","_hoisted_1","_createCommentVNode","_Fragment","_renderList","$options","permissions","permission","key","textMap","onClick","_cache","$event","_ctx","showDropdown","href","_withModifiers","args","handleClickOutside","_hoisted_5"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/NavBar.vue"],"sourcesContent":["<template>  \r\n  <nav class = \"sidebar\">  \r\n    <ul>  \r\n      <!-- 使用 v-for 遍历 permissions 并根据权限显示不同的文本 -->  \r\n      <li v-for=\"permission in permissions\" :key=\"permission\">  \r\n        <!-- <a v-if=\"textMap[permission]\" :href=\"linkMap[permission]\">  \r\n          {{ textMap[permission] }}  \r\n        </a> -->\r\n\r\n        <a   \r\n          v-if=\"textMap[permission] === '查看表单'\"   \r\n          @click=\"showDropdown = true\"   \r\n          :href=\"'#'\" \r\n        >  \r\n          {{ textMap[permission] }}  \r\n        </a>\r\n\r\n        <div   \r\n          v-if=\"showDropdown && textMap[permission] === '查看表单'\"   \r\n          class=\"dropdown-menu\"  \r\n          @click.stop=\"handleClickOutside\"  \r\n        >  \r\n          <p>我填写的</p>  \r\n          <p>我发布的</p>  \r\n          <p>我可查看</p>  \r\n        </div> \r\n\r\n      </li> \r\n    </ul>  \r\n  </nav>  \r\n</template>  \r\n  \r\n<script>  \r\nexport default {  \r\n  name: 'NavBar',  \r\n  computed: {  \r\n    // 使用计算属性从 Vuex store 中获取 permissions  \r\n    permissions() {  \r\n      return this.$store.state.permissions;  \r\n    },  \r\n    // 可选的 permissionMap 对象，用于将权限ID映射到文本 \r\n    textMap() {  \r\n      return {  \r\n        1: '查看表单',\r\n        2: '创建表单',  \r\n        3: '填写表单',\r\n        4: '管理人员'\r\n      };  \r\n    },\r\n    linkMap() {  \r\n      return {  \r\n        1: '/form-view',\r\n        2: '/form-create',  \r\n        3: '/form-fill',\r\n        4: '/user-management'\r\n      };  \r\n    },  \r\n  },  \r\n};  \r\n</script>\r\n\r\n<style scoped>  \r\n.sidebar {  \r\n  position: fixed; /* 或者 absolute，取决于你的页面布局需求 */  \r\n  top: 0;  \r\n  left: 0;  \r\n  bottom: 0; /* 如果你想让侧边栏占满整个页面高度 */  \r\n  width: 200px; /* 设置侧边栏宽度 */  \r\n  background-color: #f8f9fa; /* 设置背景颜色 */  \r\n  overflow-y: auto; /* 如果内容太多，允许垂直滚动 */  \r\n  padding-top: 20px; /* 顶部内边距，可选 */  \r\n}  \r\n  \r\n.sidebar ul {  \r\n  list-style-type: none;  \r\n  padding: 0;  \r\n  margin: 0;  \r\n}  \r\n  \r\n.sidebar li {  \r\n  padding: 10px; /* 设置列表项的内边距 */  \r\n  border-bottom: 1px solid #ddd; /* 可选，设置列表项之间的分隔线 */  \r\n}  \r\n  \r\n/* 如果你希望点击侧边栏链接时不产生默认的蓝色背景 */  \r\n.sidebar li a {  \r\n  color: inherit;  \r\n  text-decoration: none;  \r\n}  \r\n  \r\n</style>"],"mappings":";;;EACOA,KAAK,EAAG;AAAS;gEAqBdC,mBAAA,CAAW,WAAR,MAAI;gEACPA,mBAAA,CAAW,WAAR,MAAI;gEACPA,mBAAA,CAAW,WAAR,MAAI;oBAFPC,UAAW,EACXC,UAAW,EACXC,UAAW,C;;uBAvBnBC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJL,mBAAA,CA0BK,aAzBHM,mBAAA,0CAA6C,G,kBAC7CF,mBAAA,CAuBKG,SAAA,QA3BXC,WAAA,CAI+BC,QAAA,CAAAC,WAAW,EAAzBC,UAAU;yBAArBP,mBAAA,CAuBK;MAvBkCQ,GAAG,EAAED;IAAU,IACpDL,mBAAA,+HAEQ,EAGAG,QAAA,CAAAI,OAAO,CAACF,UAAU,gB,cAD1BP,mBAAA,CAMI;MAfZQ,GAAA;MAWWE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,YAAY;MACnBC,IAAI,EAAE;wBAEJV,QAAA,CAAAI,OAAO,CAACF,UAAU,qBAd/BL,mBAAA,gBAkBgBW,IAAA,CAAAC,YAAY,IAAIT,QAAA,CAAAI,OAAO,CAACF,UAAU,gB,cAD1CP,mBAAA,CAQM;MAzBdQ,GAAA;MAmBUb,KAAK,EAAC,eAAe;MACpBe,OAAK,EAAAC,MAAA,QAAAA,MAAA,MApBhBK,cAAA,KAAAC,IAAA,KAoBuBJ,IAAA,CAAAK,kBAAA,IAAAL,IAAA,CAAAK,kBAAA,IAAAD,IAAA,CAAkB;OApBzC,IAAAE,UAAA,MAAAjB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}