{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nimport _imports_0 from '@/assets/welcome.png';\nconst _hoisted_1 = {\n  class: \"form-view\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"welcome\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  style: {\n    \"width\": \"500px\",\n    \"height\": \"80px\"\n  }\n})], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"color\": \"black\"\n  }\n}, \"请选择需查看的表单\")], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"table\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"表单标题\")])], -1 /* HOISTED */);\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"errorMessage\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavBar), _hoisted_2, _hoisted_3, _createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.titles, (title, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(title), 1 /* TEXT */), _createElementVNode(\"button\", {\n      type: \"view\",\n      class: \"view-btn\",\n      onClick: $event => $options.goToDetail(title)\n    }, \"查看\", 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.getErrorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString($data.getErrorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","src","style","key","_createElementBlock","_hoisted_1","_createVNode","_component_NavBar","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","$data","titles","title","index","_toDisplayString","type","onClick","$event","$options","goToDetail","_hoisted_6","getErrorMessage","_hoisted_7","_createCommentVNode"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormView.vue"],"sourcesContent":["<template>  \r\n  <div class=\"form-view\">  \r\n      <NavBar/>\r\n\r\n      <div class=\"welcome\">  \r\n        <img src='@/assets/welcome.png' style=\"width: 500px; height: 80px;\"  />  \r\n        </div>\r\n      <div class=\"text\">\r\n        <p style=\"color: black;\">请选择需查看的表单</p>\r\n      </div>\r\n\r\n    <table class=\"table\">  \r\n      <thead>  \r\n        <tr><th>表单标题</th></tr>  \r\n      </thead>  \r\n      <tbody>  \r\n        <tr v-for=\"(title,index) in titles\" :key=\"index\" >  \r\n          <td>{{ title }}</td>  \r\n          <button type=\"view\" class=\"view-btn\" @click=\"goToDetail(title)\">查看</button>\r\n        </tr>  \r\n      </tbody>  \r\n    </table> \r\n    <p v-if=\"getErrorMessage\" class=\"errorMessage\">{{ getErrorMessage }}</p> \r\n  </div>  \r\n</template>\r\n\r\n<script>\r\nimport NavBar from '../components/NavBar.vue'; \r\nimport axios from 'axios';\r\nexport default {  \r\n  props: ['num'],\r\n  data() {  \r\n    return {  \r\n      titles: ['titile1'],\r\n      getErrorMessage:'' \r\n    };  \r\n  },  \r\n  components: {\r\n      NavBar,\r\n  },\r\n  methods: {  \r\n    getTitles() {  \r\n      axios.post('http://localhost:8080/viewform/select', {  \r\n        num:this.num,\r\n        name:this.$store.state.username\r\n        })  \r\n        .then(response => {  \r\n          if (response.data.success) {  \r\n            this.titles=response.data.titles\r\n          }\r\n          else {  \r\n            this.getErrorMessage = response.data.message || '表单列表获取失败，请稍后再试';  \r\n          }\r\n         })  \r\n        .catch(error => {  \r\n          if (error.response) {  \r\n            // 后端返回的错误信息\r\n            this.getErrorMessage = error.response.data;   \r\n          }\r\n          else {\r\n            this.getErrorMessage = '表单列表获取失败，请稍后再试';\r\n          }\r\n        });  \r\n    },  \r\n    goToDetail(title) {  \r\n      this.$router.push({ name: 'FormViewDetail', params: { title: title} });  \r\n    }  \r\n  },  \r\n  created() {  \r\n    this.getTitles(); // 在组件创建时获取数据  \r\n    //console.log(this.titles);\r\n  }  \r\n};  \r\n</script>\r\n\r\n<style>  \r\n.text{\r\n    font-family: '黑体';\r\n    padding: 0;\r\n    color: black;\r\n    font-size: 20px;\r\n    line-height: 30px;\r\n    opacity: .6;\r\n    text-align: center;\r\n    margin-top: 10px;\r\n    margin-bottom: 20px;\r\n  } \r\n\r\n  .container {  \r\n    display: flex;  \r\n    flex-direction: row;  \r\n  }  \r\n    \r\n  .form-fill{  \r\n    max-width: 400px;\r\n    margin: auto;\r\n  }  \r\n  /* 表格基础样式 */  \r\n.table {  \r\n  width: 100%; /* 表格宽度设置为100% */  \r\n  border-collapse: collapse; /* 合并相邻的边框 */  \r\n  margin-bottom: 20px; /* 底部外边距 */  \r\n}  \r\n  \r\n/* 表格头部样式 */  \r\n.table thead th {  \r\n  background-color: #f2f2f2; /* 浅灰色背景 */  \r\n  color: #333; /* 文本颜色 */  \r\n  padding: 10px; /* 内边距 */  \r\n  border-bottom: 1px solid #ddd; /* 底部边框 */  \r\n  text-align: left; /* 文本左对齐 */\r\n    font: '黑体' sans-serif;\r\n}  \r\n  \r\n/* 表格主体样式 */  \r\n.table tbody tr {  \r\n  border-bottom: 1px solid #ddd; /* 底部边框 */  \r\n}  \r\n  \r\n.table tbody td {  \r\n  padding: 10px; /* 内边距 */  \r\n  vertical-align: top; /* 垂直对齐方式 */  \r\n}  \r\n  \r\n/* 填写按钮样式 */  \r\n.table .fill-btn {  \r\n  margin-left: 10px; /* 左边距 */  \r\n  padding: 5px 10px; /* 内边距 */  \r\n  background-color: #6292ff; /* 蓝色背景 */  \r\n  color: #fff; /* 白色文本 */  \r\n  border: none; /* 无边框 */  \r\n  border-radius: 8px; /* 圆角 */  \r\n  cursor: pointer; /* 鼠标悬停时变为小手图标 */  \r\n  transition: background-color 0.3s ease; /* 背景色过渡效果 */  \r\n  margin-top: 7px;\r\n}  \r\n  \r\n/* 填写按钮点击后的样式（可选） */  \r\n.table .fill-btn:active {  \r\n  background-color: #0056b3; /* 深蓝色背景 */  \r\n}\r\n.container {  \r\n  display: flex;  \r\n  flex-direction: row;  \r\n}  \r\n  \r\n.form-view{  \r\n  max-width: 400px;\r\n  margin: auto;\r\n}  \r\n</style>\r\n"],"mappings":";OAKaA,UAA0B;;EAJhCC,KAAK,EAAC;AAAW;gCAGlBC,mBAAA,CAEQ;EAFHD,KAAK,EAAC;AAAS,I,aAClBC,mBAAA,CAAuE;EAAlEC,GAA0B,EAA1BH,UAA0B;EAACI,KAAmC,EAAnC;IAAA;IAAA;EAAA;;gCAElCF,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAM,I,aACfC,mBAAA,CAAsC;EAAnCE,KAAqB,EAArB;IAAA;EAAA;AAAqB,GAAC,WAAS,E;;EAG/BH,KAAK,EAAC;AAAO;gCAClBC,mBAAA,CAEQ,gB,aADNA,mBAAA,CAAsB,a,aAAlBA,mBAAA,CAAa,YAAT,MAAI,E;mBAbpB;;EAAAG,GAAA;EAsB8BJ,KAAK,EAAC;;;;uBArBlCK,mBAAA,CAsBM,OAtBNC,UAsBM,GArBFC,YAAA,CAASC,iBAAA,GAETC,UAEQ,EACRC,UAEM,EAERT,mBAAA,CAUQ,SAVRU,UAUQ,GATNC,UAEQ,EACRX,mBAAA,CAKQ,iB,kBAJNI,mBAAA,CAGKQ,SAAA,QAnBbC,WAAA,CAgBoCC,KAAA,CAAAC,MAAM,EAhB1C,CAgBoBC,KAAK,EAACC,KAAK;yBAAvBb,mBAAA,CAGK;MAHgCD,GAAG,EAAEc;IAAK,IAC7CjB,mBAAA,CAAoB,YAAAkB,gBAAA,CAAbF,KAAK,kBACZhB,mBAAA,CAA2E;MAAnEmB,IAAI,EAAC,MAAM;MAACpB,KAAK,EAAC,UAAU;MAAEqB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACP,KAAK;OAAG,IAAE,iBAlB5EQ,UAAA,E;sCAsBaV,KAAA,CAAAW,eAAe,I,cAAxBrB,mBAAA,CAAwE,KAAxEsB,UAAwE,EAAAR,gBAAA,CAAtBJ,KAAA,CAAAW,eAAe,oBAtBrEE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}