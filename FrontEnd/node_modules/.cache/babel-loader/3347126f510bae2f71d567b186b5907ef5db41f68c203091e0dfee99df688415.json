{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-fill\"\n};\nconst _hoisted_2 = {\n  class: \"table\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"请选择需要填写的表单\")])], -1 /* HOISTED */);\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"errorMessage\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavBar), _createVNode(_component_el_table, {\n    data: _ctx.tableData,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"date\",\n      label: \"Date\",\n      width: \"180\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"Name\",\n      width: \"180\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"address\",\n      label: \"Address\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"]), _createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.titles, (title, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(title), 1 /* TEXT */), _createElementVNode(\"button\", {\n      type: \"fill\",\n      class: \"fill-btn\",\n      onClick: $event => $options.goToDetail(title)\n    }, \"填写\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.getErrorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($data.getErrorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_createVNode","_component_NavBar","_component_el_table","data","_ctx","tableData","style","default","_withCtx","_component_el_table_column","prop","label","width","_","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","titles","title","index","_toDisplayString","type","onClick","$event","$options","goToDetail","_hoisted_4","getErrorMessage","_hoisted_5","_createCommentVNode"],"sources":["/Users/aoliliaoao/Downloads/WisForm/FrontEnd/src/components/FormFill2.vue"],"sourcesContent":["<template>  \n    <div class=\"form-fill\">  \n      <NavBar/>\n\n      <el-table :data=\"tableData\" style=\"width: 100%\">\n    <el-table-column prop=\"date\" label=\"Date\" width=\"180\" />\n    <el-table-column prop=\"name\" label=\"Name\" width=\"180\" />\n    <el-table-column prop=\"address\" label=\"Address\" />\n  </el-table>\n\n\n\n      <table class=\"table\">  \n        <thead>  \n          <tr><th>请选择需要填写的表单</th></tr>  \n        </thead>  \n        <tbody>  \n          <tr v-for=\"(title,index) in titles\" :key=\"index\">  \n            <td>{{ title }}</td> \n            <button type=\"fill\" class=\"fill-btn\" @click=\"goToDetail(title)\">填写</button> \n          </tr>  \n        </tbody>  \n      </table> \n      <p v-if=\"getErrorMessage\" class=\"errorMessage\">{{ getErrorMessage }}</p> \n    </div>  \n  </template>\n  \n  <script>\n  import NavBar from '../components/NavBar.vue'; \n  import axios from 'axios';\n  export default {  \n    data() {  \n      return {  \n        titles: [],\n        getErrorMessage:'' \n      };  \n    },  \n    components: {\n        NavBar,\n    },\n    methods: {  \n      getTitles() {   \n        axios.post('http://localhost:8080/fillformlist', {  \n          username:this.$store.state.username\n          })  \n          .then(response => {  \n            if (response.data.success) { \n              //console.log('表单提交成功'); \n              this.titles=response.data.titles\n            }\n            else {  \n              this.getErrorMessage = response.data.message || '表单列表获取失败，请稍后再试';  \n            }\n           })  \n          .catch(error => {  \n            if (error.response) {  \n              // 后端返回的错误信息\n              this.getErrorMessage = error.response.data;   \n            }\n            else {\n              this.getErrorMessage = '表单提交失败，请稍后再试';\n            }\n          });  \n      },  \n      goToDetail(title) {  \n        this.$router.push({ name: 'FormFillDetail', params: { title: title} });  \n      }  \n    },  \n    created() {  \n      this.getTitles(); // 在组件创建时获取数据  \n    }  \n  };  \n  </script>\n  \n  <style>  \n  .container {  \n    display: flex;  \n    flex-direction: row;  \n  }  \n    \n  .form-fill{  \n    max-width: 400px;\n    margin: auto;\n  }  \n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAW;;EAWbA,KAAK,EAAC;AAAO;gCAClBC,mBAAA,CAEQ,gB,aADNA,mBAAA,CAA4B,a,aAAxBA,mBAAA,CAAmB,YAAf,YAAU,E;mBAd5B;;EAAAC,GAAA;EAuBgCF,KAAK,EAAC;;;;;;uBAtBlCG,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,YAAA,CAASC,iBAAA,GAETD,YAAA,CAIOE,mBAAA;IAJIC,IAAI,EAAEC,IAAA,CAAAC,SAAS;IAAEC,KAAmB,EAAnB;MAAA;IAAA;;IAJlCC,OAAA,EAAAC,QAAA,CAKI,MAAwD,CAAxDR,YAAA,CAAwDS,0BAAA;MAAvCC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;QAChDZ,YAAA,CAAwDS,0BAAA;MAAvCC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;QAChDZ,YAAA,CAAkDS,0BAAA;MAAjCC,IAAI,EAAC,SAAS;MAACC,KAAK,EAAC;;IAP1CE,CAAA;+BAYMjB,mBAAA,CAUQ,SAVRkB,UAUQ,GATNC,UAEQ,EACRnB,mBAAA,CAKQ,iB,kBAJNE,mBAAA,CAGKkB,SAAA,QApBfC,WAAA,CAiBsCC,KAAA,CAAAC,MAAM,EAjB5C,CAiBsBC,KAAK,EAACC,KAAK;yBAAvBvB,mBAAA,CAGK;MAHgCD,GAAG,EAAEwB;IAAK,IAC7CzB,mBAAA,CAAoB,YAAA0B,gBAAA,CAAbF,KAAK,kBACZxB,mBAAA,CAA2E;MAAnE2B,IAAI,EAAC,MAAM;MAAC5B,KAAK,EAAC,UAAU;MAAE6B,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACP,KAAK;OAAG,IAAE,iBAnB9EQ,UAAA,E;sCAuBeV,KAAA,CAAAW,eAAe,I,cAAxB/B,mBAAA,CAAwE,KAAxEgC,UAAwE,EAAAR,gBAAA,CAAtBJ,KAAA,CAAAW,eAAe,oBAvBvEE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}